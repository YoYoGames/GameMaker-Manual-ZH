<?xml version="1.0" encoding="UTF-8"?>        

<glossgroup id="Default">          
<title>Glossary Definitions</title>        
<glossentry id="Default_absolute">
<glossterm>绝对的</glossterm>
<glossdef>绝对值是指忽略数值的符号，基本上是将所有数值转换成正数或零。因此，例如，-10的绝对值是10。</glossdef></glossentry>
<glossentry id="Default_algorithm">
<glossterm>算法</glossterm>
<glossdef>一个算法基本上是一组指令或规则，旨在解决一个明确的问题。这个问题可以是简单的，如两个数字相加，也可以是复杂的，如将视频文件从一种格式转换为另一种格式，或将音频压缩成更小的文件大小。</glossdef></glossentry>
<glossentry id="Default_anti-aliasing">
<glossterm>抗锯齿</glossterm>
<glossdef>这是一种技术，通过将边缘的颜色与周围像素的颜色相混合，使原本锯齿状的线条或纹理变得平滑。其结果应该是一个更令人愉快和真实的外观，这取决于效果的强度。</glossdef></glossentry>
<glossentry id="Default_API">
<glossterm>API</glossterm>
<glossdef>缩写 "API "代表应用编程接口，这是指用于建立软件应用程序的规则、例程和协议集。API有助于与第三方程序或服务的沟通，可用于构建不同的软件。Facebook和Twitter等公司积极使用API来帮助开发者更容易地访问他们的服务，在GameMaker Studio 2中，你会看到在谈论扩展时使用的API缩略语--例如，Google Play Services API或Amazon Game On API。</glossdef></glossentry>
<glossentry id="Default_application_surface">
<glossterm>应用面</glossterm>
<glossdef>应用程序表面是一个特殊的内置表面，GameMaker Studio 2将在游戏的Draw Events中绘制一切（表面本质上是为图形保留的内存区域）。然后这个表面在每个游戏帧结束时被绘制到显示缓冲区，将其内容显示给玩家。</glossdef></glossentry>
<glossentry id="Default_architectures">
<glossterm>架构</glossterm>
<glossdef>处理器芯片（CPU）的架构是对其基本组件和基本操作的描述。每个处理器家族都有自己的架构，如ARM或x64。</glossdef></glossentry>
<glossentry id="Default_ARGB">
<glossterm>ARGB</glossterm>
<glossdef>这是Alpha、Red、Green、Blue的缩写，用来指代以十六进制数值指定的颜色成分，例如。#FF53E270，其中每一组两个数字代表一个单独的成分。将上面的ARGB例子分解开来，我们可以得到以下的分量值。Alpha(FF), Red(53), Green(E2)和Blue(70)。</glossdef></glossentry>
<glossentry id="Default_argument">
<glossterm>争论</glossterm>
<glossdef>一个参数（也被称为参数）是传递到一个函数中的值。例如，GameMaker语言函数'sqr(num)'是一个可以给你提供一个数字的平方的函数，例如：'a = sqr(4);' 这里的参数是4，而函数将返回16，它被存储在变量'a'中。</glossdef></glossentry>
<glossentry id="Default_asset_key">
<glossterm>资产钥匙</glossterm>
<glossdef>在时间线上的一个位置，资产被放置在那里。一个资产键可以持续多帧。</glossdef></glossentry>
<glossentry id="Default_Asset_Track">
<glossterm>资产追踪</glossterm>
<glossdef>序列轨道面板中的一个轨道，它持有单一资产，可以是精灵、声音、实例或序列。</glossdef></glossentry>
<glossentry id="Default_assignment">
<glossterm>任务</glossterm>
<glossdef>赋值是简单的术语，当我们为一个变量设置（分配）一个值时。</glossdef></glossentry>
<glossentry id="Default_backend">
<glossterm>后台</glossterm>
<glossdef>后台是指程序中在后台执行的部分，对用户来说是不透明的，通常不需要任何用户互动。例如，在互联网上进行网络编程时的服务器端，或在RPG游戏中进行的幕后数据处理。这在本质上是与前端相对的。</glossdef></glossentry>
<glossentry id="Default_bezier_interpolation">
<glossterm>Bezier插值</glossterm>
<glossdef>贝塞尔插值涉及到通过用数学上生成的花键曲线连接两个相邻的已知值来估计一个新的值，可以用连接到每个点的 "手柄 "进行编辑。然后你可以通过检查沿线的任何一点来获得内插值。</glossdef></glossentry>
<glossentry id="Default_bit">
<glossterm>位</glossterm>
<glossdef>一个单一的数据值，可以是1或0（真或假）。位以8个块的形式组合成一个字节。</glossdef></glossentry>
<glossentry id="Default_bit_depth">
<glossterm>位深度</glossterm>
<glossdef>比特深度是指音频文件中每个样本的比特数量。低比特深度的声音质量较差，但文件大小却小得多。较低的比特深度通常用于小的声音效果和内存可能存在问题的平台（如HTML5）。</glossdef></glossentry>
<glossentry id="Default_bit_rate">
<glossterm>比特率</glossterm>
<glossdef>比特率的单位是Kilobits-per-sec(kbps或k)，是每秒编码的比特数或每秒传输或接收的比特数。比特率和采样率越高，音频质量就越高，但需要更多的处理能力和带宽。较低的比特率创造了较小的文件大小，使用较少的处理能力和带宽，但音频质量却下降了。对于高质量的音乐，通常首选64-128kbps的比特率（推荐96kbps）。</glossdef></glossentry>
<glossentry id="Default_bitmap">
<glossterm>位图</glossterm>
<glossdef>位图是用来描述任何静态图像的术语，它由彩色像素组成，以比特形式存储（与使用数学算法存储的矢量图像不同）。PNG、JPG和BMP是位图图像的例子，而SWF则是矢量图像的一个例子。</glossdef></glossentry>
<glossentry id="Default_boolean">
<glossterm>布尔型</glossterm>
<glossdef>布尔值是一种变量类型，可以根据其值返回真或假，并可用于条件和表达式中。常数 "false "或 "true "可以应用于布尔值，相当于真实值0和1。</glossdef></glossentry>
<glossentry id="Default_bounding_box">
<glossterm>界限盒</glossterm>
<glossdef>对于精灵来说，边界框是对最初检测到碰撞的区域边缘的称呼，它不一定要和应用到的精灵一样大。对于序列，边界框是一个或多个资产在画布中占据的总空间的外缘。</glossdef></glossentry>
<glossentry id="Default_build_tools">
<glossterm>构建工具</glossterm>
<glossdef>构建工具是GameMaker Studio 2需要的外部应用程序，用于为不同的目标平台生成可执行包。</glossdef></glossentry>
<glossentry id="Default_byte">
<glossterm>字节</glossterm>
<glossdef>一个字节是一个数据单位，有8个二进制数字，组成一个字节的每个数字都被称为比特，即：一个字节是8个比特，一个比特可以是1或0。</glossdef></glossentry>
<glossentry id="Default_Cache">
<glossterm>缓存</glossterm>
<glossdef>缓存是由GameMaker生成的文件集合，然后存储并在项目的多次运行中重复使用。请注意，这个缓存有时会变得 "陈旧"，这意味着它必须被清除，以迫使GameMaker从头开始重建它，确保没有陈旧的文件破坏你最终的游戏可检测性。</glossdef></glossentry>
<glossentry id="Default_callback">
<glossterm>回调</glossterm>
<glossdef>回调只是一个运行的函数，当它完成了被分配的任何任务后，会触发另一个函数（或代码块）。例如，sprite_add()函数将在sprite被加载时触发异步Image Loaded事件的回调。</glossdef></glossentry>
<glossentry id="Default_catmull-rom_interpolation">
<glossterm>catmull-rom内插法</glossterm>
<glossdef>这是一种基于数学花键的非线性内插。它用于通过使用 "平滑 "曲线（花键）连接两个相邻的已知值来估计一个新值，并且可以从沿线的任何一点得出一个新值。</glossdef></glossentry>
<glossentry id="Default_Compiling">
<glossterm>汇编</glossterm>
<glossdef>编译是指GameMaker将你的代码收集在一起，并以这样的方式创建一个可执行包，作为一个游戏在设备上运行。</glossdef></glossentry>
<glossentry id="Default_compression">
<glossterm>压缩</glossterm>
<glossdef>压缩是使用数学算法来减少文件的大小。这特别适用于音频和图像文件，像JPG（图像）和MP3（音频）这样的格式就是压缩格式。压缩的结果通常是文件大小大大减少，但会有一些数据损失，这可能是也可能是不明显的，取决于使用的压缩类型和强度。未经压缩的格式是BMP（图像）或WAV（音频），它们的文件大小更大，但没有数据损失。</glossdef></glossentry>
<glossentry id="Default_conditional">
<glossterm>有条件的</glossterm>
<glossdef>条件、条件语句和条件表达式是一般编程语言的特点，它们帮助代码做出选择，其结果是真或假。根据程序员的需要，它们可以执行不同的动作，多个条件可以合并为一个条件，只要条件的最终值是真或假。条件语句的例子是 "if "和 "while"。</glossdef></glossentry>
<glossentry id="Default_constants">
<glossterm>常数</glossterm>
<glossdef>常量是一个术语，用来描述一个命名的值，在整个程序的执行过程中不会改变。GameMaker Studio 2有许多内置的常量--例如os_windows--但你也可以创建自己的常量值，用于你的项目（称为Macros）和扩展。</glossdef></glossentry>
<glossentry id="Default_CPU_overhead">
<glossterm>CPU开销</glossterm>
<glossdef>CPU开销衡量一台计算机的中央处理单元能够执行的工作量，以及该能力中被单个计算任务使用的百分比。</glossdef></glossentry>
<glossentry id="Default_deadzone">
<glossterm>死区</glossterm>
<glossdef>死区是指在游戏识别出模拟杆被移动之前你必须移动的距离。一个低的死区会使模拟杆的任何轻微移动都会移动你的玩家或瞄准或其他东西。死区值高意味着模拟杆需要更大的移动，游戏才会检测到它并移动被控制的东西。</glossdef></glossentry>
<glossentry id="Default_back-buffer">
<glossterm>显示缓冲区</glossterm>
<glossdef>显示缓冲区是 "画布"，所有的东西最终都在这里被绘制。一些事件直接针对它（如Pre Draw事件），而其他事件则首先绘制到应用程序表面，然后再绘制到显示缓冲区。</glossdef></glossentry>
<glossentry id="Default_Dope_Sheet">
<glossterm>涂料表</glossterm>
<glossdef>Dope Sheet是序列时间线的可视化表示，在这里你可以添加、删除和编辑不同的资产键和参数键，它们影响序列中不同轨道的行为方式。</glossdef></glossentry>
<glossentry id="Default_encoding">
<glossterm>编码</glossterm>
<glossdef>编码将数据转化为另一种格式，使用的方案是公开的，因此很容易被逆转。这与加密不同，因为它不需要一个密钥来解码它。编码通常用于将数据改变成一种格式，以便不同的系统更容易使用（如将数据发送到服务器），或用于使数据无法被人眼看到。</glossdef></glossentry>
<glossentry id="Default_EULA">
<glossterm>EULA</glossterm>
<glossdef>最终用户许可协议（EULA）是一份法律文件，概述了你所得到的产品的许可。</glossdef></glossentry>
<glossentry id="Default_exception">
<glossterm>例外</glossterm>
<glossdef>在程序执行过程中遇到的特殊的、意外的和异常的情况被称为异常。它也可以被称为错误或条件，它改变了程序或微处理器的路径。异常的一个例子是，当一个程序试图访问一个变量时，该变量并不存在。异常必须在程序代码中处理和消除，以避免任何致命的错误，这个过程称为调试。</glossdef></glossentry>
<glossentry id="Default_executable_package">
<glossterm>可执行包</glossterm>
<glossdef>一个用于执行程序的文件包。在GameMaker Studio中，这可以是一个单一的文件--如Windows的安装程序--或多个文件--如HTML5的输出。</glossdef></glossentry>
<glossentry id="Default_expression">
<glossterm>表情</glossterm>
<glossdef>表达式是一个或多个常数、变量、运算符和/或函数的组合，根据特定的优先级和关联规则进行解释，以返回另一个值。一个简单的表达式是（5 5），它返回10。</glossdef></glossentry>
<glossentry id="Default_falsy">
<glossterm>虚张声势</glossterm>
<glossdef>当作为布尔值使用时，例如在if()条件中，一个被认为是 "假 "的值。</glossdef></glossentry>
<glossentry id="Default_floating_point">
<glossterm>浮动点</glossterm>
<glossdef>浮点数是含有小数点的数字。例如，数字5.5，0.001，和-2,345.6789都是浮点数。没有小数点的数字被称为整数（例如：2，56，1400）。</glossdef></glossentry>
<glossentry id="Default_font">
<glossterm>字体</glossterm>
<glossdef>字体是一个图形字形的集合，用来表示一种语言中的文本。字体可以有不同的重量、大小和风格，用于显示项目中的任何书面内容。</glossdef></glossentry>
<glossentry id="Default_framework">
<glossterm>框架</glossterm>
<glossdef>框架是一个代码的基础，用户可以在此基础上进行修改和/或构建。一个框架可能包括不同的软件库、API、编译器和更多。更简单地说，框架为一个项目的某种类型和水平的编程提供了有利的环境。例如，在GameMaker Studio 2中，你可以创建自己的框架项目（通过本地资产包），其中包含一般控制、状态管理、网络或其他任何你在项目中常用的脚本和对象，然后在一开始就将这些导入新的项目中，让你有基本的基础来继续，而不必每次都对这些系统重新编程。</glossdef></glossentry>
<glossentry id="Default_frontend">
<glossterm>前台</glossterm>
<glossdef>前端是一个程序中 "面对面 "的部分，即：最终用户与之互动的部分。例如，在GameMaker Studio 2中，你进行编程和添加资产等的界面是程序的前端，因为它是你与程序互动和输入值、文件和其他东西的地方。这在本质上是与后台相反的。</glossdef></glossentry>
<glossentry id="Default_GameMaker:_Studio 1.4">
<glossterm>GameMaker。创作室 1.4</glossterm>
<glossdef>以前的GameMaker软件版本（通常称为Legacy GameMaker），不再提供也不再支持。</glossdef></glossentry>
<glossentry id="Default_garbage_collector">
<glossterm>垃圾收集器</glossterm>
<glossdef>垃圾收集器是一种自动工具，是游戏代码的一部分，当某些东西（如数组和结构）在你的代码中不再被引用时，它被用来从内存中删除，而不需要你明确删除它们。</glossdef></glossentry>
<glossentry id="Default_gizmos">
<glossterm>小玩意</glossterm>
<glossdef>Gizmo是可直接操纵的、自包含的、视觉化的屏幕成语--本质上是任何视觉化的东西，可由用户互动或操纵以产生效果或特定结果。</glossdef></glossentry>
<glossentry id="Default_GUI">
<glossterm>GUI</glossterm>
<glossdef>是 "图形用户界面 "的简称，它是一个包括图形元素的用户界面，如窗口、图标和按钮。在GameMaker中，你有一组特定的对象事件（Draw GUI Events），可以画到这一层，专门为分数、生命、库存等事情而设计...</glossdef></glossentry>
<glossentry id="Default_hard-code">
<glossterm>硬编码</glossterm>
<glossdef>在计算机编程中，硬编码这一术语被用来描述被认为是固定的、不可能改变的代码。硬编码的特征是以这样一种方式内置于硬件或软件中，以后不能修改。例如，如果你正在制作一个游戏，并将玩家的健康状况 "硬编码 "为10，那么你将在整个游戏代码中使用10这个值，而不是使用一个变量。</glossdef></glossentry>
<glossentry id="Default_hashing">
<glossterm>散列</glossterm>
<glossdef>散列是创建一个字符串或值的方法，它与一个单一的来源--通常是一个文件--有关，并且只与该来源有关。例如，在GameMaker中，你可以为一个保存文件生成一个哈希值，然后，在以后访问它之前，为它生成另一个哈希值，并检查原始哈希值和新的哈希值，以确定该文件是否被篡改过。</glossdef></glossentry>
<glossentry id="Default_HVS">
<glossterm>HSV</glossterm>
<glossdef>这是色调、饱和度和数值的缩写，是一种表达颜色的方式，通常使用0到255的数值。色相是指颜色的色相值，饱和度是指要使用的颜色的数量，而数值是指颜色的亮度。</glossdef></glossentry>
<glossentry id="Default_HUD">
<glossterm>HUD</glossterm>
<glossdef>在游戏中，HUD是抬头显示器的意思。这是一种将信息作为游戏用户界面的一部分以视觉方式传递给玩家的方法，所以像健康条、状态图标、分数等都是HUD的一部分，通常HUD元素不需要用户互动。</glossdef></glossentry>
<glossentry id="Default_IDE">
<glossterm>IDE</glossterm>
<glossdef>IDE，即集成开发环境，是一种软件应用程序，为计算机程序员开发软件提供全面的设施。在这种情况下，GameMaker Studio 2的整个前端被认为是IDE，包括创建图形、添加声音和添加代码的部分，以制作你的游戏。</glossdef></glossentry>
<glossentry id="Default_iteration">
<glossterm>迭代</glossterm>
<glossdef>迭代是在你的项目代码中对一组操作的一次传递。计算机编程中的一种迭代形式是通过循环。循环会重复某段代码，直到满足一个条件，可以继续进行。计算机每次运行一个循环，都被称为一次迭代。简单地说，迭代是重复某个特定的代码片段以执行某个动作的过程。</glossdef></glossentry>
<glossentry id="Default_JSON">
<glossterm>JSON</glossterm>
<glossdef>JSON是JavaScript Object Notatio的缩写，是一种用于存储数据的轻量级格式。当数据从服务器发送至网页时，经常使用JSON，它被认为是 "自我描述"，在查看时易于理解和遵循。</glossdef></glossentry>
<glossentry id="Default_keyframe">
<glossterm>关键帧</glossterm>
<glossdef>一个关键帧（也叫参数关键）是时间线上的一个点，在这个点上定义了参数值的变化。</glossdef></glossentry>
<glossentry id="Default_keyword">
<glossterm>关键字</glossterm>
<glossdef>关键词是由编程语言或程序保留的特殊词汇，因为它们有特殊的含义。这些关键词是为了执行某些任务而保留的，它们可以是命令，也可以是参数。每种编程语言都有一组保留关键词（也称为保留名称），它们不能作为变量名称使用，GameMaker语言也不例外，像return、while、if和break等词都是编程语言中使用的保留关键词。</glossdef></glossentry>
<glossentry id="Default_linear_interpolation">
<glossterm>线性内插</glossterm>
<glossdef>线性插值包括通过用一条直线连接两个相邻的已知值来估计一个新值。然后你可以通过检查沿线的任何一点来获得内插值。在图形学中，线性插值是指平滑像素边缘的一种基本方法。</glossdef></glossentry>
<glossentry id="Default_literal">
<glossterm>字面意义上的</glossterm>
<glossdef>在代码中写的一个明确的值，例如，当你写 "A TEXT STRING "时，你使用的是一个字符串字面，而不是通过一个变量或函数返回一个字符串。同样地，[0, 1, 2]是一个数组字面。</glossdef></glossentry>
<glossentry id="Default_machine_code">
<glossterm>机器码</glossterm>
<glossdef>机器码是由CPU直接执行的代码，不需要解释器的解释。它是最底层的代码，包含处理器执行的指令。它是特定于处理器架构的。因此，它被优化。在GameMaker中，YoYo编译器可以用来生成包含优化机器代码的可执行文件，用于各种平台。</glossdef></glossentry>
<glossentry id="Default_method">
<glossterm>方法</glossterm>
<glossdef>在GameMaker中，方法是给一个用户定义的函数的名字，该函数已被绑定到一个实例上，所以实例变量是函数的名字，你用来调用它。</glossdef></glossentry>
<glossentry id="Default_operand">
<glossterm>操作符</glossterm>
<glossdef>操作数是一个术语，用来表示可以用不同的操作数进行操作的值。在表达式A B C中，A、B和C是操作数。</glossdef></glossentry>
<glossentry id="Default_operator">
<glossterm>经营者</glossterm>
<glossdef>操作符是一个术语，用来表示可以操作不同操作数的东西。在表达式中，A B - C和-是运算符。不同运算符的例子有（加法）、-（减法）、=（等于）、！=（不等于）和>=（大于或等于），但还有很多。</glossdef></glossentry>
<glossentry id="Default_parameter_key">
<glossterm>参数键</glossterm>
<glossdef>一个参数键（也叫关键帧）是在时间线上的一个点，在这个点上定义了参数值的变化。</glossdef></glossentry>
<glossentry id="Default_parameter_tracks">
<glossterm>参数轨道</glossterm>
<glossdef>在轨道面板中被分配给资产轨道的轨道，它可以改变它所链接的资产轨道的一个参数，如位置或图像索引。</glossdef></glossentry>
<glossentry id="Default_physics">
<glossterm>物理学</glossterm>
<glossdef>在GameMaker中，当我们谈论一个物体、实例或房间使用 "物理 "时，我们的意思是它正在使用内置的物理模拟功能，基于Box2D物理库。</glossdef></glossentry>
<glossentry id="Default_playhead">
<glossterm>弹头</glossterm>
<glossdef>在Sequences dope sheet或Sprite editor frame view中，当前在时间线上的 "播放 "位置。在序列（和精灵）中，它将随着动画的预览而移动，你可以把它放在特定的帧上，以查看和编辑该位置的键和关键帧。</glossdef></glossentry>
<glossentry id="Default_port_number">
<glossterm>端口号</glossterm>
<glossdef>端口号是一种识别互联网或其他网络信息到达服务器时被转发的特定进程的方法。</glossdef></glossentry>
<glossentry id="Default_PURE">
<glossterm>纯粹的</glossterm>
<glossdef>纯函数对游戏没有影响，也不创建或改变任何东西。它只返回一个值。给予相同的参数集，它总是返回相同的值。</glossdef></glossentry>
<glossentry id="Default_Remote_Workers">
<glossterm>远程工作者</glossterm>
<glossdef>远程工作者是一个特殊的程序，GameMaker Studio 2将在某些平台上使用它来创建你的游戏可执行文件，而无需在该平台上实际运行GameMaker Studio 2 IDE。</glossdef></glossentry>
<glossentry id="Default_render">
<glossterm>呈现的</glossterm>
<glossdef>在GameMaker Studio 2中，当某样东西被渲染时，通常意味着它已经被简单地 "绘制到显示缓冲区 "或 "绘制到一个表面"。  渲染也可以指将某种矢量源（如字体）变成位图图像的过程。</glossdef></glossentry>
<glossentry id="Default_RSS">
<glossterm>RSS</glossterm>
<glossdef>丰富的网站摘要 "的简称，是一个标准化的系统，用于从在线出版商向互联网用户分发内容。</glossdef></glossentry>
<glossentry id="Default_Runtime">
<glossterm>运行时间</glossterm>
<glossdef>GameMaker Studio 2中的运行时间是程序所需的编译器资产的集合，用于为特定的目标平台创建最终的可执行包。这些资产与IDE分开安装，可以随时更改和更新。</glossdef></glossentry>
<glossentry id="Default_sample_rate">
<glossterm>采样率</glossterm>
<glossdef>采样率是指每秒钟进行的音频样本数，以赫兹或千赫兹为单位（1千赫兹为1000赫兹）。采样率越高，声音就越接近原始的模拟波形，但文件大小就越大。一般来说，声音效果比音乐的采样率低就可以了。</glossdef></glossentry>
<glossentry id="Default_SCM">
<glossterm>供应链管理</glossterm>
<glossdef>SCM是源代码管理的意思，它是一个负责维护项目源代码版本的程序（或程序套件）。SCM允许你存储代码修改的运行历史，以及审查和撤销对源代码的任何修改，以及其他事项。</glossdef></glossentry>
<glossentry id="Default_SDK">
<glossterm>SDK</glossterm>
<glossdef>SDK是 "软件开发工具包 "的意思。这通常是指用于为特定设备或操作系统开发应用程序的软件和/或软件包的集合。</glossdef></glossentry>
<glossentry id="Default_server">
<glossterm>服务器</glossterm>
<glossdef>在计算机领域，服务器是一个计算机程序或一个设备，为其他程序或设备（称为 "客户"）提供功能。</glossdef></glossentry>
<glossentry id="Default_shader">
<glossterm>着色器</glossterm>
<glossdef>着色器是一个小程序的集合，直接在GPU上运行，以创建图形和图形效果。这些程序的运行速度非常快，并能释放出CPU来做其他事情。</glossdef></glossentry>
<glossentry id="Default_smooth_interpolation">
<glossterm>平滑内插</glossterm>
<glossdef>平滑插值包括通过用数学上生成的花键曲线连接两个相邻的已知值来估计一个新值。然后你可以通过检查沿线的任何一点来获得内插值。</glossdef></glossentry>
<glossentry id="Default_source_code">
<glossterm>源代码</glossterm>
<glossdef>源代码是一个计算机程序的基本组成部分，是程序运行所必需的。</glossdef></glossentry>
<glossentry id="Default_spline">
<glossterm>花键</glossterm>
<glossdef>花键基本上是一条用于连接点的平滑曲线。从数学上讲，它被定义为一个足够平滑的多项式函数，它是分片定义的，并且在多项式分片连接的地方拥有高度的平滑性。</glossdef></glossentry>
<glossentry id="Default_sprites">
<glossterm>精灵</glossterm>
<glossdef>魍魉是一种位图图形，被设计为大场景的一部分。它可以是一个静态的图像，也可以是一个动画的图形。</glossdef></glossentry>
<glossentry id="Default_statement">
<glossterm>声明</glossterm>
<glossdef>在编程中，语句是用编程语言合法编写的单行代码，表达了要执行的行动。语句可能有自己的内部组件，包括表达式、运算符和函数。语句的一个例子是A = B 5。一个GameMaker Studio 2程序只不过是一个或多个语句的序列，它们共同执行一项任务（如移动玩家）。</glossdef></glossentry>
<glossentry id="Default_swatches">
<glossterm>色卡</glossterm>
<glossdef>样品是一种颜色或材料的小方块样品，用于说明它的外观。</glossdef></glossentry>
<glossentry id="Default_syntax">
<glossterm>句法</glossterm>
<glossdef>与人类语言类似，编程语言在如何传达语句方面有自己的一套规则，这套规则被称为语法。虽然一些编程语言有许多共同的特点、功能和能力，但它们通常在语法上有所不同。如果不正确使用语法，就不能编写可执行的程序，错误的语法将导致编译时出现错误。</glossdef></glossentry>
<glossentry id="Default_texel">
<glossterm>特克斯</glossterm>
<glossdef>Texel（或纹理元素）是纹理空间的基本单位，就像像素是图片空间的基本元素。纹理由Texel数组表示，就像图片由像素数组表示一样。当对三维表面进行纹理处理时（这个过程被称为纹理映射），渲染器会将纹理映射到输出图片中的适当像素。</glossdef></glossentry>
<glossentry id="Default_texture_atlas">
<glossterm>纹理图集</glossterm>
<glossdef>纹理页的另一个名称，它只是游戏中一个或多个精灵所需的图像的集合，以最佳方式组织起来，尽可能少地使用纹理内存。</glossdef></glossentry>
<glossentry id="Default_texture_page">
<glossterm>纹理页</glossterm>
<glossdef>纹理页（也称为纹理图集）是一组图像（精灵、瓷砖组、字体字符等......）的集合，它们以最佳方式组合在一起，以便在游戏运行时占用最少的纹理内存。</glossdef></glossentry>
<glossentry id="Default_tile_map">
<glossterm>瓦片图</glossterm>
<glossdef>瓦片地图是对从瓦片集中抽取的瓦片集合的称呼，用于在游戏中创建关卡。</glossdef></glossentry>
<glossentry id="Default_tile-sets">
<glossterm>瓷砖套装</glossterm>
<glossdef>瓷砖集是一个正方形或长方形图形资产的集合，作为一个单一的图像铺设在一个网格上。然后，网格中的每个项目可以在一个房间中多次放置，以创建一个更大的场景，称为 "瓷砖地图"。</glossdef></glossentry>
<glossentry id="Default_timeline">
<glossterm>时间表</glossterm>
<glossdef>GameMaker Studio 2中的时间线是一个事件的线性集合，将按连续的顺序运行。每个事件都可以被赋予代码或动作来执行任务，当时间线运行时，这些任务将在时间线中的每个事件到达时被执行。</glossdef></glossentry>
<glossentry id="Default_Track_Panel">
<glossterm>轨道板</glossterm>
<glossdef>序列编辑器的区域，显示序列中所有不同的轨道--资产轨道、参数轨道、轨道组和剪辑遮罩组。</glossdef></glossentry>
<glossentry id="Default_truth_table">
<glossterm>真值表</glossterm>
<glossdef>真值表是逻辑学中使用的一种数学表格--特别是与布尔代数和布尔函数有关--它列出了逻辑表达式在其每个函数参数上的功能值，也就是说，对于其逻辑变量所采取的每个数值组合。</glossdef></glossentry>
<glossentry id="Default_truthy">
<glossterm>实话实说</glossterm>
<glossdef>当作为布尔值使用时，例如在if()条件中，一个被认为是 "真 "的值。</glossdef></glossentry>
<glossentry id="Default_typo">
<glossterm>错别字</glossterm>
<glossdef>排版错误。</glossdef></glossentry>
<glossentry id="Default_URL">
<glossterm>URL</glossterm>
<glossdef>是 "通用资源定位器 "的简称，基本上是互联网上的地址。</glossdef></glossentry>
<glossentry id="Default_v-sync">
<glossterm>v-sync</glossterm>
<glossdef>V-sync或垂直同步是用来使你的游戏更新速度与显示器的刷新率同步。这可以减少屏幕撕裂--即你的屏幕一次性显示多个帧的部分--但也可能导致性能问题或高刷新率显示器的问题。</glossdef></glossentry>
<glossentry id="Default_variable">
<glossterm>变量</glossterm>
<glossdef>变量是程序中的一个命名值，它可以在需要时被修改、存储和显示。例如，如果我们有一个名称为XYZ的整数变量，它存储了一个值10，那么我们就可以做一些事情，如A = XYZ 10，这将把变量A的值设置为20，因为XYZ是10，我们要把它加上10。你也可以用运算符来改变变量的值，所以做XYZ = XYZ 100将修改我们的XYZ变量的值，使其等于110。变量也可以用来存储标识符和对不同资产的引用。</glossdef></glossentry>
<glossentry id="Default_vector">
<glossterm>向量</glossterm>
<glossdef>矢量是一种数学结构，它有一个大小，称为量值，和一个方向。在GameMaker中，矢量通常用来显示事物移动的距离和方向。矢量也可以用来定义图像，某些图像格式如SWF使用矢量数学来定义它们包含的图像。</glossdef></glossentry>
<glossentry id="Default_Version_Number">
<glossterm>版本号</glossterm>
<glossdef>版本号是分配给一个软件程序、游戏或资产的特定版本的一组独特数字，通常具有MAJOR.MINOR.MAINTENANCE的格式，例如：V2.3.56。通常情况下，随着游戏或资产的更新和全新版本的发布，版本号会增加。</glossdef></glossentry>
<glossentry id="Default_vertex">
<glossterm>顶点</glossterm>
<glossdef>顶点是对多边形的一个单点的称呼，它包含定义它的位置、颜色和纹理的各种特征。在计算机图形学中，这通常意味着一个三角形的一个角，用来创建一个基元，而这种基元的组合就是屏幕上的图形。</glossdef></glossentry>
<glossentry id="Default_virtual_machine">
<glossterm>虚拟机 (VM)</glossterm>
<glossdef>在GameMaker中，The VM（虚拟机）是一种编译方法，它为每个平台使用一个通用的运行器，然后用它来解释你的游戏代码。</glossdef></glossentry>
<glossentry id="Default_VRAM">
<glossterm>VRAM</glossterm>
<glossdef>VRAM是可用于视频的内存量，即：可存储纹理和图像的内存空间。</glossdef></glossentry>
<glossentry id="Default_weak_reference">
<glossterm>弱参考</glossterm>
<glossdef>弱引用是一种不保护被引用对象不被垃圾收集器收集的引用，因此可以用来检查一个结构是否在游戏中的某个地方仍然 "活着"（被引用）。</glossdef></glossentry>
<glossentry id="Default_YoYo_Compiler">
<glossterm>YoYo Compiler (YYC)</glossterm>
<glossdef>这是一个特殊的编译器，用于创建可执行包，使用本地代码而不是解释代码和运行器（这就是GameMaker VM编译使用的东西）。编译后的代码运行速度更快，但需要更多时间来编译可执行文件。</glossdef></glossentry>
<glossentry id="Default_multicast">
<glossterm>组播</glossterm>
<glossdef>多播是网络通信，在一次传输中对多个接收者而不是单个接收者进行寻址。</glossdef></glossentry></glossgroup>