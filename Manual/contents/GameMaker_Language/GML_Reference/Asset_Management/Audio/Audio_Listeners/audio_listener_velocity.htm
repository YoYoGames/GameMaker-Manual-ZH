<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频听众的速度</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_listener_velocity" />
  <meta name="rh-index-keywords" content="audio_listener_velocity" />
  <meta name="search-keywords" content="audio_listener_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频听众的速度</h1>
  <p>这个函数可以用来给听众提供<em>多普勒 </em>效应，并根据从给定的相对X、Y和Z位置解析的矢量来模拟音频运动。如果监听器本身不会移动，或者运动不是一个恒定的运动，你通常不需要设置这些值，但是，例如，如果你正在制作一个滚动游戏，玩家有一个从下到上的恒定运动，敌人有一个从上到下的恒定运动，你将把监听器<i>和</i>发射器的速度（对于发射器，你将使用 <span class="inline"><a href="../Audio_Emitters/audio_emitter_velocity.htm"><span class="inline">audio_emitter_velocity()</span> ）设置为适当的矢量，以模拟它们在经过玩家实例时的正确多普勒效应。</p>
  <p class="note"><b><span class="note">注意</span> </b>如果你有多个监听器，你应该使用函数 <span style="font-size:1px;"><a href="audio_listener_set_velocity.htm"><span class="inline">audio_listener_set_velocity()</span></a></span>.</p>
  <p>下面的图片显示了如何为上面给出的游戏实例进行设置。</p>
  <p><img alt="Audio Listener Velocity Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener_Velocity.png" /></p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">audio_listener_velocity(vx, vy, vz);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">vx</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The x velocity component of the listener (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vy</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The y velocity component of the listener (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vz</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The z velocity component of the listener (default 0).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if speed &gt; 0<br />
    {<br />
        audio_listener_velocity(abs(hspeed), abs(vspeed), 0);<br />
    }</p>
  <p>上面的代码检查播放器实例的速度是否超过0，如果是，它就使用适当的绝对 <span class="inline">hspeed</span> 和 <span class="inline">vspeed</span> 组件来设置监听器的速度。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Audio_Listeners.htm">音频收听者</a></div>
        <div style="float:right">下一步。 <a href="audio_listener_orientation.htm"><span class="notranslate">audio_listener_orientation</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_listener_velocity
-->
  <!-- TAGS
audio_listener_velocity
-->
</body>
</html>