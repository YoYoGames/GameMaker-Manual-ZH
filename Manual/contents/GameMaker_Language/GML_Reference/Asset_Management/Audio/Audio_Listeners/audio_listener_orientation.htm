<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频_听众方向</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_listener_orientation" />
  <meta name="rh-index-keywords" content="audio_listener_orientation" />
  <meta name="search-keywords" content="audio_listener_orientation" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频_听众方向</h1>
  <p>通过这个函数，你可以改变<i>听众</i>在三维音频空间中的方向。<b>观察</b>方向和<b>上升</b>方向是基于从给定的相对X、Y和Z位置解析的向量，观察方向默认为<span data-keyref="Unit_Vector_Z">（0，0，1）</span>，上升方向默认为<span data-keyref="Unit_Vector_Y">（0，1，0）</span>，如下图所示。</p>
  <p><img alt="Listener Orientation Diagram" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Orientation_Base.png" /></p>
  <p class="note"><b><span class="note">注意</span> </b>如果你有多个监听器，你应该使用函数 <a href="audio_listener_set_orientation.htm"><span class="inline">audio_listener_set_orientation()</span></a>.</p>
  <p>用这个函数改变监听者的方向，将改变游戏中的玩家对游戏周围的音频发射器所产生的声音的感知，<span class="notranslate">room</span> 。在下面的例子中，当听众处于默认位置时，由发射器产生的声音似乎来自听众的下方和右侧，但随着听众的新位置和方向，它们现在将被视为来自<i>上方</i>和右侧。</p>
  <p><img alt="Listener Orientation Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Orientation_Example.png" /></p>
  <h4>语法。</h4>
  <p class="code">audio_listener_orientation(lookat_x, lookat_y, lookat_z, up_x, up_y, up_z);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">lookat_x</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The x look vector (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">lookat_y</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The y look vector (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">lookat_z</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The z look vector (default 1).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">up_x</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The x up vector (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">up_y</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The y up vector (default 1).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">up_z</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate">The z up vector (default 0).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">dx = dcos(direction);<br />
    dy = - dsin(direction);<br />
    dz = - dsin(zdirection);<br />
    audio_listener_position(x, y, z);<br />
    audio_listener_orientation(dx, dy, dz, 0, 0, 1);</p>
  <p>上面的代码将3D音频监听器的位置设置为一个实例的x和y<a href="../../Instances/Instance_Variables/Instance_Variables.htm">变量</a>以及一个额外的z变量。然后，它将音频监听器的方向设置为从实例的三个变量中计算出来的 <a href="../../Instances/Instance_Variables/direction.htm"><span class="notranslate">direction</span></a>和一个额外的z方向变量。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Audio_Listeners.htm">音频收听者</a></div>
        <div style="float:right">下一步。 <a href="audio_listener_get_data.htm"><span class="notranslate">audio_listener_get_data</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_listener_orientation
-->
  <!-- TAGS
audio_listener_orientation
-->
</body>
</html>