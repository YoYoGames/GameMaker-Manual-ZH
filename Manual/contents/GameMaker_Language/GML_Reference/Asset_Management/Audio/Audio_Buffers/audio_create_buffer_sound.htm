<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频_创建_缓冲区_声音</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_create_buffer_sound" />
  <meta name="rh-index-keywords" content="audio_create_buffer_sound" />
  <meta name="search-keywords" content="audio_create_buffer_sound,audio_mono,audio_stereo,audio_3D" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频_创建_缓冲区_声音</h1>
  <p>有了这个函数，你可以从一个<span class="notranslate">buffer</span> 的内容中创建一个新的声音。<span class="notranslate">buffer</span> 之前已经创建过了(关于如何做的细节，请看<a href="../../../Buffers/Buffers.htm">缓冲区函数</a>)，并有数据添加或加载到它。然后，你把数据格式（目前只支持 <span class="inline">buffer_u8</span> 或 <span class="inline">buffer_s16</span> ）、采样率（可以在1000hz和48000hz之间）以及从<span class="notranslate">buffer</span> 的偏移量传递给这个函数，以获取数据。你还需要提供<span class="notranslate">buffer</span> 中的样本数和声音所需的通道。这些通道是由下列常数之一定义的。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Audio_Channel_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">音频通道类型</a></span></th>
      </tr>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_mono</span></td>
        <td>单声道（单通道）音频。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_stereo</span></td>
        <td>立体声（双通道）音频。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_3D</span></td>
        <td>3D（5.1）音频。</td>
      </tr>
    </tbody>
  </table>
  <p>注意，在你创建了一个声音后，当不再需要它时，你应该使用函数释放与之相关的指针索引 <a href="audio_free_buffer_sound.htm"><span class="inline">audio_free_buffer_sound()</span></a>.如果你没有这样做，然后重新分配变量或改变<span class="notranslate">rooms</span> 等......声音ID将丢失，你将有一个内存泄漏。还要注意的是，如果任何声音已经被创造出来，而声音还没有被释放出来，你就不能删除<span class="notranslate">buffer</span> 。因此，你会先释放声音（或声音），<i>然后</i>删除<span class="notranslate">buffer</span> 。还值得注意的是，添加任何东西到<span class="notranslate">buffer</span> ，或改变<span class="notranslate">buffer</span> 的大小，在它已经有一个声音创建后，会产生意想不到的结果，不建议这样做 - 一旦你开始从任何<span class="notranslate">buffer</span> 创建声音，你不应该以任何其他方式操作它，之后。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">bufferId</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">缓冲区ID</a></span></td>
        <td><span class="notranslate">The ID of the buffer to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">bufferFormat</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">缓冲区数据类型常数</a></span></td>
        <td><span class="notranslate">The format of the data in the buffer (<span class="inline">buffer_u8</span> 或 ）。 <span class="inline">buffer_s16</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">bufferRate</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The sample rate of the data in the buffer.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">bufferOffset</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The offset into the buffer to read the sample data from (in bytes).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">bufferLength</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The length of the buffer (the number of bytes of audio data, excluding the header).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">bufferChannels</span></td>
        <td><span data-keyref="Type_Constant_Audio_Channel_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../../LINKGOESHERE">音频通道类型</a></span></td>
        <td><span class="notranslate">The channels to use from one of the constants listed above.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Asset_Sound"><a data-rhwidget="HyperlinkPopover" href="../../../../../../The_Asset_Editors/Sounds.htm">Sound Asset</a></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var rate = 44100;<br />
    var hertz = irandom_range(220, 880);<br />
    var samples = 44100;<br />
    <br />
    var bufferId = buffer_create(rate, buffer_fast, 1);<br />
    buffer_seek(bufferId, buffer_seek_start, 0);<br />
    <br />
    var num_to_write = rate / hertz;<br />
    var length = buffer_get_size(bufferId);<br />
    var val_to_write = 1;<br />
    <br />
    for (var i = 0; i &lt; (samples / num_to_write) + 1; i++)<br />
    {<br />
        for (var j = 0; j &lt; num_to_write; j++)<br />
        {<br />
            buffer_write(bufferId, buffer_u8, val_to_write * 255);<br />
        }<br />
        val_to_write = (1 - val_to_write);<br />
    }<br />
    <br />
    soundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo);
  </p>
  <p>上面创建了一个<span class="notranslate">buffer</span> ，然后程序性地用数据填充它。这个数据然后被用来创建一个新的声音，它被储存在变量 &quot;soundId &quot;中。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Audio.htm">音频缓冲器</a></div>
        <div style="float:right">下一步。 <a href="audio_free_buffer_sound.htm"><span class="notranslate">audio_free_buffer_sound</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_create_buffer_sound
audio_mono
audio_stereo
audio_3D
-->
  <!-- TAGS
audio_create_buffer_sound
-->
</body>
</html>