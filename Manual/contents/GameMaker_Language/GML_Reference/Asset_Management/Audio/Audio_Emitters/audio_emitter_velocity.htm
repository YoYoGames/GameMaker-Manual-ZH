<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频发射器的速度</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_emitter_velocity" />
  <meta name="rh-index-keywords" content="audio_emitter_velocity" />
  <meta name="search-keywords" content="audio_emitter_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频发射器的速度</h1>
  <p>这个函数可以用来给发射器提供<em>多普勒 </em>效应，并根据从给定的相对x、y和z位置解析的矢量来模拟音频运动。如果发射器本身不会移动，你通常不需要设置这些值，但是，例如，如果你正在制作一个滚动的射击游戏，敌人来自右边并向左滚动，你可以在创建敌人的事件中设置它的速度为（hspeed, 0, 0）（并在步骤事件中更新每个实例的发射器，使用 <a href="audio_emitter_position.htm"><span class="inline">audio_emitter_position()</span></a>)来给敌人实例发出的任何声音以正确的多普勒，因为它们经过了玩家实例（这又会使用函数 <a href="../Audio_Listeners/audio_listener_position.htm"><span class="inline">audio_listener_position()</span></a>来设置<i>监听器</i>到正确的位置）。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">audio_emitter_velocity(emitter, vx, vy, vz);</p>
  <table>
    <tbody>
      <tr class="rh-cursor-column">
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">emitter</span></td>
        <td><span data-keyref="Type_ID_Audio_Emitter">音频发射器ID</span></td>
        <td><span class="notranslate">The index of the emitter to change.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vx</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The x vector value (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vy</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The y vector value (default 0).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">vz</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The z vector value (default 0).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">s_emit = audio_emitter_create();<br />
    audio_emitter_position(s_emit, room_width, 0, 0);<br />
    audio_emitter_velocity(s_emit, -5, 0, 0);</p>
  <p>上面的代码创建了一个音频发射器，并将其索引分配给变量 &quot;s_emit&quot;。然后这个发射器被放置在<span class="notranslate">room</span> ，并给它一个沿X轴每步5像素的速度（它将正确地与听众进行多普勒，就像它有一个每步5像素的水平速度）。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Audio_Emitters.htm">音频发射器</a></div>
        <div style="float:right">下一步。 <a href="audio_emitter_falloff.htm"><span class="notranslate">audio_emitter_falloff</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_emitter_velocity
-->
  <!-- TAGS
audio_emitter_velocity
-->
</body>
</html>