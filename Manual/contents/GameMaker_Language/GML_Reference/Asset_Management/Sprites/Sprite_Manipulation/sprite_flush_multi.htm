<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>多重化精灵</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function sprite_flush_multi" />
  <meta name="rh-index-keywords" content="sprite_flush_multi" />
  <meta name="search-keywords" content="sprite_flush_multi" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>多重化精灵</h1>
  <p><span class="notranslate">texture</span> 通过这个函数，你可以从<span class="notranslate">sprites</span> 内存中删除给定的<span class="notranslate">texture</span> 的任意数量的页面。你提供的<span class="notranslate">sprite</span> 指数是一个数组，它们被分配到的<span class="notranslate">texture</span> 页面将被从<span class="notranslate">texture</span> 内存中删除。注意，如果其中一个
    <span class="notranslate">texture</span> 页面在<span class="notranslate">room</span> 的其他地方被使用（被另一个实例<span class="notranslate">sprite</span> 或一个背景，等等......），你可能会得到一个小的性能打击，因为这个页面会立即被重新加载到内存中，所以在使用这个函数时应该注意。
    请注意，如果所选资源不支持刷新，该函数将返回 <span class="inline">-1</span> ，或者如果所有工作正常，它将返回 <span class="inline">0</span> 。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">sprite_flush_multi(array);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">array</span></td><td><span data-keyref="Type_Array"></span></td>
        <td><span class="notranslate">Array with the sprite indices to flush</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Real"></span> (-1 or 0)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">spr_a[0] = spr_Player_Aura1;<br/> spr_a[1] = spr_Player_Aura2;<br/> spr_a[2] = spr_Player_Aura3;<br/> spr_a[3] = spr_Player_Aura4;<br/> sprite_flush_multi(spr_a);
  </p>
  <p>上面的代码创建了一个数组，其中每个元素持有一个<span class="notranslate">sprite</span> 的索引。然后这个数组被用来从内存中清除这些<span class="notranslate">sprite</span> <span class="notranslate">textures</span> 。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Sprite_Manipulation.htm">雪碧操纵</a></div>
        <div style="float:right">下一步。 <a href="sprite_prefetch.htm"><span class="notranslate">sprite_prefetch</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
sprite_flush_multi
-->
  <!-- TAGS
sprite_flush_multi
-->
</body>
</html>