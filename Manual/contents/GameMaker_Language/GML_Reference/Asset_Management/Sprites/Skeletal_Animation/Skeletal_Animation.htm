<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>骨架动画</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different Skeletal Animation functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Skeletal Animation,gm_SpineTintBlackColour,tint black,Spine" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>骨架动画精灵</h1>
  <p>本节中的函数<i>只</i>适用于从骨架动画文件中导入的<span class="notranslate">sprites</span> （特别是JSON文件的 <a href="http://es.esotericsoftware.com/"><b>脊柱</b></a>导出），可以用来获取游戏中的动画信息<span class="notranslate">asset</span> ，也可以用来设置动画中的某些属性。这些函数可以和常规的<span class="notranslate">sprite</span> 函数和变量一起使用，允许你（例如）使用这些特殊函数混合两个骨架动画，同时使用常规的<span class="notranslate">sprite</span> 实例变量设置图像比例（关于<span class="notranslate">sprite</span> 实例变量的更多信息，请看<a href="../Sprite_Instance_Variables/Sprite_Instance_Variables.htm">这里</a>）。</p>
  <p class="note"><span class="note">注意</span>关于导入用<span class="notranslate">sprites</span> 制作的骨骼动画<span class="notranslate">Spine</span> 的进一步信息，请参见<a href="../../../../../Settings/Texture_Information/Non-Bitmap_Sprites.htm">导入非位图精灵</a>一节。</p>
  <p>你可以从下面的章节中找到更多关于这些种类的功能<span class="notranslate">sprites</span> 。</p>
  <ul class="colour">
    <li><a href="Animation/Animation.htm"><label for="a">动画</label></a></li>
    <li><a href="Skins/Skins.htm"><label for="b">皮肤</label></a></li>
    <li><a href="Attachments/Attachments.htm"><label for="c">附件</label></a></li>
    <li><a href="Bones/Bones.htm"><label for="d">骨骼</label></a></li>
    <li><a href="Slots/Slots.htm"><label for="f">插槽</label></a></li>
    <li><a href="Drawing_And_Miscellaneous/Drawing_And_Miscellaneous.htm"><label for="e">绘图和杂项</label></a></li>
  </ul>
  <p> </p>
  <h2>凃黑支持</h2>
  <p>该功能允许对<span class="notranslate">Spine</span> <span class="notranslate">sprite</span> 槽的黑暗区域进行不同的着色（这是一个<span class="notranslate">Spine</span> <span class="notranslate">IDE</span> 功能，更多细节请参见<a href="http://esotericsoftware.com/spine-attachments" target="_blank">这里</a>的<b>Tint black</b>部分）。目前，为了在<span data-keyref="GameMaker Name">GameMaker</span>中利用这一特性，在绘制使用该特性的<span class="notranslate">Spine</span> <span class="notranslate">sprite</span> ，你需要使用一个自定义<a href="../../../../../The_Asset_Editors/Shaders.htm">着色器</a>。这个<span class="notranslate">shader</span> 包含一个名为 &quot;<span class="inline">gm_SpineTintBlackColour</span>&quot; 的全局统一变量，运行器用当前的着色黑颜色填充，自动从<span class="notranslate">Spine</span> 的数据中检索出来。所需的<span class="notranslate">shader</span> ，如下图所示。</p>
  <p><span class="notranslate">Vertex</span> <span class="notranslate">Shader</span> (这与默认的直通车<span class="notranslate">vertex</span> <span class="notranslate">shader</span> 相同)</p>
  <p class="code">attribute vec3 in_Position; // (x,y,z)<br />
    attribute vec4 in_Colour; // (r,g,b,a)<br />
    attribute vec2 in_TextureCoord; // (u,v)<br />
    <br />
    varying vec2 v_vTexcoord;<br />
    varying vec4 v_vColour;<br />
    <br />
    void main()<br />
    {<br />
        vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0);<br />
        gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos;<br />
        v_vColour = in_Colour;<br />
        v_vTexcoord = in_TextureCoord;<br />
    }
  </p>
  <p>碎片着色器。</p>
  <p class="code">varying vec2 v_vTexcoord;<br />
    varying vec4 v_vColour;<br />
    <br />
    uniform vec4 gm_SpineTintBlackColour; // This is the uniform containing the tint-black colour<br />
    <br />
    void main()<br />
    {<br />
        vec4 tb = gm_SpineTintBlackColour;<br />
        vec4 texcol = texture2D( gm_BaseTexture, v_vTexcoord );<br />
        vec4 outcol;<br />
        outcol.rgb = v_vColour.rgb * texcol.rgb;<br />
        outcol.rgb += tb.rgb * ((tb.a * (texcol.a - 1.0)) + (1.0 - texcol.rgb)); // This line performs the tint-    black blending logic<br />
        outcol.a = v_vColour.a * texcol.a;<br />
        gl_FragColor = outcol;<br />
    }
  </p>
  <p>你将通过首先调用<span class="notranslate">shader</span> ，然后绘制<span class="notranslate">sprite</span> ，然后重新设置<span class="notranslate">shader</span> ，这样来使用。</p>
  <p class="code">shader_set(shd_spine_tint_black);<br />
    draw_self();<br />
    shader_reset();</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="../Sprites.htm">精灵</a></div>
        <div style="float:right">下一步。 <a href="../Sprite_Information/Sprite_Information.htm"><label for="three">雪碧信息</label></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Spine Sprites
Spine
Skeleton Animation Sprites
gm_SpineTintBlackColour
tint black
-->
  <!-- TAGS
sprite_spìne_functions
-->
</body>
</html>