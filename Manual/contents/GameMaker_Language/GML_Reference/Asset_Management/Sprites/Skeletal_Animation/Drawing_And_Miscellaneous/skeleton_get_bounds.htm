<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>骨架_获取边界</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_get_bounds" />
  <meta name="rh-index-keywords" content="skeleton_get_bounds" />
  <meta name="search-keywords" content="skeleton_get_bounds" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>骨架_获取边界</h1>
  <p>这个函数将返回一个与当前分配的骨架动画<span class="notranslate">sprite</span> 的任何给定边界盒相关的数值数组。你提供要获得的边界盒的索引号(你可以用函数检索<span class="notranslate">sprite</span> 的边界盒的总数)。 <a href="skeleton_get_num_bounds.htm"><span class="inline">skeleton_get_num_bounds()</span></a>)，该函数将返回一个包含以下元素的数组。</p>
  <ul class="colour">
    <li>[0] - 包围盒上的点的数量（一个实数）。</li>
    <li>[1] - 界限盒的名称（一个<span class="notranslate">string</span> ）。</li>
    <li>[2] - 第一个点的X位置</li>
    <li>[3] - 第一个点的y位置</li>
    <li>[等...] - 进一步的X/Y位置数据，直到包围盒上的点的数量。</li>
  </ul>
  <div data-conref="../../../../../../assets/snippets/Spine_bounding_box_note.hts"> </div>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">skeleton_get_bounds(index);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">index</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The bounding box index to get the values of.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Array">Array</span> (minimum 2 elements: numPoints, name [, xPos, yPos, etc...])</p>
  <p> </p>
  <h4>例子。</h4>
  <p> </p>
  <p class="code">var num = skeleton_get_num_bounds();<br />
    var yy = 60;<br />
    for(var i = 0; i &lt; num; i++)<br />
    {<br />
        var b_info = skeleton_get_bounds(i);<br />
        if b_info[0] &gt; 0<br />
        {<br />
            var data = b_info[1] + &quot;:&quot;;<br />
            for(var j = 0; j &lt; b_info[0]; j++)<br />
            {<br />
                data += &quot; (&quot; + string(b_info[(j * 2) + 2]) + &quot;, &quot; + string(b_info[(j * 2) + 2 + 1]) + &quot;)&quot;;<br />
            }<br />
            draw_text(20, yy, data);<br />
            yy += 20;<br />
        }<br />
    }</p>
  <p>上述代码将<span class="notranslate">loop</span> ，通过与当前分配的<span class="notranslate">sprite</span> 相关的每个边界框，然后将该数据作为<span class="notranslate">string</span> 绘制到屏幕。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Drawing_And_Miscellaneous.htm">绘画和杂项</a></div>
        <div style="float:right">下一步。 <a href="skeleton_collision_draw_set.htm"><span class="notranslate">skeleton_collision_draw_set</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_get_bounds
-->
  <!-- TAGS
skeleton_get_bounds
-->
</body>
</html>