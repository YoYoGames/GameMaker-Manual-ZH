<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>对象_set_persistent</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function object_set_persistent" />
  <meta name="rh-index-keywords" content="object_set_persistent" />
  <meta name="search-keywords" content="object_set_persistent" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>对象_set_persistent</h1>
  <p>通过这个函数，你可以设置一个特定的<span class="notranslate">object</span> 的持久性。一个持久化的<span class="notranslate">object</span> 是从<span class="notranslate">room</span> &quot;延续 &quot;到<span class="notranslate">room</span> ，并在任何时候都保持其属性（关于持久化的更多信息，请参见 &quot;<a href="../../../../The_Asset_Editors/Objects.htm">对象编辑器</a>&quot;部分）。设置<span class="notranslate">object</span> 的持久性意味着这个<span class="notranslate">object</span> 的所有实例在持久性被<i>改变后</i>创建的时候都将被持久性地创建，而已经在<span class="notranslate">room</span> 的实例可能不受影响。</p>
  <p>当你在一个<span class="notranslate">room</span> 中创建一个启用了持久性的实例时，它将被分配一个层或一个深度（取决于你用哪个函数来创建<span class="notranslate">object</span> 的实例）。当<span class="notranslate">room</span> 被改变时，如果下面的<span class="notranslate">room</span> <i>没有</i>一个与所分配的层具有相同名称或深度的层，那么将为该实例创建一个新的层，该层在<span class="notranslate">rooms</span> 中被持久化。如果你在创建实例时给了一个命名的层，那么新的层也将与原层命名相同，而如果你给实例分配了一个深度，那么新的层将被命名为 &quot;<span class="inline">_layer_XXX</span>&quot; ，其中 &quot; XXX &quot; 是一个用于给该层一个独特名称的十六进制值。这些层将从<span class="notranslate">room</span> ，在<span class="notranslate">Room</span> 结束。关于图层和持久化实例需要注意的另一件事是，如果你在创建时给实例分配了一个命名的图层，而在下面的<span class="notranslate">rooms</span> ，有另一个具有相同名称的图层，那么持久化的实例将被分配到具有相同名称的图层，<i>而不管图层的深度</i>如何。最后，如果一个持久化的实例移动到一个<span class="notranslate">room</span> ，该层的深度与实例创建时的深度相同，那么它将<i>不会</i>被分配到该层，而是在相同的深度创建一个新的层（按照前面解释的命名规则）。</p>
  <p>请注意，这不是一个实例函数!<span class="notranslate">flag</span> 你可以使用 <a href="../Instances/Instance_Variables/persistent.htm"><span class="inline">persistent</span></a>变量，这样就有10个实例都被标记为持久化，即使有关的<span class="notranslate">object</span> ，在<span class="notranslate">flag</span> 中的<span class="notranslate">IDE</span> 被设置为假，即使你用这个函数将<span class="notranslate">flag</span> 的持久化<span class="notranslate">object</span> 改为真，目前在<span class="notranslate">room</span> 中的所有实例将保持原样，只有在调用这个函数后创建的实例才会开始被持久化标记为真。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">object_set_persistent(index, pers);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">index</span></td>
        <td><span data-keyref="Type_Asset_Object">对象资产</span></td>
        <td><span class="notranslate">The index of the object to change.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">pers</span></td>
        <td><span data-keyref="Type_Bool">布尔型</span></td>
        <td><span class="notranslate">Whether the object should be flagged as persistent (<span class="inline">true</span>)或不(<span class="inline">false</span>)。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if (room == rm_final)<br />
    {<br />
        object_set_persistent(obj_Player, false);<br />
    }<br />
    instance_create_layer(32, 32, &quot;Instances&quot;, obj_Player);</p>
  <p>上面的代码检查实例目前在哪个<span class="notranslate">room</span> ，如果它在指定的 &quot;rm_final &quot;中，那么它将<span class="notranslate">object</span> &quot;obj_Player &quot;的持久化设置为false，然后创建实例。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Objects.htm">物体</a></div>
        <div style="float:right">下一步。 <a href="object_set_solid.htm"><span class="notranslate">object_set_solid</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
object_set_persistent
-->
  <!-- TAGS
object_set_persistent
-->
</body>
</html>