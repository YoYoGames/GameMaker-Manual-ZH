<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>事件_执行</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function event_perform" />
  <meta name="rh-index-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end" />
  <meta name="search-keywords" content="event_perform,ev_create,ev_destroy,ev_cleanup,ev_step,ev_step_normal,ev_step_begin,ev_step_end,ev_alarm,ev_keyboard,ev_keypress,ev_keyrelease,ev_mouse,ev_left_button,ev_right_button,ev_middle_button,ev_no_button,ev_left_press,ev_right_press,ev_middle_press,ev_left_release,ev_right_release,ev_middle_release,ev_mouse_enter,ev_mouse_leave,ev_mouse_wheel_up,ev_mouse_wheel_down,ev_global_left_button,ev_global_right_button,ev_global_middle_button,ev_global_left_press,ev_global_right_press,ev_global_middle_press,ev_global_left_release,ev_global_right_release,ev_global_middle_release,ev_gesture,ev_gesture_tap,ev_gesture_double_tap,ev_gesture_drag_start,ev_gesture_dragging,ev_gesture_drag_end,ev_gesture_flick,ev_gesture_pinch_start,ev_gesture_pinch_in,ev_gesture_pinch_out,ev_gesture_pinch_end,ev_gesture_rotate_start,ev_gesture_rotating,ev_gesture_rotate_end,ev_global_gesture_tap,ev_global_gesture_double_tap,ev_global_gesture_drag_start,ev_global_gesture_dragging,ev_global_gesture_drag_end,ev_global_gesture_flick,ev_global_gesture_pinch_start,ev_global_gesture_pinch_in,ev_global_gesture_pinch_out,ev_global_gesture_pinch_end,ev_global_gesture_rotate_start,ev_global_gesture_rotating,ev_global_gesture_rotate_end,ev_collision,ev_other,ev_outside,ev_boundary,ev_game_start,ev_game_end,ev_room_start,ev_room_end,ev_no_more_lives,ev_no_more_health,ev_animation_end,ev_end_of_path,ev_close_button,ev_user,ev_draw,ev_draw_begin,ev_draw_end,ev_draw_pre,ev_draw_post,ev_gui,ev_gui_begin,ev_gui_end" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>事件_执行</h1>
  <p>这个函数将对运行代码的实例执行指定的事件，并带有指定的参数。这里有许多选项，可以完全模拟所有可能的事件，但请注意，这实际上只是执行事件中的所有代码，游戏不会修改任何东西来使它自己手动触发，例如，如果你选择执行一个键盘按压事件，事件将被触发，但相关的键不会被识别为已按下。或者如果你执行一个警报事件，警报计数器不会被设置为-1，而是继续倒数。</p>
  <p>异步事件可以用 <a href="event_perform_async.htm"><span class="inline">event_perform_async()</span></a>.</p>
  <p>下表概述了<span data-keyref="GameMaker Name">GameMaker</span>中包含的用于引用事件类型的所有常量，以及它们的数字值。事件本身用<b>粗体字</b>标记，与 <a href="event_type.htm"><span class="inline">event_type</span></a>变量的返回值（将被传入此函数的第一个参数），而它们的数字值则以<i>斜体字</i>标记，与 <a href="event_number.htm"><span class="inline">event_number</span></a>变量的返回值（将被传入该函数的第二个参数）。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2" width="40%"><span data-keyref="Type_Constant_Event_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">事件类型常数</a></span>&amp; <span data-keyref="Type_Constant_Event_Number"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">事件编号常数</a></span></th>
      </tr>
      <tr>
        <th width="40%">恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><b>创作（ev_create</b></td>
        <td>创建活动</td>
      </tr>
      <tr>
        <td><b>销毁</b></td>
        <td>销毁事件</td>
      </tr>
      <tr>
        <td><b>扫除</b></td>
        <td>清理活动</td>
      </tr>
      <tr>
        <td><b>阶梯</b></td>
        <td>步骤事件</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_normal</i></td>
        <td>步骤</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_begin</i></td>
        <td>开始步骤</td>
      </tr>
      <tr>
        <td><i>   ---- ev_step_end</i></td>
        <td>结束步骤</td>
      </tr>
      <tr>
        <td><b>呼叫中心</b></td>
        <td>报警事件</td>
      </tr>
      <tr>
        <td><i>   ---- 0 ...11</i></td>
        <td>与您希望触发的12个警报中的哪一个有关的数字。</td>
      </tr>
      <tr>
        <td><b>ev_keyboard, ev_keypress, ev_keyrelease</b></td>
        <td>键盘/键盘按压/键盘释放</td>
      </tr>
      <tr>
        <td><i>   ---- 任何键码</i></td>
        <td>例如，vk_space或ord(&quot;W&quot;)。</td>
      </tr>
      <tr>
        <td><b>鼠标</b></td>
        <td>鼠标事件</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_button</i></td>
        <td>在物体上按住左键</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_button</i></td>
        <td>在物体上按住右键</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_button</i></td>
        <td>在物体上按住中间的按钮（或可点击的轮子）。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_no_button</i></td>
        <td>没有按住的按钮</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_press</i></td>
        <td>刚按下的左键在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_press</i></td>
        <td>刚按下的右键在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_press</i></td>
        <td>中间的按钮（或可点击的轮子）刚刚按在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_left_release</i></td>
        <td>左键刚刚释放在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_right_release</i></td>
        <td>右键刚刚释放在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_middle_release</i></td>
        <td>中间的按钮刚刚释放在物体上</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_enter</i></td>
        <td>鼠标刚刚进入对象的边界盒</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_leave</i></td>
        <td>鼠标刚刚离开对象的包围盒</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_wheel_up</i></td>
        <td>鼠标滚轮向上滚动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_mouse_wheel_down</i></td>
        <td>鼠标滚轮向下滚动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_button</i></td>
        <td>在任何地方按住左键</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_button</i></td>
        <td>在任何地方按住右键</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_button</i></td>
        <td>按住中间按钮（或可点击的轮子）的任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_press</i></td>
        <td>左键刚按下的任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_press</i></td>
        <td>右键刚按下的任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_press</i></td>
        <td>中间的按钮（或可点击的轮子）只是按在任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_left_release</i></td>
        <td>左键刚刚释放的任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_right_release</i></td>
        <td>右键刚刚释放的任何地方</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_middle_release</i></td>
        <td>中间按钮刚刚释放的任何地方</td>
      </tr>
      <tr>
        <td><b>姿态</b></td>
        <td>一个手势事件（点击、拖动、轻弹、捏住或旋转）。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_tap</i></td>
        <td>已检测到一个<i>实例</i>的单次点击/触摸和释放</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_double_tap</i></td>
        <td>已检测到一个<i>实例</i>的两次快速触摸/点击和释放</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_drag_start</i></td>
        <td>已检测到一个<i>实例</i>的拖动手势的开始。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_dragging</i></td>
        <td>一个触摸/点击已经被保持并移动了一个<i>实例</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_drag_end</i></td>
        <td>从拖动中释放的触摸/点击已被检测到的一个<i>实例</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_flick</i></td>
        <td>从拖动中释放的触摸/点击有足够的运动量，可以检测到<i>实例</i>的弹跳事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_start</i></td>
        <td>对于一个<i>实例</i>，已经检测到了两次触摸和一次直线运动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_in</i></td>
        <td>一个<i>实例</i>的两次触摸之间的运动已被检测为向内移动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_out</i></td>
        <td>一个<i>实例</i>的两次触摸之间的移动被检测为向外移动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_pinch_end</i></td>
        <td>检测到一个<i>实例</i>的一个(或两个)捏手的释放。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotate_start</i></td>
        <td>一个<i>实例</i>的两次触摸之间的移动被检测为旋转</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotating</i></td>
        <td>一个<i>实例</i>的两次触摸之间的运动被检测为旋转</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gesture_rotate_end</i></td>
        <td>对于一个<i>实例</i>，已经检测到一个（或两个）旋转的触摸的释放。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_tap</i></td>
        <td>在房间的<i>任何地方都</i>检测到一次点击/触摸和释放。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_double_tap</i></td>
        <td>在房间的<i>任何地方都</i>检测到了两次快速的触摸/点击和释放。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_drag_start</i></td>
        <td>在房间的<i>任何地方</i>检测到了一个拖动手势的开始</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_dragging</i></td>
        <td>触摸/点击已被保持并移动到房间的<i>任何地方</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_drag_end</i></td>
        <td>在房间的<i>任何地方都</i>检测到了从拖动中释放的触摸/点击。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_flick</i></td>
        <td>从拖动中释放出的触摸/点击有足够的运动量，可以在房间的<i>任何地方</i>检测到轻弹事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_start</i></td>
        <td>在房间的<i>任何地方</i>检测到两次触摸和一次直线运动</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_ in</i></td>
        <td>在<span class="notranslate">room</span> 的<i>任何地方，</i>两次触摸之间的运动已被检测为向内。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_out</i></td>
        <td>在<span class="notranslate">room</span> ，<i>任何地方的</i>两次触摸之间的移动都被检测为向外移动。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_pinch_end</i></td>
        <td>在房间的<i>任何地方</i>检测到释放一个（或两个）触摸的夹子</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotate_start</i></td>
        <td>在<span class="notranslate">room</span> <i>任何地方的</i>两次触摸之间的运动已被检测为旋转</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotating</i></td>
        <td>在<span class="notranslate">room</span> ，<i>任何地方的</i>两次触摸之间的运动已被检测为旋转</td>
      </tr>
      <tr>
        <td><i>   ---- ev_global_gesture_rotate_end</i></td>
        <td>在房间的<i>任何地方</i>检测到释放一个（或两个）触摸的旋转。</td>
      </tr>
      <tr>
        <td><b>ev_collision</b></td>
        <td>与一个物体相撞</td>
      </tr>
      <tr>
        <td><i>   ---- 要检查的<span class="notranslate">object</span> 的索引。</i></td>
        <td><span class="inline">obj_enemy</span> 例如：</td>
      </tr>
      <tr>
        <td><b>其他</b></td>
        <td>在 "其他 "下所列的行动之一</td>
      </tr>
      <tr>
        <td><i>   ---- ev_outside</i></td>
        <td>该实例是否在房间外</td>
      </tr>
      <tr>
        <td><i>   ---- ev_boundary</i></td>
        <td>实例是否与边界相交</td>
      </tr>
      <tr>
        <td><em>   ---- ev_outside_view0...7</em></td>
        <td>实例是否在给定的视图之外（0到7）。</td>
      </tr>
      <tr>
        <td><em>   ---- ev_boundary_view0...7</em></td>
        <td>该实例是否与给定视图的边界相交（0到7）。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_game_start</i></td>
        <td>只在游戏开始时触发</td>
      </tr>
      <tr>
        <td><i>   ---- ev_game_end</i></td>
        <td>只在游戏结束时触发</td>
      </tr>
      <tr>
        <td><i>   ---- ev_room_start</i></td>
        <td>只在房间开始时触发</td>
      </tr>
      <tr>
        <td><i>   ---- ev_room_end</i></td>
        <td>只在一个房间的末端触发</td>
      </tr>
      <tr>
        <td><i>   ---- ev_animation_end</i></td>
        <td>如果该对象的<span class="notranslate">sprite</span> ，已经达到其动画的终点</td>
      </tr>
      <tr>
        <td><em><i>   ---- ev_animation_update</i></em></td>
        <td>对于使用骨架动画的<span class="notranslate">objects</span> ，每一步都会运行动画事件。</td>
      </tr>
      <tr>
        <td><em><i>   ---- ev_animation_event</i></em></td>
        <td>为骨架动画工具中指定的骨架动画运行的动画事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_end_of_path</i></td>
        <td>如果<span class="notranslate">object</span> ，已经达到了一个<span class="notranslate">path</span> ，它就会被跟随</td>
      </tr>
      <tr>
        <td><i>   ---- ev_user0... ev_user15</i></td>
        <td>16个可用的用户事件之一。</td>
      </tr>
      <tr>
        <td><em>   ---- ev_broadcast_message</em></td>
        <td>广播信息事件用于<span class="notranslate">sprites</span> 和序列</td>
      </tr>
      <tr>
        <td><b>绘制</b></td>
        <td>绘制事件。<i><b><span class="note">注意</span> </b>这个事件不能在抽签事件之外强制执行，常数只是为了在这些情况下执行时识别该事件。</i></td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_begin</i></td>
        <td>抽签开始活动。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_end</i></td>
        <td>抽签结束的事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_pre</i></td>
        <td>抽签前的活动。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_draw_post</i></td>
        <td>抽奖活动的帖子。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui</i></td>
        <td>绘制gui事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui_begin</i></td>
        <td>绘制gui开始事件。</td>
      </tr>
      <tr>
        <td><i>   ---- ev_gui_end</i></td>
        <td>绘制gui结束事件。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">event_perform(type, numb);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Event_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">事件类型常数</a></span></td>
        <td><span class="notranslate">The type of event to perform (see the table above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">numb</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">真实</a></span>或 <span data-keyref="Type_Constant_Event_Number"><a data-rhwidget="HyperlinkPopover" href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Objects/Object_Events/event_perform.htm">事件编号常数</a></span></td>
        <td><span class="notranslate">The specific event constant or value, if one is necessary (otherwise, just use 0).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>扩展实例</h4>
  <p class="dropspot">为了帮助理解这个功能的使用，请看下面几个例子。</p>
  <p class="code">event_perform(ev_keypress, ord(&quot;W&quot;));</p>
  <p class="dropspot">这将执行与键盘检查按下的 &quot;W &quot;键相关的事件（没有实际产生键盘按下）。</p>
  <p class="code">event_perform(ev_step, ev_step_begin);</p>
  <p class="dropspot">这将执行<i>开始步骤</i>事件（如果从任何一个步骤事件中调用，将导致开始步骤事件代码被运行两次）。</p>
  <p class="code">event_perform(ev_create, 0);</p>
  <p class="dropspot">这将执行<i><i> 实例的</i>创建<i> 事件。</i></i></p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Generating_Object_Events.htm">生成<span class="notranslate">Object</span> 事件</a></div>
        <div style="float:right">下一页:<a href="event_perform_async.htm">event_perform_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
event_perform
ev_create
ev_destroy
ev_step
ev_alarm
ev_keyboard
ev_mouse
ev_collision
ev_other
ev_draw
ev_draw_begin
ev_draw_end
ev_draw_post
ev_draw_pre
ev_gui
ev_gui_begin
ev_gui_end
ev_keypress
ev_keyrelease
ev_trigger
ev_left_button
ev_right_button
ev_middle_button
ev_no_button
ev_left_press
ev_right_press
ev_middle_press
ev_left_release
ev_right_release
ev_middle_release
ev_mouse_enter
ev_mouse_leave
ev_mouse_wheel_up
ev_mouse_wheel_down
ev_global_left_button
ev_global_right_button
ev_global_middle_button
ev_global_left_press
ev_global_right_press
ev_global_middle_press
ev_global_left_release
ev_global_right_release
ev_global_middle_release
ev_outside
ev_boundary
ev_game_start
ev_cleanup
ev_game_end
ev_room_start
ev_room_end
ev_no_more_lives
ev_no_more_health
ev_animation_end
ev_end_of_path
ev_close_button
ev_user0
ev_user1
ev_user2
ev_user3
ev_user4
ev_user5
ev_user6
ev_user7
ev_user8
ev_user9
ev_user10
ev_user11
ev_user12
ev_user13
ev_user14
ev_user15
ev_step_normal
ev_step_begin
ev_step_end
ev_gesture
ev_gesture_tap
ev_gesture_double_tap
ev_gesture_drag_start
ev_gesture_drag_end
ev_gesture_dragging
ev_gesture_flick
ev_gesture_pinch_start
ev_gesture_pinch_in
ev_gesture_pinch_out
ev_gesture_pinch_end
ev_gesture_rotate_start
ev_gesture_rotating
ev_gesture_rotate_end
ev_global_gesture_tap
ev_global_gesture_double_tap
ev_global_gesture_drag_start
ev_global_gesture_drag_end
ev_global_gesture_dragging
ev_global_gesture_flick
ev_global_gesture_pinch_start
ev_global_gesture_pinch_in
ev_global_gesture_pinch_out
ev_global_gesture_pinch_end
ev_global_gesture_rotate_start
ev_global_gesture_rotating
ev_global_gesture_rotate_end
-->
  <!-- TAGS
event_perform
-->
</body>
</html>