<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>联网</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Networking  functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Networking" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>联网</h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span>的网络功能是基于<i>套接字</i>的，这是所有平台上的一个行业标准。有了套接字，你就有能力使用简单的<span class="notranslate">servers</span> ，创建客户端和<span class="notranslate">GML</span> ，这使你甚至可以使用客户端/服务器模型创建一个单人游戏（这将允许以后轻松添加多人游戏）。</p>
  <p>基本上，一个套接字是一个<span class="notranslate">object</span> ，它可以发送、接收、连接和监听网络上的<i>端口</i>。这些功能只是处理TCP/IP连接，这也是互联网的基础（更准确地说，是IPv4）。从本质上讲，这可以让你用一个IP地址（比方说192.168.1.10）连接一个套接字到另一个IP地址（比方说192.168.1.11）上的另一个套接字。一旦连接，这两个套接字可以使用 <span class="inline">network_send_*</span> 功能（如 <a href="network_send_packet.htm"><span class="inline">network_send_packet()</span></a>)和由它们触发的专用异步事件。这个异步事件将生成一个<a href="../Data_Structures/DS_Maps/DS_Maps.htm">DS地图</a>，其中包含所收到的数据以及其他细节，你可以在<a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Networking.htm">网络异步事件</a>的章节中找到完整的细节。</p>
  <p>与其说程序不得不读取和处理进入机器的每一点网络流量，不如说IP地址也处理端口，端口的编号从0到65535。这允许每个程序只获得它感兴趣的数据包，而不是每个程序都发送过的所有数据。这也节省了相当多的CPU时间，因为它严重削减了数据处理，所以用<span data-keyref="GameMaker Name">GameMaker</span>你也可以 "监听 "端口。因此，一个<span class="notranslate">server</span> ，创建一个套接字，然后将其绑定到一个特定的端口来监听。然后，它将得到来自该套接字的连接、断开连接和数据传输的通知。</p>
  <p>数据 &quot;包 &quot;本身是由取自<span class="notranslate">buffer</span> 的二进制数据组成的。这个<span class="notranslate">buffer</span> 可以使用<span data-keyref="GameMaker Name">GameMaker</span> <a href="../Buffers/Buffers.htm">Buffer函数</a>来创建和操作。</p>
  <p>值得注意的是，如果你正在为HTML5目标创建一个项目，那么由于浏览器的限制，你将无法使用<span class="notranslate">server</span> 创建函数，而必须使用<strong>Electron </strong>或<strong>NodeJS</strong>等东西为这个平台编写你自己的<span class="notranslate">server</span> 。还需要注意的是，如果你的游戏是跨平台的，并且你打算从运行在移动或桌面设备上的<span class="notranslate">server</span> 连接到游戏的HTML5实例，那么你的<span class="notranslate">server</span> 只能使用Web Socket协议与HTML5实例进行通信（这可以通过常量 <span class="inline">network_socket_ws</span> 或<span class="inline">network_socket_wss</span> 来实现--参见 <a href="network_create_server.htm"><span class="inline">network_create_server()</span></a>获取更多信息）。这意味着你的<span class="notranslate">server</span> 可能必须在不同的端口上创建两个套接字，一个用于连接非HTML5目标（<span class="notranslate">Android</span>,<span class="notranslate">Windows</span>, 等等），一个用于连接HTML5目标。</p>
  <p>有以下功能供你在联网时使用。</p>
  <ul class="colour">
    <li><a href="network_create_server.htm"><span class="notranslate">network_create_server</span></a></li>
    <li><a href="network_create_server_raw.htm">网络_创建_服务器_raw </a></li>
    <li><a href="network_create_socket.htm"><span class="notranslate">network_create_socket</span></a></li>
    <li><a href="network_create_socket_ext.htm"><span class="notranslate">network_create_socket_ext</span></a></li>
    <li><a href="network_connect.htm"><span class="notranslate">network_connect</span></a></li>
    <li><a href="network_connect_async.htm"><span class="notranslate">network_connect_async</span></a></li>
    <li><a href="network_connect_raw.htm"><span class="notranslate">network_connect_raw</span></a></li>
    <li><a href="network_connect_raw_async.htm">网络_连接_async_raw</a></li>
    <li><a href="network_resolve.htm"><span class="notranslate">network_resolve</span></a></li>
    <li><a href="network_set_config.htm"><span class="notranslate">network_set_config</span></a></li>
    <li><a href="network_set_timeout.htm"><span class="notranslate">network_set_timeout</span></a></li>
    <li><a href="network_send_broadcast.htm"><span class="notranslate">network_send_broadcast</span></a></li>
    <li><a href="network_send_packet.htm"><span class="notranslate">network_send_packet</span></a></li>
    <li><a href="network_send_raw.htm"><span class="notranslate">network_send_raw</span></a></li>
    <li><a href="network_send_udp.htm"><span class="notranslate">network_send_udp</span></a></li>
    <li><a href="network_send_udp_raw.htm"><span class="notranslate">network_send_udp_raw</span></a></li>
    <li><a href="network_destroy.htm"><span class="notranslate">network_destroy</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../GML_Reference.htm">GML参考</a></div>
        <div style="float:right">下一步。<a data-condition="Export:StableOnly" data-xref="{title}" href="../Web_And_HTML5/Web_And_HTML5.htm">网络和HTML5</a> <a data-condition="Export:Beta" data-xref="{title}" href="../Rollback/Rollback_Multiplayer.htm">回滚的多人游戏</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Networking
-->
  <!-- TAGS
networking_functions
-->
</body>
</html>