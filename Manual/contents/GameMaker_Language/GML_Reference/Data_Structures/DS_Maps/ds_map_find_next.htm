<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ds_map_find_next</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for ds_map_find_next" />
  <meta name="rh-index-keywords" content="ds_map_find_next" />
  <meta name="search-keywords" content="ds_map_find_next" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ds_map_find_next</h1>
  <p>这个函数返回在函数中指定的键<i>之后</i>存储在DS地图中的下一个键。如果你必须在DS地图中反复寻找，这可能很有用，但应该尽可能避免，因为它可能很慢。如果没有这样的键存在，那么该函数将返回 <span class="inline">undefined</span> 。你应该总是使用 <a href="../../Variable_Functions/is_undefined.htm"><span class="inline">is_undefined()</span></a>函数来检查。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">ds_map_find_next(id, key);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">id</span></td><td><span data-keyref="Type_ID_DS_Map"></span></td>
        <td><span class="notranslate">The id of the map to use.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">key</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The key to find the next one to.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Any">Variable</span> or <span data-keyref="Type_Undefined">undefined</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var size = ds_map_size(inventory);<br />
    var key = ds_map_find_first(inventory);<br />
    for (var i = 0; i &lt; size; i++;)<br />
    {<br />
        if (key != &quot;gold&quot;)<br />
        {<br />
            key = ds_map_find_next(inventory, key);<br />
        }<br />
        else break;<br />
    }</p>
  <p>上面的代码创建了一些临时变量，然后得到DS地图的大小，并找到计算机存储在地图中的第一个键。然后，它使用 <span class="inline">for</span> <span class="notranslate">loop</span> ，遍历DS地图，寻找键值 &quot;金&quot;。如果它找到了，它就把<span class="notranslate">loop</span> 。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="DS_Maps.htm">DS地图</a></div>
        <div style="float:right">下一步。 <a href="ds_map_find_previous.htm"><span class="notranslate">ds_map_find_previous</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
ds_map_find_next
-->
  <!-- TAGS
ds_map_find_next
-->
</body>
</html>