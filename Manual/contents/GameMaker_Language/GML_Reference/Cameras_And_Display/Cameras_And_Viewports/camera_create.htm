<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>创建相机</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for camera_create" />
  <meta name="rh-index-keywords" content="camera_create" />
  <meta name="search-keywords" content="camera_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>创建相机</h1>
  <p>此函数将创建一个 &quot;空 &quot;摄像机，即：一个没有定义视图或投影设置的摄像机。一旦你创建了摄像机，你就可以使用不同的<a href="../../Maths_And_Numbers/Matrix_Functions/Matrix_Functions.htm">矩阵函数</a>来设置视图和投影矩阵。你也可以使用这个函数来创建摄像机，然后使用不同的 <span class="inline">camera_set_*</span> 函数来设置视图，但是请注意，你<i>必须</i>至少提供一个位置和视图尺寸，否则产生的摄像机将是无效的，如果应用于视图端口，会产生奇怪的结果（如果你没有设置<span class="notranslate">object</span> 以下，边界或移动速度，这些将被设置为视图摄像机的默认值，在<span class="notranslate">Room</span> 编辑器）。</p>
  <p>请注意，摄像机和所有的动态资源一样，在创建时将占用内存。这意味着你需要注意不要不必要地创建相机，并通过调用函数销毁那些你不需要的相机 <a href="camera_destroy.htm"><span class="inline">camera_destroy()</span></a>.这也意味着，如果分配给 <span class="inline">global</span> 变量，摄像机将从<span class="notranslate">room</span> 持续到<span class="notranslate">room</span> （分配给实例或局部变量时也会持续存在，但你在改变<span class="notranslate">room</span> 后无法访问它们，因此会有内存泄漏），因此你可以--例如--创建一个新的摄像机，将其分配给一个全局变量，然后在每个<span class="notranslate">room</span> 的开始设置所需的视图和投影矩阵以及你需要使用的视图端口。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">camera_create();</p>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_ID_Camera">Camera ID</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">view_camera[0] = camera_create();<br />
    var viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);<br />
    var projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);<br />
    camera_set_view_mat(view_camera[0], viewmat);<br />
    camera_set_proj_mat(view_camera[0], projmat);</p>
  <p>上面的代码创建了一个新的摄像机并将其ID分配给view[0]。然后，视图和投影矩阵被创建并存储在本地变量中，然后被用来设置摄像机。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="Cameras_And_View_Ports.htm">照相机和查看端口</a></div>
        <div style="float:right">下一步。 <a href="camera_create_view.htm"><span class="notranslate">camera_create_view</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
camera_create
-->
  <!-- TAGS
camera_create
-->
</body>
</html>