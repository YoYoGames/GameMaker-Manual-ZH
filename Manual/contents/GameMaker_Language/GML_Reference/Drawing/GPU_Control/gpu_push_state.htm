<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_push_state</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_push_state" />
  <meta name="rh-index-keywords" content="gpu_push_state" />
  <meta name="search-keywords" content="gpu_push_state" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_push_state</h1>
  <p>通过这个函数，你可以把当前的GPU状态推到一个堆栈中，以便以后使用。一般来说，如果你想 &quot;保存 &quot;当前的GPU状态（像混合模式、阿尔法书写、剔除等都会被推送到堆栈中），然后用不同的设置绘制一些东西，然后将GPU堆栈重置为之前的样子（通过调用 <a href="gpu_pop_state.htm"><span class="inline">gpu_pop_state()</span></a>).</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">gpu_push_state();</p>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">gpu_push_state();<br />
    gpu_set_blendmode(bm_add);<br />
    gpu_set_blendenable(false);<br />
    gpu_set_cullmode(true);<br />
    with (obj_Effect_Parent)<br />
    {<br />
        draw_self();<br />
    }<br />
    gpu_pop_state();</p>
  <p>上述代码将在堆栈中 &quot;保存 &quot;当前的GPU状态，然后改变某些GPU设置并绘制一组实例，然后将GPU状态重置为之前的状态。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="GPU_Control.htm">GPU控制</a></div>
        <div style="float:right">下一步。 <a href="gpu_pop_state.htm"><span class="notranslate">gpu_pop_state</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_push_state
-->
  <!-- TAGS
gpu_push_state
-->
</body>
</html>