<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_zwriteenable</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_zwriteenable" />
  <meta name="rh-index-keywords" content="gpu_set_zwriteenable" />
  <meta name="search-keywords" content="gpu_set_zwriteenable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_set_zwriteenable</h1>
  <p>这个函数可以用来切换使用z-buffer的深度排序（<span class="inline">true</span> ）和关闭（<span class="inline">false</span> ）。当一个实例在<span data-keyref="GameMaker Name">GameMaker</span>中被渲染时，生成的像素的深度（它的z坐标）被保存在z-buffer中，然后，如果场景的另一个实例必须在同一个像素上被渲染，两个深度被比较（z-testing - 见 <a href="gpu_set_ztestenable.htm"><span class="inline">gpu_set_ztestenable()</span></a>)，然后将 &quot;更接近 &quot;观察者的深度保存到z-buffer中，替换掉原来的深度。然而，这并不总是你希望发生的，有些时候，你可能希望某个东西被画在其他东西上面，不管它的Z值是多少。在这些情况下，你可以使用这个函数<span class="notranslate">switch</span> ，关闭对Z缓冲区的写入，从而迫使正在绘制的东西被绘制在其他东西之上。请注意，这里给出的描述是针对<i>默认的</i>z测试比较模式的，但这可以被改变</p>
  <p>默认值是启用z-buffering (<span class="inline">true</span>)。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">gpu_set_zwriteenable(enable);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">enable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">The comparison mode to use (see list above)</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">gpu_set_zwriteenable(false);<br />
    with (obj_Menu_Containers)<br />
    {<br />
        draw_self();<br />
    }<br />
    gpu_set_zwriteenable(true);</p>
  <p>上面的代码关闭了Z型缓冲区的写入，绘制了一些<span class="notranslate">objects</span> ，然后再次打开，继续绘制。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="GPU_Control.htm">GPU控制</a></div>
        <div style="float:right">下一步。 <a href="gpu_set_fog.htm"><span class="notranslate">gpu_set_fog</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_zwriteenable
-->
  <!-- TAGS
gpu_set_zwriteenable
-->
</body>
</html>