<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>表面</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Surface functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Surfaces,application_surface,application surface,app surface" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>表面</h1>
  <p>在正常的绘制事件中，<span data-keyref="GameMaker Name">GameMaker</span>实际上并不直接绘制到屏幕上，而是绘制到一个叫做<i>应用表面</i>的<b>表面</b>。这个表面基本上是一个空白的 &quot;画布&quot;，随后可以在需要时在绘制到屏幕之前进行操作，在大多数情况下，<span data-keyref="GameMaker Name">GameMaker</span>为你处理这个问题（尽管你也可以自己在代码中操作<span class="notranslate">shaders</span> 、缩放和其他许多事情--下面会给出进一步的细节）。</p>
  <p>然而，除了这个应用表面之外，你还可以创建自己的表面，用它们在游戏中创造出令人惊叹或微妙的特殊效果。例如，你可以用表面来 &quot;捕捉 &quot;实例，然后将其销毁，通过这种方式，你可以创造一种贴花效果，在表面上显示该实例的<span class="notranslate">sprite</span> ，就像它仍然存在一样，允许产生像碎片、血液等的图形效果......而没有任何实际的处理费用。你可以用表面做的另一件事是把它们作为<span class="notranslate">textures</span> ，以便进行操作，或者 &quot;在空中 &quot;创建<span class="notranslate">sprites</span> ，或者创建复杂的覆盖。事实上，表面的用途是无穷无尽的。</p>
  <p>普通的表面是相当容易使用的，但在使用时有一些基本的规则需要遵守。</p>
  <ul class="colour">
    <li>首先，你应该意识到表面<i>（除了</i>应用程序表面）是 &quot;不稳定的&quot;。这意味着如果设备或窗口失去焦点或被最小化（很好的例子是当你在Windows上ALT +Tab到不同的窗口然后再回来，或者在<span class="notranslate">Android</span> 设备上当应用程序由于调用而失去焦点时），那么表面<strong>可能会被破坏</strong>。这是因为它<em>只</em>存储在<span class="notranslate">texture</span> 内存<a class="glossterm" data-glossterm="VRAM" href="#">（VRAM</a>）中，当目标平台需要该内存做其他事情时，可能会被覆盖，这意味着你应该 <i><b>总是</b></i>有某种类型的故障安全代码，通常与 <a href="surface_exists.htm"><span class="inline">surface_exists()</span></a>函数。</li>
  </ul>
  <p class="note" style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 4em"><span class="note">注意</span><strong> </strong>这似乎不会发生在<span class="notranslate">sprites</span> 或其他视觉<span class="notranslate">assets</span> （但实际上会发生！），因为它们也存储在常规内存（RAM）中，当它们从<span class="notranslate">texture</span> 内存（VRAM）中移除时，当游戏重新获得焦点时，它们会立即从常规内存中恢复。</p>
  <ul class="colour">
    <li>第二，你应该注意，表面可能需要大量的VRAM来使用，所以你应该尝试让它们尽可能小。通常情况下，你会试着让它们不大于视图或显示窗口的大小。</li>
    <li>第三，你应该<b>只在绘制事件中创建曲面</b>。如果你在实例的创建事件中创建了一个曲面，你可能会得到与 <span class="inline">application_surface</span><i>相同的</i>索引。这可能会造成很多问题和混乱，因为你认为你在使用自己的曲面，但实际上你在使用当前的渲染目标。你也应该尽量在draw事件中限制对曲面的<i>绘制</i>，因为<span data-keyref="GameMaker Name">GameMaker</span>对屏幕的绘制方式是最优化的，建议你把所有的绘制功能<i>放在draw事件中</i>--这包括在第一次创建曲面时清除它，等等。在绘制事件之外绘制表面是可能的，对于某些效果来说甚至是必要的，但这不是<em>应该</em>做的。</li>
    <li>第四，在手动绘制曲面时，曲面<i>总是</i>在(0,0)的位置。这意味着你可能需要将<em>绝对</em>坐标转换为曲面的<em>相对</em>坐标。例如，如果你有一个相机大小的曲面，并希望在该曲面上绘制当前在相机中可见的东西，你应该用相机视图的x和y坐标减去实际的x和y坐标，得到与曲面(0,0)位置的相对位置。所以，代码看起来会是这样的。</li>
  </ul>
  <p class="code">if view_current = 0<br />
    {<br />
        surface_set_target(surf);<br />
        with (obj_Effect)<br />
        {<br />
            var _vx = camera_get_view_x(view_camera[1]);<br />
            var _vy = camera_get_view_y(view_camera[1]);<br />
            draw_sprite(sprite_index, image_index, x - _vx, y - _vy);<br />
        }<br />
        surface_reset_target();<br />
    }<br />
    else<br />
    {<br />
        draw_surface(surf, 0, 0);<br />
    }</p>
  <ul class="colour">
    <li>最后，值得注意的是，在曲面上绘图会考虑到每个像素的颜色<em>和</em>阿尔法成分，这既来自于曲面本身，也来自于被绘制的内容。这可能会导致一些相当不直观的结果（例如，用0.5的阿尔法绘制一个<span class="notranslate">sprite</span> ，而表面的阿尔法是0，最终的阿尔法是0.25）。这方面的原因在下面的页面有解释，我们建议你在使用曲面之前先阅读一下。<a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Blendmodes使用指南</a></li>
  </ul>
  <p class="note"><span class="note">注意</span>这不是<a href="application_surface.htm">应用表面</a>的真实情况，只是用户创建的表面。</p>
  <p>表面的基本用途如下。</p>
  <ul class="colour">
    <li>你首先创建一个曲面，并将其索引分配给一个变量。</li>
    <li>然后，你将把绘图目标设置为表面，而不是显示器。</li>
    <li>接下来，你会画出你希望的东西，以及进行任何其他操作。</li>
    <li>一旦你完成了，你就会重置绘图目标，这样所有进一步的绘图就会重新发生在屏幕上。</li>
    <li>最后，你会画出这个表面（或在<span class="notranslate">shader</span> ，或任何需要的地方使用它）。</li>
  </ul>
  <p>有一点需要注意的是，如果你需要在一个表面上绘制整个显示（包括<span class="notranslate">tiles</span> ，背景等...），你可以简单地访问应用程序的表面本身（进一步的细节见下文），或者你可以使用变量将一个表面分配给一个视图端口 <a href="../../Cameras_And_Display/Cameras_And_Viewports/view_surface_id.htm"><span class="inline">view_surface_id[0..7]</span></a>这样，该视口中所有可见的东西都会被绘制到相应的表面。</p>
  <p>以下是处理曲面的函数（这些函数是专门用来创建和操作曲面的，但要真正把它们画到屏幕上，你应该使用具体的绘制函数，可以在下面找到）。</p>
  <ul class="colour">
    <li><a href="surface_exists.htm"><span class="notranslate">surface_exists</span></a></li>
    <li><a href="surface_create.htm"><span class="notranslate">surface_create</span></a></li>
    <li><a href="surface_create_ext.htm"><span class="notranslate">surface_create_ext</span></a></li>
    <li><a href="surface_resize.htm"><span class="notranslate">surface_resize</span></a></li>
    <li><a href="surface_set_target.htm"><span class="notranslate">surface_set_target</span></a></li>
    <li><a href="surface_set_target_ext.htm"><span class="notranslate">surface_set_target_ext</span></a></li>
    <li><a href="surface_get_target.htm"><span class="notranslate">surface_get_target</span></a></li>
    <li><a href="surface_get_target_ext.htm"><span class="notranslate">surface_get_target_ext</span></a></li>
    <li><a href="surface_reset_target.htm"><span class="notranslate">surface_reset_target</span></a></li>
    <li><a href="surface_copy.htm"><span class="notranslate">surface_copy</span></a></li>
    <li><a href="surface_copy_part.htm"><span class="notranslate">surface_copy_part</span></a></li>
    <li><a href="surface_depth_disable.htm"><span class="notranslate">surface_depth_disable</span></a></li>
    <li><a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></li>
    <li><a href="surface_get_width.htm"><span class="notranslate">surface_get_width</span></a></li>
    <li><a href="surface_get_texture.htm"><span class="notranslate">surface_get_texture</span></a></li>
    <li><a href="surface_get_depth_disable.htm"><span class="notranslate">surface_get_depth_disable</span></a></li>
    <li><a href="surface_getpixel.htm"><span class="notranslate">surface_getpixel</span></a></li>
    <li><a href="surface_getpixel_ext.htm"><span class="notranslate">surface_getpixel_ext</span></a></li>
    <li><a href="surface_free.htm"><span class="notranslate">surface_free</span></a></li>
    <li><a href="surface_save.htm"><span class="notranslate">surface_save</span></a></li>
    <li><a href="surface_save_part.htm"><span class="notranslate">surface_save_part</span></a></li>
  </ul>
  <p> </p>
  <p>在绘制曲面时有以下功能。</p>
  <p class="note"><b><span class="note">注意</span> </b>在处理表面时，由于它们被储存在<span class="notranslate">texture</span> ，它们有可能在任何时候都不存在了。你应该在直接引用表面之前<b>，</b>用 <span style="font-size:1px;"><a href="surface_exists.htm"><span class="inline">surface_exists()</span></a></span>来检查曲面是否存在，然后再直接引用它们。</p>
  <ul class="colour">
    <li><a href="draw_surface.htm"><span class="notranslate">draw_surface</span></a></li>
    <li><a href="draw_surface_ext.htm"><span class="notranslate">draw_surface_ext</span></a></li>
    <li><a href="draw_surface_part.htm"><span class="notranslate">draw_surface_part</span></a></li>
    <li><a href="draw_surface_part_ext.htm"><span class="notranslate">draw_surface_part_ext</span></a></li>
    <li><a href="draw_surface_stretched.htm"><span class="notranslate">draw_surface_stretched</span></a></li>
    <li><a href="draw_surface_stretched_ext.htm"><span class="notranslate">draw_surface_stretched_ext</span></a></li>
    <li><a href="draw_surface_tiled.htm"><span class="notranslate">draw_surface_tiled</span></a></li>
    <li><a href="draw_surface_tiled_ext.htm"><span class="notranslate">draw_surface_tiled_ext</span></a></li>
    <li><a href="draw_surface_general.htm"><span class="notranslate">draw_surface_general</span></a></li>
  </ul>
  <p> </p>
  <p>最后，你有两个函数来存储和检索<a href="../../Buffers/Buffers.htm">缓冲区</a>的表面。</p>
  <ul class="colour">
    <li><a href="../../Buffers/buffer_get_surface.htm"><span class="notranslate">buffer_get_surface</span></a></li>
    <li><a href="../../Buffers/buffer_set_surface.htm"><span class="notranslate">buffer_set_surface</span></a></li>
  </ul>
  <p> </p>
  <p>如上所述，<span data-keyref="GameMaker Name">GameMaker</span>实际上并不直接将大多数东西渲染到屏幕上，而是将它们渲染到<b>应用程序表面</b>。这本质上是一个曲面--就像你可以使用曲面函数自己制作的任何曲面一样--因此它可以被操作、绘制、发送到<span class="notranslate">shaders</span> ，等等。基本上，任何你通常对自己创建的曲面所做的事情都可以应用到应用程序的曲面上。</p>
  <p class="note"><b>注意</b>：你对应用表面唯一<b>不能</b>做的事情就是释放它。它始终存在，尽管访问它的索引值可能会改变。</p>
  <p>当你运行你的游戏时，这个曲面是在你进入的每个新<span class="notranslate">room</span> ，第一次调用<a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">绘制事件</a>时创建的，这意味着在这之前没有任何东西被绘制。然而，你仍然可以在<b>创建事件</b>或任何其他事件中获得应用表面的位置并调整其大小，而不会出现任何错误，而且所使用的值将与表面创建时相关。创建和绘制应用程序表面的实际<span class="notranslate">sequence</span> 事件如下。</p>
  <ul class="colour">
    <li>抽签前的活动<br>
               </li>
    <li><b></b>对于每个可见的视图端口，或者，如果没有视图端口处于活动状态，则一次
      <ul class="colour">
        <li>绘图开始事件</li>
        <li>绘制事件</li>
        <li>绘制结束事件<br>
                  ---&gt;<b>应用表面的渲染目标在这里被重置</b></li>
      </ul>
    </li>
    <li><b></b>抽签后的活动<br>
             <b><br>
                        </b> <span class="notranslate">switch</span> (尽管你可以使用<span class="inline"><a href="application_surface_draw_enable.htm">application_surface_draw_enable()</a></span> 关闭这个功能)</li>
    <li><b></b>绘制GUI开始事件</li>
    <li>绘制GUI事件</li>
    <li>绘制GUI结束事件</li>
  </ul>
  <p>使用这个表面意味着你可以轻松地使用<span class="notranslate">shaders</span> ，创造出令人难以置信的过渡，或者把屏幕和包裹在一个3D形式，或者简单地把一个低分辨率的游戏放大到任何分辨率的屏幕上......可能性是无穷无尽的!</p>
  <p>要访问这个表面，你需要使用内置的全局变量 <span class="inline">application_surface</span> ，这在下一页有解释。</p>
  <ul class="colour">
    <li><a href="application_surface.htm"><span class="notranslate">application_surface</span></a></li>
  </ul>
  <p> </p>
  <p>你还有一些专门的功能，这些功能<em>只 </em>为应用面而设计。</p>
  <ul class="colour">
    <li><a href="application_surface_enable.htm"><span class="notranslate">application_surface_enable</span></a></li>
    <li><a href="application_surface_is_enabled.htm"><span class="notranslate">application_surface_is_enabled</span></a></li>
    <li><a href="application_get_position.htm"><span class="notranslate">application_get_position</span></a></li>
    <li><a href="application_surface_draw_enable.htm"><span class="notranslate">application_surface_draw_enable</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Drawing.htm">绘画</a></div>
        <div style="float:right">下一步。<a href="../Lighting/Lighting.htm">照明</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Surfaces
app surface
application surface
-->
  <!-- TAGS
surfaces_functions
-->
</body>
</html>