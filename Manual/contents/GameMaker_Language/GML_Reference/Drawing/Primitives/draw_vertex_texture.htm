<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>绘制顶点纹理（draw_vertex_texture</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for draw_vertex_texture" />
  <meta name="rh-index-keywords" content="draw_vertex_texture" />
  <meta name="search-keywords" content="draw_vertex_texture" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>绘制顶点纹理（draw_vertex_texture</h1>
  <p>此函数为一个基元定义了纹理<span class="notranslate">vertex</span> 的位置。基元的最终外观取决于所选择的要绘制的基元类型（详情请参见 <a href="draw_primitive_begin.htm"><span class="inline">draw_primitive_begin()</span></a>更多信息）、向其添加顶点的顺序以及为<span class="notranslate">texture</span> 设置的起始点的位置。要结束并绘制基元，必须调用 <a href="draw_primitive_end.htm"><span class="inline">draw_primitive_end()</span></a>.</p>
  <p>您还可以通过设置适当的xtex/ytex位置来取样，选择仅在基元的表面上绘制<i>部分</i> <span class="notranslate">texture</span> （这些坐标也被称为<b>UV</b>点）。此点由 0 和 1 之间的一个值定义，要使用的图像的左上角是 (0,0) 点，右下角是 (1,1) 点。通过这种方式，您可以<span class="notranslate">texture</span> ，一个只有部分源图像的基元<span class="notranslate">asset</span> 。</p>
  <p>绘制纹理基元时，<span class="notranslate">texture</span> 将与<a html="../colour And Blending/draw_set_colour.html"><span class="inline">draw_set_colour</span> 设置的颜色相混合</a> <a html="../colour And Blending/draw_set_colour.html">。这意味着，要绘制没有混合的<span class="notranslate">texture</span> ，应将其设为 <span class="inline">c_white</span> ，如下例所示。</a></p>
  <p class="note"><a html="../colour And Blending/draw_set_colour.html"><b><span class="note">注意</span></b>对于一个<span class="notranslate">texture</span> ，它的大小必须是2的幂，即：32x32，128x128，等等。</a></p>
  <p> </p>
  <h4><a html="../colour And Blending/draw_set_colour.html">语法。</a></h4>
  <p class="code"><a html="../colour And Blending/draw_set_colour.html">draw_vertex_texture(x, y, xtex, ytex)</a></p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">x</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The x coordinate of the vertex.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">y</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The y coordinate of the vertex.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xtex</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The width of the texture sample to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ytex</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The height of the texture sample to use.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4><a html="../colour And Blending/draw_set_colour.html">返回。</a></h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4><a html="../colour And Blending/draw_set_colour.html">例子。</a></h4>
  <p class="code"><a html="../colour And Blending/draw_set_colour.html">draw_set_colour(c_white);<br />
      var tex = sprite_get_texture(spr_Background, 0);<br />
      draw_primitive_begin_texture(pr_trianglestrip, tex);<br />
      draw_vertex_texture(0, 0, 0, 0);<br />
      draw_vertex_texture(640, 0, 1, 0);<br />
      draw_vertex_texture(0, 480, 0, 1);<br />
      draw_vertex_texture(640, 480, 1, 1);<br />
      draw_primitive_end();</a></p>
  <p><a html="../colour And Blending/draw_set_colour.html">上述代码将绘制一个4<span class="notranslate">vertex</span> 的三角形条（构成一个矩形），用 &quot;tex &quot;变量中持有的<span class="notranslate">texture</span> 进行纹理处理，整个<span class="notranslate">texture</span> ，以覆盖完成的基元。</a></p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Primitives_And_Vertex_Formats.htm">原理和<span class="notranslate">Vertex</span> 形式</a></div>
        <div style="float:right">下一步。 <a href="draw_vertex_texture_colour.htm"><span class="notranslate">draw_vertex_texture_colour</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
draw_vertex_texture
-->
  <!-- TAGS
draw_vertex_texture
-->
</body>
</html>