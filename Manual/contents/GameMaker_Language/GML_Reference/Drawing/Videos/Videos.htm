<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>视频播放</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Overview of video drawing functions" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-index-keywords" content="videos" />
  <meta name="search-keywords" content="videos" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1 id="h1">视频播放</h1>
  <h2>如何播放视频？</h2>
  <p>按照这些步骤，在<span class="notranslate">runtime</span> ，加载视频并播放它们。</p>
  <ul class="colour">
    <li>添加一个视频文件到你项目的<a data-xref="{text}" href="../../../../Settings/Included_Files.htm#h">Included Files</a><span class="inline2">（/datafiles</span>目录）。</li>
    <li>使用 <span class="inline"><a href="video_open.htm">video_open()</a></span> 加载视频。
      <ul>
        <li>或者，从一个URL中加载一个视频。</li>
      </ul>
    </li>
    <li>在绘图事件中使用 <span class="inline"><a href="video_draw.htm">video_draw()</a></span> 绘制它。
      <ul>
        <li>这个函数将视频绘制到一个内部表面，并将其作为返回数组的一部分返回。</li>
        <li>你必须使用 <span class="inline"><a href="../Surfaces/draw_surface.htm">draw_surface()</a></span> 手动绘制该表面，以使视频出现。
          <ul>
            <li>绘制<a data-xref="{title}" href="YUV_Videos.htm">YUV视频</a>将需要额外的步骤。</li>
          </ul>
        </li>
      </ul>
    </li>
    <li>当视频结束时，通过调用 <span class="inline"><a href="video_close.htm">video_close()</a></span> ，将其从内存中删除。
      <ul>
        <li>当视频结束时，使用<a href="#h">Async Callbacks</a>来运行代码。</li>
      </ul>
    </li>
  </ul>
  <h2>视频编解码器和许可证</h2>
  <p><span data-keyref="GameMaker Name">GameMaker</span>不附带任何编解码器，而是使用游戏运行平台上的编解码器。这意味着你的视频必须以一种可以在你的目标平台上解码的格式进行编码。</p>
  <p>使用某些格式可能需要你支付许可费，这取决于相关编解码器的许可和你的游戏收入，在这种情况下，开发商将在法律上负责向编解码器所有者支付任何费用。编解码器在每个平台上的许可也是不同的，因此对于在多个平台上发行的游戏必须小心谨慎。</p>
  <p>请注意，视频格式（如<span class="inline2">.mp4</span>、<span class="inline2">.avi</span>、<span class="inline2">.mkv</span>等）只是包裹<strong>视频</strong>和<strong>音频</strong>流的容器，这两种格式可能是单独编码的，可能需要单独的许可证。</p>
  <p>对于在控制台平台上的发行，请向你的客户代表查询，以了解你被允许使用哪些格式而不必支付额外的许可费。</p>
  <h2>格式</h2>
  <p>你能够在游戏中加载和播放的视频格式将取决于你的目标平台，以及该平台所支持的编解码器。</p>
  <h2>职能</h2>
  <p>你可以在<span class="notranslate">runtime</span> ，使用以下功能加载、播放和操作视频文件。</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="video_open.htm">视频_打开</a></li>
    <li><a data-xref="{title}" href="video_close.htm">视频_关闭</a></li>
    <li><a data-xref="{title}" href="video_draw.htm">视频_画图</a></li>
    <li><a data-xref="{title}" href="video_set_volume.htm">视频_set_volume</a></li>
    <li><a href="video_pause.htm">视频_暂停</a></li>
    <li><a href="video_resume.htm">视频_简历</a></li>
    <li><a href="video_enable_loop.htm">视频_启用_循环</a></li>
    <li><a href="video_seek_to.htm">视频_搜索_到</a></li>
  </ul>
  <p> </p>
  <p>以下函数用于获取当前加载的视频的信息。</p>
  <ul class="colour">
    <li><a href="video_is_looping.htm">视频_is_looping</a></li>
    <li><a href="video_get_volume.htm">视频_get_volume</a></li>
    <li><a href="video_get_duration.htm">视频_get_duration </a></li>
    <li><a href="video_get_position.htm">视频_get_position</a></li>
    <li><a href="video_get_status.htm">视频_get_status</a></li>
    <li><a href="video_get_format.htm">视频_get_format </a></li>
  </ul>
  <h2 id="h">异步回调</h2>
  <p><a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm">Async Social</a>事件在下面给出的阶段被触发，其<span class="inline2">async_load</span>map中的<span class="inline2">&quot;type &quot;</span>键被设置为给定值。</p>
  <ul class="colour">
    <li><span class="inline2">&quot;video_start&quot;</span>: 当视频开始播放时，也就是它的<a href="video_get_status.htm">状态</a>从<span class="inline2">video_status_preparing</span>变为<span class="inline2">video_status_playing</span>时。</li>
    <li><span class="inline2">&quot;video_end&quot;</span>: 当视频结束时。当视频被<a href="video_enable_loop.htm">设置为循环</a>时，这不会触发。</li>
  </ul>
  <p>下面是一个监听视频回调的Async Social事件的例子。</p>
  <p class="code">var _type = async_load[? &quot;type&quot;];<br />
    <br />
    if (_type == &quot;video_start&quot;)<br />
    {<br />
        obj_video.display_video = true;<br />
    }<br />
    else if (_type == &quot;video_end&quot;)<br />
    {<br />
        obj_video.display_video = false;<br />
        video_close();<br />
    }
  </p>
  <p>上面的代码从<span class="inline2">async_load</span>map中读取类型。当视频启动时，它将<span class="notranslate">object</span> 中的一个变量设置为<span class="inline2">true</span>，这样就可以显示视频。</p>
  <p>当视频结束时，它将同一变量设置为<span class="inline2">false</span>，然后调用 <span class="inline"><a href="video_close.htm">video_close()</a></span> ，从内存中删除视频。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>返回。<a data-xref="{title}" href="../Drawing.htm">绘画</a></div>
        <div>下一步。<a data-xref="{title}" href="../Colour_And_Alpha/Colour_And_Alpha.htm">颜色和阿尔法</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
	Videos
-->
  <!-- TAGS
-->
</body>
</html>