<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_夹具设置_运动学</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_set_kinematic" />
  <meta name="rh-index-keywords" content="physics_fixture_set_kinematic" />
  <meta name="search-keywords" content="physics_fixture_set_kinematic" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_夹具设置_运动学</h1>
  <p>在基于物理学的游戏中，会有一些情况，你想四处移动，但不希望受到重力等力的作用，也不希望受到与动态<span class="notranslate">objects</span> 碰撞产生的力的作用（例如，想想平台游戏中的移动平台）。
    例如平台游戏中的移动平台）。对于这样的<span class="notranslate">objects</span> ，简单地将夹具的密度设置为0将意味着物理学将假定<span class="notranslate">object</span> 是静态的。然而，如果你把 <a href="../Physics_Variables/phy_speed_x.htm"><span class="inline">phy_speed_x</span></a>,
    <a href="../Physics_Variables/phy_speed_y.htm"><span class="inline">phy_speed_y</span></a>或 <a href="../Physics_Variables/phy_angular_velocity.htm"><span class="inline">phy_angular_velocity</span></a>变量，它就会被转换为运动学，并开始进行运动。
    转换成运动学的<span class="notranslate">object</span> ，并开始运动。在模拟过程中，将实例从静态变为运动式可能在处理上很昂贵（取决于物理世界中实例的状态），因此，建议在将夹具绑定到物理世界之前，使用此函数将其设置为运动式。
    因此，建议在将其绑定到一个实例之前，使用这个函数将夹具设置为运动学的，这样它就不会受到碰撞和力（比如重力）的影响，但可以以恒定的线性和/或角速度移动。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_fixture_set_kinematic(fixture)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td><td><span data-keyref="Type_ID_PhyFixture"></span></td>
        <td><span class="notranslate">the index of the fixture</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">physics_fixture_set_kinematic(fix_Cloud);</p>
  <p>上面的代码将表明，在 &quot;fix_Cloud &quot;中索引的夹具应该被标记为运动型的。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Fixtures.htm">固定装置</a></div>
        <div style="float:right">下一步。 <a href="physics_fixture_set_awake.htm"><span class="notranslate">physics_fixture_set_awake</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_set_kinematic
-->
  <!-- TAGS
physics_fixture_set_kinematic
-->
</body>
</html>