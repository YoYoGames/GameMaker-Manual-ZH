<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_夹具_设置链的形状</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_fixture_set_chain_shape" />
  <meta name="rh-index-keywords" content="physics_fixture_set_chain_shape" />
  <meta name="search-keywords" content="physics_fixture_set_chain_shape" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_夹具_设置链的形状</h1>
  <p>这个函数定义了一个 &quot;链式 &quot;灯具形状。一个链式灯具是由一些点组成的，然后用边缘形状将它们连接起来。这个函数本身需要灯具的索引（ID），并可以告诉灯具是否要<span class="notranslate">loop</span> 。将其设置为 <span class="inline">true</span> ，将用边缘连接最后一个点和第一个点，而将其设置为 <span class="inline">false</span> ，则不会。请注意，这个函数是为灯具准备的，以接受制作链条所需的点，这些点应该在调用这个函数后添加，使用 <a href="physics_fixture_add_point.htm"><span class="inline">physics_fixture_add_point()</span></a>来添加这些点，就像你在建立一个多边形夹具时一样。</p>
  <p>当创建一个链式灯具时，你必须给它至少两个点，但你不限制后续的点的数量，你可以添加组成成品的灯具。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_fixture_set_chain_shape(fixture, loop)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">fixture</span></td><td><span data-keyref="Type_ID_PhyFixture"></span></td>
        <td><span class="notranslate">The index of the fixture</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">loop</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">Whether to close the chain (<span class="inline">true</span>)或不(<span class="inline">false</span>)。</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var xx = -100;<br />
    var yy = room_height / 2;<br />
    var fix = physics_fixture_create(); physics_fixture_set_chain_shape(fix, false);<br />
    for (var i = 0; i &lt; 10; i++;)<br />
    {<br />
        physics_fixture_add_point(fix, xx, yy);<br />
        xx += 50 + random(150);<br />
        yy = (room_height / 2) - 250 + irandom(500);<br />
    }<br />
    physics_fixture_bind(fix, id);</p>
  <p>上面的代码将在<span class="notranslate">room</span> ，在长度上创建一行具有不同高度的 &quot;边缘 &quot;灯具。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Fixtures.htm">固定装置</a></div>
        <div style="float:right">下一步。 <a href="physics_fixture_set_polygon_shape.htm"><span class="notranslate">physics_fixture_set_polygon_shape</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_fixture_set_chain_shape
-->
  <!-- TAGS
physics_fixture_set_chain_shape
-->
</body>
</html>