<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学_粒子组_get_data</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_particle_group_get_data" />
  <meta name="rh-index-keywords" content="physics_particle_group_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="search-keywords" content="physics_particle_group_get_data,phy_particle_data_flag_typeflags,phy_particle_data_flag_position,phy_particle_data_flag_velocity,phy_particle_data_flag_colour,phy_particle_data_flag_category,phy_particle_data_flag_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学_粒子组_get_data</h1>
  <p>这个函数使用给定的<span class="notranslate">flags</span> ，返回物理模拟中的一组粒子的各种信息。组的索引（它的ID）是由函数返回的。 <a href="physics_particle_group_end.htm"><span class="inline">physics_particle_group_end()</span></a>返回的信息，而所使用的<span class="notranslate">buffer</span> ，必须是以前用函数创建的。 <a href="../../Buffers/buffer_create.htm"><span class="inline">buffer_create()</span></a>.它应该是 &quot;增长 &quot;类型的，其大小大约是预期返回数据的大小。<span class="notranslate">flags</span> 本身是使用下面给出的常数来设置的，你将使用<a href="../../../../Additional_Information/Bitwise_Operators.htm">位法<i>或</i></a>&quot;|&quot;来创建一个单一的<span class="notranslate">flag</span> 值来获得所需的信息。</p>
  <table>
    <tbody>
      <tr>
        <th>恒定</th>
        <th>描述</th>
        <th>数据类型</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_typeflags</span></td>
        <td>粒子的<span class="notranslate">flags</span> 值。</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_position</span></td>
        <td>粒子的X和Y位置。</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_velocity</span></td>
        <td>水平和垂直速度。</td>
        <td><span class="notranslate">2 x buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_colour</span></td>
        <td>颜色和阿尔法值（十六进制）。</td>
        <td><span class="notranslate">buffer_f32</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">phy_particle_data_flag_category</span></td>
        <td>粒子类别（在你创建它所属的组时定义）。</td>
        <td><span class="notranslate">buffer_u32</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">physics_particle_group_get_data(group, buffer, flags)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">group</span></td>
        <td><span data-keyref="Type_ID_Phy_Particle_Group">物理学粒子组ID</span></td>
        <td><span class="notranslate">The group index (ID) of the particle group to get the data from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">缓冲区ID</span></td>
        <td><span class="notranslate">The (previously created) buffer to use to store the data.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">flags</span></td>
        <td><span data-keyref="Type_Constant_Phy_Particle_Data_Flag">物理学粒子数据<span class="notranslate">Flag</span> 常数</span>(s)</td>
        <td><span class="notranslate">The flags to use to extract data about specific particle types.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var count = physics_particle_group_count(gp);<br />
    var flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;<br />
    if (count &gt; 0)<br />
    {<br />
        var buffer = buffer_create(count * 12, buffer_grow, 4);<br />
        physics_particle_group_get_data(gp, buffer, flags);<br />
        for (var n = 0; n &lt; count; n++;)<br />
        {<br />
            var xx = buffer_read(buffer, buffer_f32);<br />
            var yy = buffer_read(buffer, buffer_f32);<br />
            var argb = buffer_read(buffer, buffer_u32);<br />
            var alpha = (argb &gt;&gt; 24) &amp; 255;<br />
            draw_sprite_ext(sprBlob, 0, xx, yy, 1, 1, 0, c_green, alpha);<br />
        }<br />
        buffer_delete(buffer);<br />
    }</p>
  <p>上述代码获得了由变量 &quot;gp &quot;索引的组中每个粒子的位置和速度，将<span class="notranslate">buffer</span> ，然后使用这些数据在组中每个粒子的位置上绘制一个<span class="notranslate">sprite</span> 。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">背面。<a href="Soft_Body_Particles.htm">软体颗粒</a></div>
        <div style="float:right">下一步。 <a href="physics_particle_create.htm"><span class="notranslate">physics_particle_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_particle_group_get_data
phy_particle_data_flag_typeflags
phy_particle_data_flag_position
phy_particle_data_flag_velocity
phy_particle_data_flag_colour
phy_particle_data_flag_category
-->
  <!-- TAGS
physics_particle_group_get_data
-->
</body>
</html>