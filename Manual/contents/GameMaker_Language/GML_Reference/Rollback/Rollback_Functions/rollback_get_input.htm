<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Rollback_get_input</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for rollback_get_input" />
  <meta name="condition-tags" content="Export:Beta" />
  <meta name="rh-index-keywords" content="rollback_get_input" />
  <meta name="search-keywords" content="rollback_get_input" />
</head>
<body>
  <h1>Rollback_get_input</h1>
  <p>这个函数返回一个<span class="notranslate">struct</span> ，包含一个玩家的输入值。它需要一个可选的参数，指定要返回输入值的玩家的ID。</p>
  <p>当使用在一个由 <a href="rollback_define_input.htm"><span class="inline">rollback_define_player()</span></a>创建的播放器实例中使用时，你不需要指定一个播放器ID，所以你可以在没有任何参数的情况下调用这个函数。</p>
  <p>当用于任何其他实例，或手动创建的球员实例时，你必须指定一个球员ID。</p>
  <p>有关哪些输入被返回以及如何改变它们的信息，请参见<a data-xref="{title}" href="../Defining_Inputs.htm">定义输入</a>。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">rollback_get_input(player_id);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">player_id</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">真实的</a></span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> 将返回输入的播放器的ID。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Struct"><a href="../../../../../GameMaker_Language/GML_Overview/Structs.htm" target="_blank">Struct</a></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var _input = rollback_get_input();<br />
    <br />
    if (_input.left) x -= 2;<br />
    if (_input.right) x += 2;<br />
    if (_input.up) y -= 2;<br />
    if (_input.down) y += 2;
  </p>
  <p>上面的代码在一个由Rollback系统自动创建的播放器实例中获得输入<span class="notranslate">struct</span> 。根据返回的值，它在每个方向上将该实例移动2个像素。</p>
  <p>关于一个扩展的例子，见<a data-xref="{title}" href="../Creating_Multiplayer.htm">创建一个多人游戏</a>。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>返回。<a data-xref="{title}" href="Rollback_Functions.htm">回滚功能</a></div>
        <div>下一页:<a data-xref="{title}" href="rollback_sync_on_frame.htm">回滚_同步_帧上的回滚</a><a href="rollback_sync_on_frame.htm"></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
rollback_get_input
-->
  <!-- TAGS
rollback_get_input
-->
</body>
</html>