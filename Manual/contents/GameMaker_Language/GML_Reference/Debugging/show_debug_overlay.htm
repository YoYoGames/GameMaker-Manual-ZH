<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>show_debug_overlay</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for show_debug_overlay" />
  <meta name="rh-index-keywords" content="show_debug_overlay" />
  <meta name="search-keywords" content="show_debug_overlay" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>show_debug_overlay</h1>
  <p>在测试你的游戏时，这个功能可以用来<span class="notranslate">switch</span> ，打开和关闭标准的调试覆盖层，默认情况下是禁用的。调试覆盖显示了实际游戏窗口本身的图形CPU/GPU使用率，以及当前的真实fps值，<span class="notranslate">texture</span> 交换的数量和顶点批处理的数量（注意，<span class="notranslate">texture</span> 交换和顶点批处理永远不会是零，通常会显示2或3的值，因为即使有一个空的<span class="notranslate">room</span> ，没有<span class="notranslate">objects</span> <span data-keyref="GameMaker Name">GameMaker</span>仍然需要绘制和批处理东西）。</p>
  <p><img>这个条形图被分成几个部分，每个部分是1/60秒。从上面的图片可以看出，这个条形图是由各种颜色组成的。</p>
  <ul class="colour">
    <li><b>绿色</b>- 输入/输出处理（即：键盘、鼠标、游戏手柄、网络等）。</li>
    <li><b>红色</b>- 阶梯事件的更新速度</li>
    <li><b>黄色</b>- 抽奖活动所需的时间</li>
    <li><b>橙色</b>-调试更新时间，通常只有在使用调试模块时才能看到。</li>
    <li><b>白色</b>- GPU剩余时间，即在下一帧开始之前等待GPU完成渲染的时间。</li>
    <li><b>Cyan</b>- 文本渲染时间</li>
    <li><b>灰色</b>- 清理屏幕的每一个抽奖步骤所需的时间</li>
    <li><strong>Blue</strong>-<a href="../Garbage_Collection/Garbage_Collection.htm">垃圾收集器</a>运行所需的时间</li>
    <li><b>暗红色</b>- GPU冲洗，即GPU需要多长时间从内存中清除图像。</li>
  </ul>
  <p>使用这个功能，无论是否在调试模式下，你都可以添加覆盖层，通过这种方式，你可以看到你的游戏是如何有效运行的，并得到一个关于它是如何使用可用资源的视觉线索，而不需要在旁边运行<span class="notranslate">debugger</span> 的额外费用。</p>
  <p class="note"><b>注意</b>：由于HTML5目标的工作方式与所有其他目标不同，该功能在HTML5目标上将不起作用。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">show_debug_overlay(enable);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">enable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">switch on (<span class="inline">true</span>) 或关闭 (<span class="inline">false<span class="inline">) the debug overlay.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4><b>例子。</b></h4>
  <p class="code">if global.debug<br />
    {<br />
        show_debug_overlay(true);<br />
    }<br />
    else<br />
    {<br />
        show_debug_overlay(false);<br />
    }</p>
  <p>上面的代码将根据一个全局变量的值来切换调试的开启或关闭。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Debugging.htm">调试</a></div>
        <div style="float:right">下一步。 <a href="code_is_compiled.htm"><span class="notranslate">code_is_compiled</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
show_debug_overlay
-->
  <!-- TAGS
show_debug_overlay
-->
</body>
</html>