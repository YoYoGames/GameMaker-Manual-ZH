<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>异常_unhandled_handler</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for exception_unhandled_handler" />
  <meta name="rh-index-keywords" content="exception_unhandled_handler" />
  <meta name="search-keywords" content="exception_unhandled_handler" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>异常_unhandled_handler</h1>
  <p>当一个<span class="notranslate">runtime</span> 异常发生时，这个<span class="notranslate">runtime</span> 函数可以用来 &quot;接管 &quot;<span data-keyref="GameMaker Name">GameMaker</span>的默认错误信息。你提供一个方法或函数，当异常发生时被调用，它的第一个参数将是一个<span class="notranslate">struct</span> （被称为 <strong><span data-keyref="Type_Struct_Exception"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Debugging/exception_unhandled_handler.htm">异常结构</a></span></strong>)，其中包含关于异常的信息。这个<span class="notranslate">struct</span> ，格式如下。</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="3"><span data-keyref="Type_Struct_Exception"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Debugging/exception_unhandled_handler.htm">异常结构</a></span></th>
      </tr>
      <tr>
        <th>变化的</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="inline">message</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">字符串</a></span></td>
        <td>关于例外情况的简短信息</td>
      </tr>
      <tr>
        <td><span class="inline">longMessage</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">字符串</a></span></td>
        <td>一个较长的例外信息</td>
      </tr>
      <tr>
        <td><span class="inline">script</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">字符串</a></span></td>
        <td>一个<span class="notranslate">string</span> ，描述异常的来源。</td>
      </tr>
      <tr>
        <td><span class="inline">line</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">真实的</a></span></td>
        <td>异常发生的行号</td>
      </tr>
      <tr>
        <td><span class="inline">stacktrace</span></td>
        <td><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Arrays.htm">阵列</a></span>的 <span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">弦乐</a></span>s</td>
        <td>一个<span class="notranslate">strings</span> 的数组，它是产生异常时帧的<a href="debug_get_callstack.htm">callstack</a>。</td>
      </tr>
    </tbody>
  </table>
  <p>你也可以提供 <span class="inline">undefined</span> 作为参数，这将删除自定义的异常处理程序（如果设置了），并恢复到<span data-keyref="GameMaker Name">GameMaker</span>的默认错误信息。</p>
  <p>这个函数将返回之前设置的异常处理方法，但是如果它从未被改变过，或者之前用 <span class="inline">undefined</span> ，那么它将直接返回 <span class="inline">undefined</span> 。</p>
  <p>将一个方法传递给这个函数意味着不会向用户显示错误信息，你将被允许自己处理这个异常。但是你不能用它来 &quot;脱离 &quot;异常继续你的游戏，因为在异常处理程序被调用后，游戏仍然会关闭。你也不能调用让游戏运行超过最后一帧的函数（例如：<span class="inline"><a href="../General_Game_Control/game_restart.htm">game_restart()</a></span> ），因为游戏在崩溃后需要关闭。</p>
  <p>请注意，运行该方法的上下文<i>不</i>在一个事件中，所以此时没有任何东西可以被渲染到屏幕上。一般来说，此时最安全的做法是保存一个带有异常上下文信息的文件，这样就可以--例如--在游戏的下一次运行中进行解析和处理，然后进行处理。</p>
  <p>注意，如果你在提供的方法中使用 <span class="inline">return</span> 语句，那么给定的值将被转换为一个整数，并作为运行器的退出代码。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">exception_unhandled_handler(user_handler);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">user_handler</span></td>
        <td><span data-keyref="Type_Method"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Method_Variables.htm">方法</a></span></td>
        <td><span class="notranslate">The method (user-defined function) to use as the exception handler, or <span class="inline">undefined</span> 将其重置为默认值。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Method"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Overview/Method_Variables.htm">Method</a></span> (or <span data-keyref="Type_Undefined"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">undefined</a></span>)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">exception_unhandled_handler(function(ex)<br />
    {<br />
        // Print some messages to the output log<br />
        show_debug_message( &quot;--------------------------------------------------------------&quot;);<br />
        show_debug_message( &quot;Unhandled exception &quot; + string(ex) );<br />
        show_debug_message( &quot;--------------------------------------------------------------&quot;);<br />
    <br />
        // Write the exception struct to a file<br />
        if file_exists(&quot;crash.txt&quot;) file_delete(&quot;crash.txt&quot;);<br />
        var _f = file_text_open_write(&quot;crash.txt&quot;);<br />
        file_text_write_string(_f, string(ex));<br />
        file_text_close(_f);<br />
    <br />
        // Show the error message (for debug purposes only)<br />
        show_message(ex.longMessage);<br />
    <br />
        return 0;<br />
    });
  </p>
  <p>上面的代码将创建一个异常处理方法，并使用它来保存一个带有异常数据的文件；它还将在一个新的弹出窗口中显示长的错误信息，以达到调试目的。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Debugging.htm">调试</a></div>
        <div style="float:right">下一步。 <a href="get_integer.htm"><span class="notranslate">get_integer</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
exception_unhandled_handler
-->
  <!-- TAGS
exception_unhandled_handler
-->
</body>
</html>