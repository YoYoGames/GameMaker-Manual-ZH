<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>debug_event</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for debug_event" />
  <meta name="rh-index-keywords" content="debug_event" />
  <meta name="search-keywords" content="debug_event" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>debug_event</h1>
  <p>这个函数生成一个自定义的调试事件，当游戏在<a href="../../../Introduction/Debugging.htm">调试模式</a>下运行时，它将显示在<span class="notranslate">debugger</span> 的图形视图中。如果你要求在<i>非</i>调试模式下显示信息，请使用 <a href="show_debug_message.htm"><span class="inline">show_debug_message()</span></a>.</p>
  <p>该函数还将采取两个保留<span class="notranslate">strings</span> ，以帮助执行<span class="notranslate">debugging</span> ，使用外部应用程序，如<span class="notranslate">Visual Studio</span> 。这些<span class="notranslate">strings</span> 是。</p>
  <ul class="colour">
    <li>&quot;<span class="inline">OutputDebugOn</span>&quot; - 这使<b>Windows</b>目标调用 <span class="inline">OutputDebugString</span> ，这意味着所有的调试输出--你在输出窗口看到的一切--都可以被<span class="notranslate">Visual Studio</span> 或第三方应用程序查看。</li>
    <li>&quot;<span class="inline">OutputDebugOff</span>&quot; - 禁用上述行为。</li>
    <li>&quot;<span class="inline">BreakOnError</span>&quot; - 这个选项只适用于<b>Windows YYC</b>构建，意味着如果<span class="notranslate">runtime</span> 检测到错误，项目将<i>不</i>显示通常的代码错误屏幕，而是直接进行和崩溃。这允许你看到<span class="notranslate">Visual Studio</span> 内的堆栈跟踪，如果<span class="notranslate">debugging</span> 。</li>
    <li>&quot;<span class="inline">ResourceCounts</span>&quot; - 列出当前所有的活动资源，如数据结构、时间源、表面等。</li>
    <li>&quot;<span class="inline">DumpMemory</span>&quot; - 提供当前内存使用情况的信息。</li>
  </ul>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">debug_event(string)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">string</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">字符串</a></span></td>
        <td><span class="notranslate">The custom debug event string to use.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4><b>例子。</b></h4>
  <p class="code">if !surface_exists(global.EffectsSurface)<br />
    {<br />
        debug_event(&quot;Recreating Effects Surface&quot;);<br />
        global.EffectsSurface = surface_create(room_width, room_height);<br />
    }</p>
  <p>上述代码检查表面是否存在，如果不存在，在<span class="notranslate">debugger</span> （游戏必须在调试模式下运行才能看到）的图形视图中会触发一个调试事件，并重新创建表面。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Debugging.htm">调试</a></div>
        <div style="float:right">下一步。 <a href="debug_get_callstack.htm"><span class="notranslate">debug_get_callstack</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
debug_event
-->
  <!-- TAGS
debug_event
-->
</body>
</html>