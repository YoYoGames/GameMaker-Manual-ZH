<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_decode</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_decode" />
  <meta name="rh-index-keywords" content="json_decode" />
  <meta name="search-keywords" content="json_decode" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_decode</h1>
  <h3><strong>重要的是!</strong>这个函数--虽然仍然有效--已经被函数 <span class="inline"><a href="json_parse.htm">json_parse()</a></span> 所取代，我们建议你只使用这个函数作为传统的支持。</h3>
  <p>JSON（JavaScript<span class="notranslate">Object</span> Notation）是一种轻量级的数据交换格式，对人和机器来说都很容易阅读和书写。它建立在两个基本结构上。</p>
  <ul class="colour">
    <li>一组名称/值对的集合，在GameMaker中称为 <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a>但也被称为 &quot;字典 &quot;或 &quot;对象&quot;。</li>
    <li>一个有序的数值列表，在GameMaker中称为 <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><span class="inline">DS List</span></a>但它也可以被称为 &quot;数组 &quot;或 &quot;序列&quot;。</li>
  </ul>
  <p>通过这个函数，你可以对一段JSON进行解码，并将其转换为 <span class="inline">DS Map</span> ，准备在<span data-keyref="GameMaker Name">GameMaker</span>中使用。如果要解码的JSON需要在中央DS地图内有一个层次的列表和地图，这些也会被解码，也会为你创建，使用以下规则（注意，这些规则只适用于顶级结构）。</p>
  <ul class="colour">
    <li><strong><i>JSON是一个单一的值</i></strong>- 返回一个DS地图，其中有一个条目 &quot;default&quot;，是一个值。</li>
    <li><strong><i>JSON是一个<span class="notranslate">objects</span> 或值的数组。</i></strong>- 返回一个DS地图，其中有一个条目 &quot;default&quot;，是<span class="notranslate">objects</span> 或值的DS列表。</li>
    <li><strong><i>JSON是一个对象</i></strong>- 返回一个DS地图，其中有<span class="notranslate">object</span> 条目。</li>
  </ul>
  <p class="note"><b>注意</b>：当对JSON数组进行解码时，只有当数组是顶层结构时，才会有一个键为 &quot;default &quot;的地图，并且只针对该顶层数组。内部列表可以直接解码为DS地图，而不需要被包含在DS地图中。</p>
  <p class="note"><strong>注意</strong>：如果你把<span class="notranslate">GameMaker</span> 数组写进顶层，或者作为DS map或DS list的内容，这些将被解码为DS list，而<strong>不是</strong>数组。</p>
  <p>通常情况下，你会知道JSON解码为什么键，但如果不知道，你可以使用 <a href="../../Data_Structures/DS_Maps/ds_map_size.htm"><span class="inline">ds_map_size()</span></a>, <a href="../../Data_Structures/DS_Maps/ds_map_find_first.htm"><span class="inline">ds_map_find_first()</span></a>和 <a href="../../Data_Structures/DS_Maps/ds_map_find_next.htm"><span class="inline">ds_map_find_next()</span></a>函数来解析地图并获得必要的信息。</p>
  <p class="note"><b>注意</b>：<span data-keyref="GameMaker Name">GameMaker</span>从JSON中创建了必要的DS地图和列表，对于清理工作，你只需要删除<b>顶层</b>的地图或列表，<span data-keyref="GameMaker Name">GameMaker</span>会自动从内存中删除下面的所有地图和列表。</p>
  <p class="note"><strong>注意</strong>：这个函数允许你加载JSON文件，最大嵌套限制为128。</p>
  <p class="note"><b>重要的</b>是：你不能在你的JSON中使用64位数字，因为它们不能被JSON格式处理，所以不能正确工作。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">json_decode(string)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">string</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The JSON format string that you are passing to the function for decoding</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_ID_DS_Map">DS Map ID</span> or -1 (if it fails)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var resultMap = json_decode(requestResult);<br />
    var list = ds_map_find_value(resultMap, &quot;default&quot;);<br />
    var size = ds_list_size(list);<br />
    for (var n = 0; n &lt; ds_list_size(list); n++;)<br />
    {<br />
        var map = ds_list_find_value(list, n);<br />
        var curr = ds_map_find_first(map);<br />
        while (is_string(curr))<br />
        {<br />
            global.Name[n] = ds_map_find_value(map, &quot;name&quot;);<br />
            curr = ds_map_find_next(map, curr);<br />
        }<br />
    }<br />
    ds_map_destroy(resultMap);</p>
  <p>上面的代码将解码一个JSON<span class="notranslate">string</span> ，并解析它以生成一个全局数组。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Encoding_And_Hashing.htm">文件编码</a></div>
        <div style="float:right">下一步。 <a href="json_stringify.htm"><span class="notranslate">json_stringify</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
json_decode
-->
  <!-- TAGS
json_decode
-->
</body>
</html>