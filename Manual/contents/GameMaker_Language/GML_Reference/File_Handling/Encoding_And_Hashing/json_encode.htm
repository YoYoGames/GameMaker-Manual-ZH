<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>json_encode</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for json_encode" />
  <meta name="rh-index-keywords" content="json_encode" />
  <meta name="search-keywords" content="json_encode" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>json_encode</h1>
  <h3><strong>重要的是!</strong>这个函数--虽然仍然有效--已经被函数 <span class="inline"><a href="json_stringify.htm">json_stringify()</a></span> 所取代，我们建议你只使用这个函数作为传统的支持。</h3>
  <p>JSON（JavaScript<span class="notranslate">Object</span> Notation）是一种轻量级的数据交换格式，对人和机器来说都很容易阅读和书写。它建立在两个基本结构上。</p>
  <ul class="colour">
    <li>一组名称/值对的集合，在GameMaker中称为 <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a>但在其他编程语言中也被称为 &quot;字典 &quot;或 &quot;对象&quot;。</li>
    <li>一个有序的数值列表，在GameMaker中称为 <a href="../../Data_Structures/DS_Lists/DS_Lists.htm"><span class="inline">DS </span><span class="inline">List</span></a>但在其他编程语言中，这也可以称为 &quot;数组 &quot;或 &quot;序列&quot;。</li>
  </ul>
  <p><span class="inline">json_encode()</span> 将你之前创建的DS地图或数组编码为JSON ，然后你可以将其作为（例如）调用的一部分。<span class="notranslate">string</span> <a href="../../Asynchronous_Functions/HTTP/http_post_string.htm"><span class="inline">http_post_string()</span></a>调用的一部分，或者--所以它可以被存储在外部--它可以被写入一个文件。如果使用数组作为顶层结构，那么数组只能包含有效值或其他数组，而<em>不是</em>数据结构。为此，你应该使用适当的DS函数。</p>
  <p class="note"><strong>重要的是!</strong>JSON对数字是不可知的。在任何编程语言中，可以有各种不同容量和补充的数字类型，固定或浮动，二进制或十进制。这可能使不同编程语言之间的互换变得困难。而JSON只提供了人类使用的数字的表示方法：一个<span class="notranslate">sequence</span> 的数字。所有的编程语言都知道如何理解数字<span class="notranslate">sequences</span> ，即使他们在内部表示上有分歧。更多信息见<a href="http://www.ecma-international.org/publications/standards/Ecma-404.htm">ECMA JSON标准</a>。</p>
  <p>请注意，在向ini文件写入JSON时要注意，因为ini规范在使用引号和转义字符时可能会引起问题。参见函数 <a href="../Ini_Files/ini_write_string.htm"><span class="inline">ini_write_string()</span></a>获取更多信息。还要注意的是，如果你把int64编码到JSON中，如果它在int32的有效范围内，它将把它写成<i>int</i>，如果它能在不损失精度的情况下写成<i>双倍数</i>，或者（如果这两种情况都不适用）写成一个<i>字符串</i>，前面有一个标识符&quot;<span class="inline">@i64@</span>&quot;，后面是&quot;<span class="inline">$i64$</span>&quot;。当你再次将JSON解码为地图时，<span data-keyref="GameMaker Name">GameMaker</span>会接收这些标识符，并将值重新转换为int64。这确实意味着，如果JSON是为<span class="notranslate">server</span> 或其他非GameMaker目标准备的，这些值将不合适，所以应该避免使用。</p>
  <p class="note"><b>注意</b>：JSON的分层功能是通过特殊的DS地图和DS列表函数（例如 <span class="inline"><a href="../../Data_Structures/DS_Maps/ds_map_add_list.htm" style="font-size: 14px">ds_map_add_list()</a></span> 或 <span class="inline"><a href="../../Data_Structures/DS_Lists/ds_list_mark_as_map.htm" style="font-size: 14px">ds_list_mark_as_map()</a></span> ）实现的，所以你能够对子列表和地图进行编码。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">json_encode(map)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">map</span></td>
        <td><span data-keyref="Type_ID_DS_Map">DS地图ID</span></td>
        <td><span class="notranslate">A DS map with the information to encode (or an array)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_String">String</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var hiscore_map, i, str;<br />
    hiscore_map = ds_map_create();<br />
    for (i = 0; i &lt; 10; i ++;)<br />
    {<br />
        ds_map_add(hiscore_map, name[i], score[i]);<br />
    }<br />
    str = json_encode(hiscore_map);<br />
    get[0] = http_post_string(&quot;http://www.angusgames.com/game?game_id=&quot; + string(global.game_id), str)<br />
    ds_map_destroy(hiscore_map);</p>
  <p>上面的代码创建了一个DS地图，然后<span class="notranslate">loops</span> ，通过名字和分数数组，将每个键/值对添加到新地图中。接下来，这个地图用 <span class="inline">json_encode()</span> 编码，并作为一个<span class="notranslate">string</span> ，存储在变量 &quot;str &quot;中。这个<span class="notranslate">string</span> ，然后使用 <span class="inline">http_post_string()</span> ，发送到一个网络<span class="notranslate">server</span> ，并且销毁DS地图，以防止内存泄漏，因为它不再需要了。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Encoding_And_Hashing.htm">文件编码</a></div>
        <div style="float:right">下一步。 <a href="json_decode.htm"><span class="notranslate">json_decode</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
json_encode
-->
  <!-- TAGS
json_encode
-->
</body>
</html>