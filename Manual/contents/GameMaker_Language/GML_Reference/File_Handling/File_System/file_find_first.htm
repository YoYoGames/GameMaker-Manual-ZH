<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>文件_搜索_第一</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for file_find_first" />
  <meta name="rh-index-keywords" content="file_find_first,fa_readonly,fa_hidden,fa_sysfile,fa_volumeid,fa_directory,fa_archive" />
  <meta name="search-keywords" content="file_find_first,fa_readonly,fa_hidden,fa_sysfile,fa_volumeid,fa_directory,fa_archive" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>文件_搜索_第一</h1>
  <p>这个函数将返回符合掩码和属性的第一个文件的名称。如果不存在这样的文件，那么将返回一个空的<span class="notranslate">string</span> 。</p>
  <p>该掩码可以包含一个带有通配符的<span class="notranslate">path</span> ，例如<span class="inline2">C:\temp\*.doc。</span></p>
  <p>属性给出了你想看的额外文件，所以正常的文件在满足掩码的情况下总是会被返回。你可以把下面的常数加起来，以看到你想要的文件类型（使用<span class="inline2">|</span>）。如果你不希望添加任何属性，使用0。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_File_Attribute"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/File_Handling/File_System/file_find_first.htm">文件属性常数</a></span></th>
      </tr>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_readonly</span></td>
        <td>只读文件</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_hidden</span></td>
        <td>隐藏的文件</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_sysfile</span></td>
        <td>系统文件</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_volumeid</span></td>
        <td>卷标文件</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_directory</span></td>
        <td>目录</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">fa_archive</span></td>
        <td>归档文件</td>
      </tr>
    </tbody>
  </table>
  <p>属性只能在<span class="notranslate">Windows</span> 上使用。对于所有其他平台，使用0。</p>
  <p class="note"><b></b><span class="warning">警告</span>：由于<span data-keyref="GameMaker Name">GameMaker</span>是沙盒式的，这个功能可能不会像你预期的那样工作。请参阅<a href="../../../../Additional_Information/The_File_System.htm">文件系统</a>一节以了解更多信息。</p>
  <p class="note"><span class="note">注意</span>这个功能在HTML5目标上完全不起作用。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">file_find_first(mask, attr);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">mask</span></td>
        <td><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">字符串</a></span></td>
        <td><span class="notranslate">The mask to use for searching.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">attr</span></td>
        <td><span data-keyref="Type_Constant_File_Attribute"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/File_Handling/File_System/file_find_first.htm">文件属性常数</a></span>(s)</td>
        <td><span class="notranslate">The specific file attribute to look for.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_String"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">String</a></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if directory_exists(&quot;\User Content&quot;)<br />
    {<br />
        fileA = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
        fileB = file_find_next();<br />
        fileC = file_find_next();<br />
        file_find_close();<br />
    }</p>
  <p>这段代码检查指定的目录是否存在，如果存在，就去那里并返回找到的第一个 &quot;只读 &quot; <span class="inline">.doc</span> 文件。然后它再寻找两个文件，并关闭文件搜索器。</p>
  <p>你可以使用一个 "循环 "来寻找任何数量的文件。 <a href="../../../GML_Overview/Language_Features/while.htm"><span class="notranslate">while</span></a>循环查找。</p>
  <p class="code">var files = [];<br />
    var file_name = file_find_first(&quot;/User Content/*.doc&quot;, fa_readonly);<br />
    <br />
    while (file_name != &quot;&quot;)<br />
    {<br />
        array_push(files, file_name);<br />
    <br />
        file_name = file_find_next();<br />
    }<br />
    <br />
    file_find_close();
  </p>
  <p>上面的代码创建了一个空数组来存储所有找到的文件名，并开始寻找只读的 <span class="inline">.doc</span> 文件。如果该文件名不是一个空的<span class="notranslate">string</span> ，它就把它推到 <span class="inline">files</span> 数组中，然后试图寻找下一个文件。<span class="notranslate">loop</span> 将不断重复，直到找到一个空的<span class="notranslate">string</span> （意味着没有更多的匹配文件），这时它就会结束<span class="notranslate">loop</span> ，并在最后关闭文件查找器。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="File_System.htm">文件系统</a></div>
        <div style="float:right">下一步。 <a href="file_find_next.htm"><span class="notranslate">file_find_next</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
file_find_first
fa_readonly
fa_hidden
fa_sysfile
fa_volumeid
fa_directory
fa_archive
-->
  <!-- TAGS
file_find_first
-->
</body>
</html>