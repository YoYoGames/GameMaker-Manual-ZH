<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>keyboard_set_map</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for keyboard_set_map" />
  <meta name="rh-index-keywords" content="keyboard_set_map" />
  <meta name="search-keywords" content="keyboard_set_map" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>keyboard_set_map</h1>
  <p>有时在制作游戏时，你可能希望一个键的作用与另一个键相同。例如，许多人使用WASD键进行移动，但<i>也</i>有许多人使用方向键！那么，该怎么办？那么，该怎么做呢？好吧，你<i>可以</i>对运动系统进行编码
    两次，但这有点复杂，幸好是多余的，因为这个功能允许你将一个键 &quot;映射 &quot;到另一个键上，所以任何一个键的输入都会被解释为相同的。要做到这一点，你要选择一个你想映射的键（key2
    - 这将是你编写代码的那个键）和一个你希望它被映射<i>到的</i>键（key1）。之后，<span data-keyref="GameMaker Name">GameMaker</span>将把对任何一个键的按压都解释为来自key2。你也可以用这个函数来设计
    一个系统，用户可以通过简单地将用户输入键映射到你已经编码到游戏中的键来定义自己的游戏键。</p>
  <p>该函数接受一个由函数返回的键码值 <a href="../../Strings/ord.htm"><span class="inline">ord()</span></a>(只有A-Z的<i>大写字母</i>或0-9的数字)，或主<a href="Keyboard_Input.htm">键盘输入</a>页面上列出的任何 <span class="inline">vk_*</span> 常量。</p>
  <p class="note"><strong>重要的是!</strong>一旦你使用这个功能，你所映射的键（key1）将不再能作为它的实际按键符号使用。例如，如果你把向上箭头映射到 &quot;W&quot;，那么你将不再能够检测到按下 &quot;W &quot;键是什么意思。
    W &quot;键时，你将无法检测到它是一个 &quot;W&quot;，它将永远被认为是一个向上的箭头。要撤销这一点，要么将该键映射到它本身--因此键1和键2都是 <span class="inline">ord(&quot;W&quot;)</span> ，要么使用函数 <span class="inline"><a href="keyboard_unset_map.htm">keyboard_unset_map()</a></span> 。</p>
  <p> </p>
  <h4><b>语法。</b></h4>
  <p class="code">keyboard_set_map(key1, key2);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">key1</span></td><td><span data-keyref="Type_Constant_VK"></span></td>
        <td><span class="notranslate">This is the key that key1 is to be mapped to</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">key2</span></td><td><span data-keyref="Type_Constant_VK"></span></td>
        <td><span class="notranslate">This is the key that is to be mapped</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4><b>返回。</b></h4>
  <p class="code"><span data-keyref="Type_Bool"></span></p>
  <p> </p>
  <h4><b>例子。</b></h4>
  <p class="code">keyboard_set_map(ord(&quot;A&quot;), vk_left);</p>
  <p>上面的示例代码将把 &quot;A &quot;键映射到左箭头键上。这意味着玩家可以使用 &quot;A<i>&quot;键或</i>左键，所有为左键编写的代码也将响应 &quot;A&quot;
    键来代替。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Keyboard_Input.htm">键盘输入</a></div>
        <div style="float:right">下一步。 <a href="keyboard_get_map.htm"><span class="notranslate">keyboard_get_map</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
keyboard_set_map
-->
  <!-- TAGS
keyboard_set_map
-->
</body>
</html>