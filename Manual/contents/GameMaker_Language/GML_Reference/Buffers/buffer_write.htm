<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>緩衝寫入</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_write" />
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>緩衝寫入</h1>
  <p>这个函数可以用来向先前创建的<span class="notranslate">buffer</span> 写数据。你所写的数据必须与这个函数的 &quot;类型 &quot;参数一致，也就是说，你不能试图把一个<span class="notranslate">string</span> 写成一个无符号的16位整数，比如说。以下常数可以用来定义数据类型。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Buffer_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm">缓冲区数据类型常数</a></span></th>
      </tr>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u8</span></td>
        <td>一个无符号、8位的整数。这是一个从0到255的正值。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s8</span></td>
        <td>一个有符号的、8位的整数。这可以是一个从-128到127的正值或负值（0被认为是正值）。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u16</span></td>
        <td>一个无符号、16位的整数。这是一个从0-65,535的正值。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s16</span></td>
        <td>一个有符号的、16位的整数。这可以是一个从-32,768到32,767的正值或负值（0被认为是正值）。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u32</span></td>
        <td>一个无符号、32位的整数。这是一个从0到4,294,967,295的正值。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_s32</span></td>
        <td>一个有符号的、32位的整数。这可以是一个从-2,147,483,648到2,147,483,647的正值或负值（0被归类为正值）。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_u64</span></td>
        <td>一个无符号的64位整数。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f16</span></td>
        <td>一个16位的浮点数。这可以是一个正值或负值，范围与16位有符号整数相同。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f32</span></td>
        <td>一个32位的浮点数。这可以是一个正值或负值，范围与32位有符号整数相同。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_f64</span></td>
        <td>一个64位的浮点数。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_bool</span></td>
        <td>一个布尔值。只能是1或0 (<span class="inline">true</span> 或 <span class="inline">false</span>)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_string</span></td>
        <td>一个任意大小的<span class="notranslate">string</span> ，最后以空结尾字符结束。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_text</span></td>
        <td>一个任意大小的<span class="notranslate">string</span> ，没有最后的空结尾字符。</td>
      </tr>
    </tbody>
  </table>
  <p>该函数如果成功将返回0，如果失败将返回-1。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">buffer_write(buffer, type, value)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">缓冲区ID</a></span></td>
        <td><span class="notranslate">The index of the buffer to write to.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The type of data that is to be written to the buffer (see the list of constants above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">value</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The data to write.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    buffer_write(buff, buffer_s16, 0);<br />
    buffer_write(buff, buffer_s16, x);<br />
    buffer_write(buff, buffer_s16, y);</p>
  <p>上面的代码找到了<span class="notranslate">buffer</span> ，其id存储在变量 &quot;buff &quot;中，他们向其写入了一系列有符号的16位整数值。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="Buffers.htm">缓冲器</a></div>
        <div style="float:right">下一步。 <a href="buffer_fill.htm"><span class="notranslate">buffer_fill</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->
</body>
</html>