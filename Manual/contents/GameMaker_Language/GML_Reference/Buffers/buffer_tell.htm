<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>缓冲_告诉</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_tell" />
  <meta name="rh-index-keywords" content="buffer_tell" />
  <meta name="search-keywords" content="buffer_tell" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>缓冲_告诉</h1>
  <p>当你使用<span class="notranslate">buffer</span> 读取或写入数据时。 <a href="buffer_read.htm"><span class="inline">buffer_read()</span></a>或 <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>时，当前的 &quot;寻找 &quot;位置会被写入或读出的字节提前，使用
    这个函数，你可以得到当前的 &quot;寻求 &quot;位置，以用于其他<span class="notranslate">buffer</span> 函数。例如，如果你的<span class="notranslate">buffer</span> 对齐设置为4字节，你写了一个1字节大小的数据，然后做一个 <span class="inline">buffer_tell()</span> 。
    然而，如果你写了另一个数据，也是1字节大小，然后做 <span class="inline">buffer_tell()</span> ，你会得到一个5的返回值，因为对齐方式已经把数据 &quot;填充 &quot;到这个位置。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">buffer_tell(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to use.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var pos = buffer_tell(buff); buffer_seek(buff, buffer_seek_start, 0);<br/> val[0] = buffer_read(buff, buffer_S16);<br/> val[1] = buffer_read(buff, buffer_S16);<br/> val[2] = buffer_read(buff, buffer_S16);<br/> buffer_seek(buff, buffer_seek_start, pos);</p>
  <p>上述代码将把当前在<span class="notranslate">buffer</span> ，在变量 &quot;buff &quot;中索引的寻求位置存储到本地变量 &quot;pos &quot;中。然后，<span class="notranslate">buffer</span> 的寻址位置将被设置为<span class="notranslate">buffer</span> 的开始位置，并将三条数据读入一个数组。
    读取到一个数组中，最后再将<span class="notranslate">buffer</span> 的寻道位置重新设置到之前的位置。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="Buffers.htm">缓冲器</a></div>
        <div style="float:right">下一步。 <a href="buffer_peek.htm"><span class="notranslate">buffer_peek</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_tell
-->
  <!-- TAGS
buffer_tell
-->
</body>
</html>