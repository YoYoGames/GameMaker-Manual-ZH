<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>缓冲区_加载</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_load" />
  <meta name="rh-index-keywords" content="buffer_load" />
  <meta name="search-keywords" content="buffer_load" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>缓冲区_加载</h1>
  <p>这个函数用来加载一个<span class="notranslate">buffer</span> ，该文件以前是用 <a href="buffer_save.htm"><span class="inline">buffer_save()</span></a>函数，以及任何<a href="../../../Settings/Included_Files.htm" title="Included Files">包含的文件</a>或外部加载的文件。它将返回一个新的缓冲区的ID，该ID是由该函数创建的一个 &quot;增长 &quot;<span class="notranslate">buffer</span> （见<a href="buffer_create.htm">这里</a>），其字节对齐方式为1。该ID应存储在一个变量中，并在所有进一步调用该<span class="notranslate">buffer</span> 的函数中使用。如果由于某种原因加载失败，该函数将返回-1，并在编译器输出窗口中显示一条信息，说明加载失败了。</p>
  <p class="note"><span class="note">注意</span>当你不再需要任何动态创建的资源时，你必须从内存中删除这些资源，以防止内存泄漏，这一点很重要，所以当你完成了你所创建的<span class="notranslate">buffer</span> ，你应该用以下方式再次释放它 <a href="buffer_delete.htm"><span class="inline">buffer_delete()</span></a>.</p>
  <h2>针对平台的说明</h2>
  <ul class="colour">
    <li>在HTML5上，任何从<strong>本地存储</strong>加载的<span class="notranslate">buffers</span> ，都将使用base64解码（因为它们被保存为base64<span class="notranslate">strings</span> ），然而，在Included Files或任何外部文件上使用这个函数将不使用base64解码，因为它们不被期望是base64格式。</li>
    <li>在HTML5上，所有包含的文件都被存储为UTF-8编码的文本，与原始文件相比，这可能会导致加载的<span class="notranslate">buffer</span> ，因为UTF-8编码版本的文件可能与你的原始文件的大小不同（由于格式的改变）。</li>
  </ul>
  <p> </p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">buffer_load(filename);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">filename</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The name of the file to load from.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer">Buffer ID</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">player_buffer = buffer_load(&quot;Player_Save.sav&quot;);</p>
  <p>上述代码将把以前保存的<span class="notranslate">buffer</span> 载入内存，创建一个新的<span class="notranslate">buffer</span> 。这个新<span class="notranslate">buffer</span> 的索引被储存在变量 &quot;player_buffer &quot;中。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="Buffers.htm">缓冲器</a></div>
        <div style="float:right">下一个。 <a href="buffer_load_ext.htm"><span>buffer_load_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_load
-->
  <!-- TAGS
buffer_load
-->
</body>
</html>