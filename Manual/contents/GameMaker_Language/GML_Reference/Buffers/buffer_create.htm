<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>缓冲区创建</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_create" />
  <meta name="rh-index-keywords" content="buffer_create,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="search-keywords" content="buffer_create,buffer_fixed,buffer_grow,buffer_wrap,buffer_fast,buffer_vbuffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>缓冲区创建</h1>
  <p>你使用这个函数在你的游戏中分配一部分内存作为<span class="notranslate">buffer</span> ，该函数返回唯一的<i>缓冲区ID</i>，该<i>ID</i>应该存储在一个变量中，并用于所有对<span class="notranslate">buffer</span> 的进一步函数调用。然后，<span class="notranslate">buffer</span> 可以用来存储不同类型的数据（当你使用函数向<span class="notranslate">buffer</span> 写入时指定。 <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>函数写到<span class="notranslate">buffer</span> ，用以下常数来定义 的类型。</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Buffer_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">缓冲区类型常数</a></span></th>
      </tr>
      <tr>
        <th>恒定</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fixed</span></td>
        <td>一个固定尺寸的<span class="notranslate">buffer</span> 。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_grow</span></td>
        <td>一个<span class="notranslate">buffer</span> ，它将随着数据的增加而动态地 &quot;增长&quot;。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_wrap</span></td>
        <td>一个<span class="notranslate">buffer</span> ，其中的数据将被 &quot;包裹 &quot;起来。当正在添加的数据达到<span class="notranslate">buffer</span> 大小的极限时，覆盖的数据将被放回<span class="notranslate">buffer</span> 的起点，并从该点继续写下去。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_fast</span></td>
        <td>特殊的 &quot;剥离 &quot;<span class="notranslate">buffer</span> ，读/写速度极快。只能与 <span class="inline">buffer_u8</span> <a href="buffer_read.htm">数据类型</a>一起使用，并且<i>必须</i>是1字节对齐。</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">buffer_vbuffer</span></td>
        <td>这种类型的<span class="notranslate">buffer</span> ，只能作为一个<span class="notranslate">vertex</span> <span class="notranslate">buffer</span> 。</td>
      </tr>
    </tbody>
  </table>
  <p>除了<span class="notranslate">buffer</span> ，你还必须设置<span class="notranslate">buffer</span> 的<i>字节对齐</i>。这个值将取决于你希望存储在<span class="notranslate">buffer</span> 的数据，在大多数情况下，值为1是完全可以的。然而，请注意，对于某些操作来说，特定的对齐方式是<i>必不可少的</i>，不正确的对齐方式可能会导致错误（关于对齐方式的进一步细节，请参见<a href="../../../Additional_Information/Guide_To_Using_Buffers.htm">缓冲区</a>）。下面是一个一般的指南，说明哪种值最适合于每种数据类型（有疑问时，使用1的对齐方式）。</p>
  <ul class="colour">
    <li>字符串应该被对齐到1个字节。</li>
    <li>有符号或无符号的8位整数可以对准任何数值，但请注意，对于快速<span class="notranslate">buffer</span> （见 <a href="buffer_write.htm"><span class="inline">buffer_write()</span></a>)，它<i>必须</i>对齐到1。</li>
    <li>有符号或无符号的16位整数应该被对齐到2个字节。</li>
    <li>有符号或无符号的32位整数应该被对齐到4个字节。</li>
    <li>16位以内的浮点应该被对齐到2个字节。<i>(目前不支持！)</i></li>
    <li>多达32位的浮点应该被对齐到4个字节。</li>
    <li>多达64位的浮点应该被对齐到8个字节。</li>
  </ul>
  <p class="note"><b>注意</b>：字节对齐可能非常重要，因为错误的选择可能对性能产生不利影响。</p>
  <p class="note"><b>注意</b>：当你不再需要这样的动态创建的资源时，必须将其从内存中删除，以防止内存泄漏，所以当你完成了你所创建的<span class="notranslate">buffer</span> ，你应该再次使用释放它。 <span style="font-size:1px;"><a href="buffer_delete.htm"><span class="inline">buffer_delete()</span></a></span>.</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">buffer_create(size, type, alignment)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">size</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The size (in bytes) of the buffer.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">缓冲区类型常数</a></span></td>
        <td><span class="notranslate">The type of buffer to create (see the constants list above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">alignment</span></td>
        <td><span data-keyref="Type_Real"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">真实的</a></span></td>
        <td><span class="notranslate">The byte alignment for the buffer</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer"><a data-rhwidget="HyperlinkPopover" href="../../../../LINKGOESHERE">Buffer ID</a></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">player_buffer = buffer_create(16384, buffer_fixed, 2);</p>
  <p>上述代码为一个<span class="notranslate">buffer</span> ，分配了16384字节的内存，并返回该<span class="notranslate">buffer</span> 的索引，该索引被存储在变量 &quot;player_buffer &quot;中，供将来使用。<span class="notranslate">buffer</span> 被对齐到两个字节的边界。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="Buffers.htm">缓冲器</a></div>
        <div style="float:right">下一步。 <a href="buffer_create_from_vertex_buffer.htm"><span class="notranslate">buffer_create_from_vertex_buffer</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_create
buffer_fixed
buffer_grow
buffer_wrap
buffer_fast
buffer_vbuffer
-->
  <!-- TAGS
buffer_create
-->
</body>
</html>