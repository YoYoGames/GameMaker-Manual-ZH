<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>缓冲区_peek</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_peek" />
  <meta name="rh-index-keywords" content="buffer_peek,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_peek" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>缓冲区_peek</h1>
  <p>使用该 <a href="buffer_read.htm"><span class="inline">buffer_read()</span></a>函数，你可以从给定的<span class="notranslate">buffer</span> ，在当前的 &quot;寻址 &quot;位置上读取数据，每一块数据的读取都是通过正在读取或写入的字节来推进这个位置。然而，你可能有必要在不改变当前寻址位置的情况下读取一个给定的数据，这时你就会使用这个函数。你只需向该函数提供一个<span class="notranslate">buffer</span> id，然后在该<span class="notranslate">buffer</span> 中提供一个要读取的偏移位置（从<span class="notranslate">buffer</span> 开始），以及你想要读取的数据类型。</p>
  <p class="note"><b>注意</b>：对正在读取的数据使用不正确的数据类型，将导致错误的数值!</p>
  <p>如果函数成功，那么将根据数据类型返回一个值（Real,<span class="notranslate">string</span>, boolean, 等等...），而失败将简单地返回0。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">buffer_peek(buffer, offset, type);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">缓冲区ID</span></td>
        <td><span class="notranslate">The index of the buffer to use.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">offset</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The offset position (in bytes) within the buffer to read the given data from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type">缓冲区数据类型常数</span></td>
        <td><span class="notranslate">The type of data that is to be read from the buffer (see the list of constants <a href="buffer_read.htm">here</a>).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span>, <span data-keyref="Type_Bool">Boolean</span>, <span data-keyref="Type_String">String</span> or 0 (if it fails)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var red = buffer_peek(buff, 1, buffer_u8);<br />
    var green = buffer_peek(buff, 2, buffer_u8);<br />
    var blue = buffer_peek(buff, 3, buffer_u8);<br />
    image_blend = make_colour_rgb(red, green, blue);</p>
  <p>上述代码将从变量 &quot;buff &quot;中索引的<span class="notranslate">buffer</span> 内的三个不同位置获得三个值，然后使用这些值来设置实例的图像混合。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back:<a href="Buffers.htm">缓冲器</a></div>
        <div style="float:right">下一步。 <a href="buffer_poke.htm"><span class="notranslate">buffer_poke</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_peek
-->
  <!-- TAGS
buffer_peek
-->
</body>
</html>