<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>时间_来源_开始</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for time_source_start" />
  <meta name="rh-index-keywords" content="time_source_start" />
  <meta name="search-keywords" content="time_source_start" />
</head>
<body>
  <h1>时间_来源_开始</h1>
  <p>该函数启动给定的<span data-keyref="Type_Resource_TimeSource">时间源</span>，将其<a href="Time_Source_States.htm">状态</a>改为<span class="inline2">time_source_state_active</span>。</p>
  <p>指定的<span data-keyref="Type_Resource_TimeSource">时间源</span>可能是一个新的<span data-keyref="Type_Resource_TimeSource">时间源</span>，它从未被启动，被暂停，停止或过期，没有重复。</p>
  <p>这个函数将 &quot;软复位 &quot;给定的<span data-keyref="Type_Resource_TimeSource">时间源</span>，将其<a href="time_source_get_time_remaining.htm">到期时间</a>和<a href="time_source_get_reps_remaining.htm">剩余时间</a>重置为为其配置的值。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">time_source_start(id);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_ID_TimeSource"><a href="../../../../GameMaker_Language/GML_Reference/Time_Sources/time_source_create.htm" target="_blank">时间源ID</a></span></td>
        <td><span class="notranslate">The <span data-keyref="Type_Resource_TimeSource">Time Source</span> 开始</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">var _my_method = function()<br />
    {<br />
        instance_destroy();<br />
    }<br />
    <br />
    var _time_source = time_source_create(time_source_game, 300, time_source_units_frames, _my_method);<br />
    <br />
    time_source_start(_time_source);
  </p>
  <p>在这个例子中，我们希望这个实例在300帧后自我销毁。</p>
  <p>该代码首先创建了一个方法，简单地调用 <a href="../Asset_Management/Instances/instance_destroy.htm"><span class="inline">instance_destroy()</span></a>.</p>
  <p>然后它创建了一个<span data-keyref="Type_Resource_TimeSource">时间源</span>，继承自游戏<span data-keyref="Type_Resource_TimeSource">时间源</span>。它将其周期设置为<strong>300帧</strong>。</p>
  <p>最后，它启动了<span data-keyref="Type_Resource_TimeSource">时间源</span>。</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>返回。<a data-xref="{title}" href="Time_Sources.htm">时间来源</a></div>
        <div>下一页:<a data-xref="{title}" href="time_source_stop.htm">时间来源_停止</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
time_source_start
-->
  <!-- TAGS
time_source_start
-->
</body>
</html>