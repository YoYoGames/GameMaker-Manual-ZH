<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>外部呼叫</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for external_call" />
  <meta name="rh-index-keywords" content="external_call" />
  <meta name="search-keywords" content="external_call" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>外部呼叫</h1>
  <p>如果你已经创建了一个外部函数调用一个 <span class="inline">dll</span> 或 <span class="inline">dylib</span> ，使用 <a href="external_define.htm"><span class="inline">external_define()</span></a>创建了一个外部函数，你可以使用这个函数来调用它。你提供先前定义的函数的名称以及它所需要的每个参数（每个参数必须是正确的类型，要么是实数，要么是<span class="notranslate">string</span> ），该函数返回外部调用的结果。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">external_call(id, args[0...15]);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_Function_External">外部功能</span></td>
        <td><span class="notranslate">The name of the function that you want to call</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">args[0...10]</span></td>
        <td><span data-keyref="Type_Real">实数</span>或<span data-keyref="Type_String">字符串</span></td>
        <td><span class="notranslate">The different arguments that you want to pass through to the external function</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Any">Variable</span> (the type of value returned will depend on the defined function)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">my_function = external_define(&quot;MyDLL.dll&quot;, &quot;MyMin&quot;, dll_cdecl, ty_real, 2, ty_real, ty_real);<br />
    var _a = external_call(my_function, x, y);</p>
  <p>上面的示例代码调用了一个先前定义的外部函数，并将返回值存储在一个局部变量中。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="OS_And_Compiler.htm">操作系统和编译器</a></div>
        <div style="float:right">下一步。 <a href="external_free.htm"><span class="notranslate">external_free</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
external_call
-->
  <!-- TAGS
external_call
-->
</body>
</html>