<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>weak_ref_any_alive</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for weak_ref_any_alive" />
  <meta name="rh-index-keywords" content="weak_ref_any_alive" />
  <meta name="search-keywords" content="weak_ref_any_alive" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>weak_ref_any_alive</h1>
  <p>通过这个函数，你可以检查各种结构的<a class="glossterm" data-glossterm="弱参考" href="#">弱引用</a>，看看它们是否仍然 &quot;活着&quot;。你提供一个要检查的弱引用数组（每个弱引用都应该是用函数 <a href="weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>创建的），如果这些结构中的任何一个仍被引用，该函数将返回 <span class="inline">true</span> 。 <em><strong>任何 </strong></em>的结构仍在某处被引用，或者 <span class="inline">false</span> ，如果它们没有被引用并且已经被垃圾回收。请注意，如果你提供的数组中的任何一个值不是弱引用，该函数将返回 <span class="inline">undefined</span> 。</p>
  <p>请注意，该函数还需要两个可选参数，第一个参数允许你提供一个要检查的数组的初始索引，还有一个参数用于设置从该索引开始要检查的位置数（长度）。如果指定了这些参数，只有在这些参数内的数组索引才会被检查。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">weak_ref_any_alive(array, [index], [length]);</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">array</span></td>
        <td><span data-keyref="Type_Struct_WeakRef">弱引用结构</span><span data-keyref="Type_Array">数组</span></td>
        <td><span class="notranslate">Array containing weak references to the structs that you want to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">[index]</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> 阵列中的索引，从该索引开始检查</td>
      </tr>
      <tr>
        <td><span class="notranslate">[length]</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate"><span class="optional">OPTIONAL</span> 从给定的索引开始，要检查的位置的数量。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Bool">Boolean</span> (or undefined)</p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if weak_ref_any_alive(inventory_ref_array)<br />
    {<br />
        instance_destroy(obj_Inventory_Control);<br />
    }</p>
  <p>上面的代码检查了一个弱引用的数组，如果有任何弱引用还活着，那么就会销毁一个实例。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Garbage_Collection.htm">垃圾收集</a></div>
        <div style="float:right">下一步。 <a href="gc_collect.htm"><span class="notranslate">gc_collect</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
weak_ref_any_alive
-->
  <!-- TAGS
weak_ref_any_alive
-->
</body>
</html>