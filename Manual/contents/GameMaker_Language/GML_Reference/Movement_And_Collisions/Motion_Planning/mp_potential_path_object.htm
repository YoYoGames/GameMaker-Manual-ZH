<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>潜在的路径对象</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_potential_path_object" />
  <meta name="rh-index-keywords" content="mp_potential_path_object" />
  <meta name="search-keywords" content="mp_potential_path_object" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>潜在的路径对象</h1>
  <p>这个函数为实例计算一个<span class="notranslate">path</span> ，从它的当前位置<i>和方向</i>到由xgoal、ygoal参数指定的位置。它使用指定的步长，同时试图避免与 "obj "参数指定的<span class="notranslate">object</span> 的实例发生碰撞。
    obj &quot;参数所指定的实例相碰撞。就像在函数 <a href="mp_potential_step.htm"><span class="inline">mp_potential_step()</span></a>中一样，它使用势场步长来完成这个任务，它的方式可以通过函数来修改 <a href="mp_potential_settings.htm"><span class="inline">mp_potential_settings()</span></a>.
    指定的<span class="notranslate">path</span> 必须已经存在，它将被新的<span class="notranslate">path</span> 所覆盖。该函数将返回是否找到了<span class="notranslate">path</span> （真）或不（假）。</p>
  <p>为了避免函数永远继续计算，你需要提供一个大于1的系数--如果函数不能找到一个比这个系数乘以起点和目标之间的距离更短的<span class="notranslate">path</span> ，它将停止并报告失败。一个系数为4
    通常就足够了，但如果你预计会有很长的弯路，你可以把它加长。如果它失败了，仍然会创建一个<span class="notranslate">path</span> ，沿着目标的大致方向运行，但它不会到达目标。</p>
  <p class="note"><b>注意</b>：这个函数不会移动实例。它只设置一个<span class="notranslate">path</span> ，你必须使用<a href="../../Asset_Management/Paths/Paths.htm">路径</a>函数来移动。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">mp_potential_path_object(path, xgoal, ygoal, stepsize, factor, obj)</p>
  <table>
    <tbody>
      <tr>
        <th>争论</th><th>类型</th>
        <th>描述</th>
     </tr>
      <tr>
        <td><span class="notranslate">path</span></td><td><span data-keyref="Type_Asset_Path"></span></td>
        <td><span class="notranslate">index of the path that is to be used by the function</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xgoal</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The target x position.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">ygoal</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The target y position.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">stepsize</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The speed the instance moves in pixels per step.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">factor</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">This number is used to prevent an infinite loop. It should be larger than 1. See the function description for more information.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">obj</span></td><td><span data-keyref="Type_Asset_Object"></span></td>
        <td><span class="notranslate">The object that is to block the path. Can be an object index, an instance id or the special keyword ,<b>all</b></span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_Bool"></span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">path = path_add();<br/> mp_potential_path_object(path, obj_Player.x, obj_Player.y, 3, 4, obj_Wall);<br/> path_start(path, 3, 0, 0);</p>
  <p>上述代码创建了一个新的<span class="notranslate">path</span> 资源，并将其索引存储在变量 &quot;path &quot;中。然后，它使用 <span class="inline">mp_potential_path</span> ，在这个代码的<span class="notranslate">path</span> 和<span class="notranslate">object</span> &quot;obj_Player &quot;之间生成一个<span class="notranslate">object</span> ，检查是否与 &quot;obj_Wall &quot;发生碰撞。
    与<span class="notranslate">object</span> &quot;obj_Wall &quot;的碰撞。最后，它沿着该<span class="notranslate">object</span> 开始<span class="notranslate">path</span> ，即使该函数未能返回到 &quot;obj_Player &quot;的完整路线。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Motion_Planning.htm">运动规划</a></div>
        <div style="float:right">下一步。 <a href="mp_grid_create.htm"><span class="notranslate">mp_grid_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
mp_potential_path_object
-->
  <!-- TAGS
mp_potential_path_object
-->
</body>
</html>