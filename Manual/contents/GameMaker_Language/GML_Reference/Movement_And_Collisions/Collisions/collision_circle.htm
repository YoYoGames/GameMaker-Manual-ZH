<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>碰撞_圆圈</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion collision_circle" />
  <meta name="rh-index-keywords" content="collision_circle" />
  <meta name="search-keywords" content="collision_circle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>碰撞_圆圈</h1>
  <p><span class="inline">Collision_circle</span> 在点x1,y1周围创建一个由用户给定半径的圆形区域，然后检查该区域是否与参数 &quot;obj &quot;指定的 的<span class="notranslate">object</span> <b>任何</b>实例发生碰撞。这种检查可以是精确的，也可以是不精确的，但要启用精确碰撞，你要检查的 或实例也<span class="notranslate">object</span> <i>必须</i>为其 启用精确碰撞。如果没有，默认检查是基于边界框的。下面的图片说明了这是如何工作的。<span class="notranslate">sprite</span></p>
  <p><img>这里，中间的实例是用一个碰撞圈来检查球<span class="notranslate">objects</span> 。现在，蓝色的<i>没有</i>精确的边界框，正如你所看到的，即使<span class="notranslate">sprite</span> 实际上没有接触到圆圈，碰撞仍然可以发生（即使你在函数中把精确选项设置为真），因为该<span class="notranslate">sprite</span> 的边界框与 collision_circle 定义的圆圈区域重叠。另一方面，只有当实际的<span class="notranslate">sprite</span> 与定义的圆圈重叠时，绿球才会被视为发生碰撞。记住，要考虑精确碰撞，<span class="notranslate">object</span> <span class="notranslate">sprite</span> 和碰撞函数<i>都</i>必须将精确标记为开。还应该注意的是，该函数的返回值可以是<i>任何一个</i>被视为碰撞的实例的ID。</p>
  <p>注意，你可以提供一个实例来代替<span class="notranslate">object</span> 索引，以检查特定的实例。 <a href="../../Asset_Management/Instances/Instance_Variables/id.htm"><span class="inline">id</span></a>来检查一个特定的实例，或者<a href="../../../GML_Overview/Instance_Keywords.htm">实例关键字</a> <span class="inline">all</span> ，或者 <span class="inline">other</span> （取决于事件和当前的代码范围）。</p>
  <p> </p>
  <h4>语法。</h4>
  <p class="code">collision_circle(x1, y1, rad, obj, prec, notme);</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>类型</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">x1</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The x coordinate of the center of the circle to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">y1</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The y coordinate of the center of the circle to check.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">rad</span></td>
        <td><span data-keyref="Type_Real">真实的</span></td>
        <td><span class="notranslate">The radius (distance in pixels from its center to its edge).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">obj</span></td>
        <td><span data-keyref="Type_Asset_Object">对象资产</span>或<span data-keyref="Type_ID_Instance">实例ID</span></td>
        <td><span class="notranslate">The object to check for instance collisions.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">prec</span></td>
        <td><span data-keyref="Type_Bool">布尔型</span></td>
        <td><span class="notranslate">Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">notme</span></td>
        <td><span data-keyref="Type_Bool">布尔型</span></td>
        <td><span class="notranslate">Whether the calling instance, if relevant, should be excluded (<span class="inline">true</span>)或不(<span class="inline">false</span>)。</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>返回。</h4>
  <p class="code"><span data-keyref="Type_ID_Instance">Instance ID</span> or <span data-keyref="Type_ID_noone">noone</span></p>
  <p> </p>
  <h4>例子。</h4>
  <p class="code">if collision_circle(x, y, 20, obj_Cursor, false, true)<br />
    {<br />
        image_index = 1;<br />
    }<br />
    else image_index = 0;</p>
  <p>上面的代码将检查一个半径为20像素的圆形区域是否与 &quot;obj_Cursor &quot;发生碰撞，如果有，它将把运行代码的<span class="notranslate">object</span> 的image_index设为1，但如果没有，它将把<span class="notranslate">object</span> 的image_index设为0。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Collisions.htm">碰撞</a></div>
        <div style="float:right">下一步。 <a href="collision_circle_list.htm"><span class="notranslate">collision_circle_list</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
collision_circle
-->
  <!-- TAGS
collision_circle
-->
</body>
</html>