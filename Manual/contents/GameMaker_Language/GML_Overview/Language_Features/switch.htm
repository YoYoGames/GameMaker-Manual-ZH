<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>开关</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>开关</h1>
  <p>在很多情况下，你想让你的实例根据一个特定的值来执行不同的动作。你可以使用一些连续的 <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a>语句来实现，但是当可能的选择超过两到三个时，通常使用 <span class="inline">switch</span> 语句会更容易。</p>
  <p> <span class="inline">switch</span> 语句的语法如下。</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>这方面的工作如下。</p>
  <ul class="colour">
    <li>首先，<a class="glossterm" data-glossterm="表情" href="#">表达式</a>被执行。</li>
    <li>接下来，其结果与每个 <span class="inline">case</span> <span class="glossextra">语句</span>后的不同常数进行比较。当我们说 &quot;常量 &quot;时，我们的意思是，案例中的值不能是一个变量表达式，必须是任何<a href="../Data_Types.htm">数据类型</a>的固定值，如<span class="inline2">&quot;战斗 &quot;</span>或<span class="inline2">3</span>或关键词 <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>执行从第一个具有匹配值的 <span class="inline">case</span> 语句开始，<i>直到遇到一个<a href="break.htm"><span class="notranslate">break</span></a> 语句</i>。</li>
    <li>如果没有 <span class="inline">case</span> 语句的匹配值，那么将执行 <span class="inline">default</span> 语句。不需要有 <span class="inline">default</span> 语句，如果没有提供，那么在没有匹配的情况下，将不会采取任何行动。 <span class="inline">default</span> 语句可以放在<span class="notranslate">switch</span> 块中的任何地方，但是传统上它被放在底部，在所有案例之后。</li>
  </ul>
  <p class="note"><span class="note">注意</span> <span class="notranslate">switch</span> 语句将继续执行 <span class="inline">case</span> 内的代码，直到遇到一个 <span class="inline">break</span> 。如果你不在案例的最后使用 <span class="inline">break</span>s，它将导致<span class="notranslate">switch</span> &quot;泄漏 &quot;到下一个 <span class="inline">case</span> ，甚至到 <span class="inline">default</span> ，如果没有 <span class="inline">break</span>s的话。这可能会导致非预期的行为，因为执行一个 <span class="inline">case</span> 可能会导致执行多个 <span class="inline">case</span>，所以要确保在适当的地方使用 <span class="inline">break</span> 。</p>
  <p>使用<span class="notranslate">switch</span> 语句的一个简单例子是这样的。</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>请注意，多个 <span class="inline">case</span> 语句可以用来执行同一语句，因为<span class="inline">break</span> 并不总是需要每一个 <span class="inline">case</span> 。如果在某一特定的 <span class="inline">case</span> ，没有 <span class="inline">break</span> 语句，则只需继续执行下一个案例的代码，例如。</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>上面的代码使用 <span class="inline">switch</span> 来检查键盘事件，然后将其与列出的每个 <span class="inline">case</span> 进行比较。如果它符合任何所需的值，那么相应的代码将被执行。请注意，<span class="inline">switch</span> 可以检查多个 <span class="inline">cases</span> ，并执行代码，直到下一个<span class="inline">break</span> ，以允许使用各种键来获得相同的结果。</p>
  <p>每个 <span class="inline">case</span> ，可以有自己的代码，所以你可以建立一种 &quot;继承 &quot;系统，一个案例执行自己的代码，然后也执行下一个案例的代码。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Language_Features.htm">语言特点</a></div>
        <div style="float:right">下一步。 <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>