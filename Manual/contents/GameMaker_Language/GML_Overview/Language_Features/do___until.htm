<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>做/直到</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the do / until functions" />
  <meta name="rh-index-keywords" content="do,until" />
  <meta name="search-keywords" content="do,until" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>做/直到</h1>
  <p> <span class="inline">do</span> 函数是对一个或多个<span class="glossextra">语句</span>进行多次迭代的另一种方式，它实际上是一个 &quot;<span class="inline">do... until</span>&quot; 语句，因为你不能有一个没有另一个，因为你告诉<span data-keyref="GameMaker Name">GameMaker</span>做一些事情，直到一个特定的<a class="glossterm" data-glossterm="表情" href="#">表达式</a>返回 <span class="inline">true</span> 。它有这样的形式。</p>
  <p class="code">do<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }<br />
    until (&lt;expression&gt;);</p>
  <p>语句（可以是大括号内的多个语句的代码块 <span class="inline">{}</span> ）被执行，直到发现表达式是 <span class="inline">true</span> ，并且初始语句<strong>总是被至少执行一次</strong>。下面你可以找到一个使用 <span class="inline">do... until</span> 的典型例子。</p>
  <p class="code">do<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }<br />
    until (place_free(x, y));</p>
  <p>上述代码试图将当前的<span class="notranslate">object</span> ，并将至少设置一次x/y变量，然后根据需要<span class="glossextra">进行</span>多次<a class="glossterm" data-glossterm="迭代" href="#">迭代</a>，直到 <span class="inline">place_free()</span> 表达式返回 <span class="inline">true</span> 。</p>
  <p><strong>什么时候应该使用 <span class="inline">do</span> / <span class="inline">until</span> <span class="notranslate">loop</span> ？</strong>当你想重复一个或多个语句，但实际上不知道它要重复多少次，并想确保在<span class="notranslate">loop</span> 结束前至少运行<em>一次</em>语句时，都应该使用它。</p>
  <p>你也可以使用 <a href="break.htm"><span class="inline">break</span></a>和 <a href="continue.htm"><span class="inline">continue</span></a>语句在你的 <span class="inline">do</span> <span class="notranslate">loops</span> 。使用 <span class="inline">break</span> ，将立即退出<span class="notranslate">loop</span> ，并在<span class="notranslate">loop</span> 应该完成后，转入事件或函数中的任何代码，例如。</p>
  <p class="code">var _id = noone;<br />
    do<br />
    {<br />
        _id = list[| 0];<br />
        if instance_exists(_id)<br />
        {<br />
            _break;<br />
        }<br />
        ds_list_delete(list, 0);<br />
    }<br />
    until (ds_list_empty(list));<br />
    <br />
    target = _id;
  </p>
  <p>在上面的代码中，我们创建了一个局部变量，并将其设置为容纳关键字 <a href="../Instance_Keywords.htm"><span class="notranslate">noone</span></a>.然后我们执行 <span class="inline">do / until</span> <span class="notranslate">loop</span> ，检查一个DS列表的第一个位置，看它是否持有一个有效的实例ID，如果是，那么我们 <span class="inline">break</span> ，<span class="notranslate">loop</span> ，否则列表位置的值被删除。在<span class="notranslate">loop</span> 终止后（无论是由 <span class="inline">break</span> 还是因为列表为空），本地变量的值就被分配到实例变量 <span class="inline">target</span> 。</p>
  <p>在 <span class="inline">do / until</span> <span class="notranslate">loop</span> ，一个使用continue的例子是。</p>
  <p class="code">do<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }<br />
    until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>这段代码将生成一个随机的<span class="notranslate">room</span> ，然后检查在该位置是否存在一个<span class="notranslate">object</span> <span class="inline">obj_Enemy</span> 的实例。如果有，当前的<span class="notranslate">loop</span> 迭代将使用 <span class="inline">continue</span> 终止，并开始新的迭代，如果没有，则在随机位置创建一个<span class="notranslate">object</span> <span class="inline">obj_Enemy</span> 的实例。只有当<span class="notranslate">loop</span> 中有10个或更多的<span class="notranslate">object</span> 的实例时，<span class="notranslate">room</span> 才会终止。</p>
  <p>最后一点：要小心你的 <span class="inline">do</span> <span class="notranslate">loops</span> ，因为你可以很容易地使它们永远<span class="notranslate">loop</span> ，在这种情况下，你的游戏将挂起，不再对任何用户的输入作出反应，他们将不得不强制关闭它。</p>
  <p>更多关于<span class="notranslate">loop</span> 关键字的例子，请参见以下章节 <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>，以及 <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Language_Features.htm">语言特点</a></div>
        <div style="float:right">下一步。 <a href="for.htm"><span class="notranslate">for</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->
</body>
</html>