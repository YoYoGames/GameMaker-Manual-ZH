<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>评估令</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the Evaluation Order of arguments" />
  <meta name="rh-index-keywords" content="Evaluation Order" />
  <meta name="search-keywords" content="Evaluation Order" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>评估令</h1>
  <p>当使用<span class="notranslate">GameMaker Language</span> ，对你的游戏进行编程时，你应该意识到，函数调用参数并<strong>不保证有一个评估顺序</strong>。这意味着在你的代码中放置的函数的运行顺序会因平台不同而改变，所以你应该以明确的方式编码。这是由于不同目标平台之间的优化差异造成的，例如，在<span class="notranslate">Windows</span> 目标平台上，函数参数可能从右到左进行评估，但在HTML5目标平台上，它们可能从左到右进行评估。因此，为了避免任何问题，你最好不要在单个函数调用的参数中调用多个函数，因为你很可能会在评估顺序上有所依赖。</p>
  <p>要想知道这意味着什么，请看下面的代码，它有一个<a href="Script_Functions.htm">脚本函数</a>&quot;<span class="inline">buffer_get_info</span>&quot; ，它正在调用几个<a href="Runtime_Functions.htm">运行时函数</a>，并将它们作为参数。</p>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    buffer_get_info(buffer_read(buff, buffer_s8), buffer_read(buff, buffer_s16),buffer_read(buff, buffer_s16));</p>
  <p>现在，这里的问题是，在一些平台上，<i>最后一个</i> <span class="inline">buffer_read()</span> 将被<i>首先</i>调用，因此<span class="notranslate">script</span> 的所有参数都将是错误的，因为数据是以你所认为的 &quot;相反 &quot;顺序从<span class="notranslate">buffer</span> 中读取的。这在这里产生了连锁反应，影响了所有进一步的 <span class="inline">buffer_read()</span> 函数的值，所以传递给这个<span class="notranslate">script</span> 函数的所有参数都将是错误的</p>
  <p>为了解决这个问题，你应该按照规定的顺序<i>明确地</i>调用这些函数，并将返回的值存储在变量中，像这样。</p>
  <p class="code">var val[0] = buffer_read(buff, buffer_s8);<br />
    var val[1] = buffer_read(buff, buffer_s16);<br />
    var val[2] = buffer_read(buff, buffer_s16);<br />
    buffer_get_info(val[0], val[1], val[2]);</p>
  <p>虽然这似乎是一个更冗长的方法，但它保持了一切的清晰，避免了任何可能的评估顺序问题。</p>
  <p>你在使用<a class="glossterm" data-glossterm="表情" href="#">表达式</a>时也应该注意，因为它们被评估的顺序会根据你编译的目标而改变。因此，在你的代码中使用表达式时，确保你使用括号 <span class="inline">()</span> ，以正确控制操作的顺序。这对于确保你的游戏在所有目标平台游戏中的正确行为非常重要，对于HTML5平台也是<i>至关重要的</i>。关于<a href="Expressions_And_Operators.htm">表达式</a>的页面对此有更详细的解释。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="GML_Overview.htm">GML概述</a></div>
        <div style="float:right">下一个。<a data-xref="{title}" href="Accessors.htm">访问者</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
evaluation order
-->
  <!-- TAGS
evaluation_order
-->
</body>
</html>