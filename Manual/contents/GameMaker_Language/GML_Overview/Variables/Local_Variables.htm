<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>本地变量</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining local variables" />
  <meta name="rh-index-keywords" content="var,Local Variables" />
  <meta name="search-keywords" content="local variables,local,var,local scope" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>本地变量</h1>
  <p><strong>局部变量</strong>是指我们<i>只</i>为一个特定的<strong>事件</strong>或<strong>函数</strong>创建的变量，当事件或函数结束后就会被丢弃。如果它是在一个自定义函数中创建的，那么这个局部变量只对该函数可用，当该函数结束后就会被丢弃。为什么我们需要它们呢？好吧，变量会占用内存空间，而且我们可能只在一个操作或函数中使用它们，在这种情况下，我们只需要在它被使用的短时间内把它放在内存中。这可以使你的代码库保持干净整洁，也可以使内存空间优化到真正需要它的地方。为了声明一个局部变量，我们使用 <span class="inline"><strong><span class="inline">var</span> 这样的操作。</p>
  <p class="code">var _i, _num, _str;<br />
    _i = 0;<br />
    _num = 24.5;<br />
    _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0, _num = 24.5, _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0;<br />
    var _num = 24.5;<br />
    var _str = &quot;Hello World&quot;;
  </p>
  <p>所有以这种方式创建的变量将在创建它们的事件（或函数）结束时被 &quot;遗忘&quot;（即：从内存中删除）。你应该注意，你给所有 <span class="inline">var</span> 声明的变量的名字不能与运行代码的<span class="notranslate">object</span> 内的另一个实例变量重合，而且还要确保你无意在你声明的事件或函数之外使用存储在该变量中的值（在上面的例子中，所有 <span class="inline">var</span> 声明的变量都是用下划线&quot;_&quot;在变量名前定义的，但这并不是必须的，这样做只是为了在代码中更明显地表明我们正在处理一个局部变量）。也就是说，如果你发现自己处于这样一种情况：你认为一个局部变量<em>应该</em>和一个实例变量一样，那么你可以使用 <span class="inline">self</span> <a href="../Instance_Keywords.htm">关键字</a>来确定实例变量是独立的，比如说。</p>
  <p class="code">var hp = 10;<br />
    with (obj_Enemy)<br />
    {<br />
        self.hp -= hp;<br />
    }</p>
  <p>本地变量在程序中经常使用，特别是在<span class="notranslate">loops</span> ，用于计算<span class="glossextra">迭代</span>，或者在一个操作中多次使用一个值，而这个值不会再重复。下面是另外几个例子。</p>
  <p class="code">var _i = 0;<br />
    repeat (10)<br />
    {<br />
        inventory[_i] = 0;<br />
        _i += 1;<br />
    }</p>
  <p>上面的代码创建了一个名为&quot;<span class="inline">_i</span>&quot;的局部变量，并将其设置为0，所有这些都在同一行。注意，在以前的<i>GameMaker</i>版本中，你必须先声明你的局部变量，<i>然后</i>给它们赋值，但在这个版本中，你可以同时声明<i>并</i>给它们赋值。上面的代码然后使用这个变量来初始化一个<a href="../Arrays.htm">数组</a>。由于变量&quot;<span class="inline">_i</span>&quot;不会被用于实例中除此以外的任何其他功能，它可以在范围内是局部的。下面是另一个例子。</p>
  <p class="code">var _x, _y;<br />
    _x = x - 32 + irandom(64);<br />
    _y = y - 32 + irandom(64);<br />
    instance_create_layer(_x, _y, &quot;Effects&quot;, obj_blood);</p>
  <p>这里我们使用了局部变量 &quot;<span class="inline">_x</span>&quot; 和 &quot;<span class="inline">_y</span>&quot; 来存储一些随机的坐标，然后用来创建一个实例。在这个例子中，你可以看到，严格来说，我们没有必要使用这些变量，但是为了可读性和易用性，我们还是使用了这些变量。比起使用这段代码，我们在这里做的事情要清楚和明显得多。</p>
  <p class="code">instance_create_layer(x - 32 + irandom(64), y - 32 + irandom(64), &quot;Effects&quot;, obj_guts);</p>
  <p>关于 <span class="inline">var</span> 声明的局部变量，还有一件事需要注意......因为它们对运行它们的事件或函数来说是唯一的，所以它们也可以通过代码在任何其他实例中使用！这意味着我们可以使用这些变量来设置和改变其他实例中的东西，使用"  " 构造。这意味着我们可以使用这些变量在其他实例中使用&quot;<span class="inline">with()</span>&quot;结构来设置和改变一些东西（更多信息请参见关于<a href="../Variables_And_Variable_Scope.htm">变量范围</a>的章节）。实际的代码本身看起来会是这样的。</p>
  <p class="code">var num = instance_number(obj_Enemy);<br />
    with (obj_Enemy)<br />
    {<br />
        if num&gt;10 instance_destroy();<br />
    }</p>
  <p>上述代码之所以有效，是因为 <span class="inline">var</span> 声明的变量是它所包含的<i>事件</i>（或函数）的局部，而不是实例，也不是游戏世界，因此只要是在同一个代码块中，就可以在任何<span class="notranslate">object</span> 的任何函数中使用。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来。<a href="../Variables_And_Variable_Scope.htm">变量和变量范围</a></div>
        <div style="float:right">下一步。<a href="Instance_Variables.htm">实例变量</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
local variables
var
-->
  <!-- TAGS
var
local_variables
-->
</body>
</html>