<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>实例变量</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining instance variables" />
  <meta name="rh-index-keywords" content="Instance Variables" />
  <meta name="search-keywords" content="instance variables" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>实例变量</h1>
  <p><strong>实例 </strong>变量是在一个<span class="notranslate">object</span> 的实例中创建的，并且被认为对该实例是唯一的--即：同一个<span class="notranslate">object</span> 的许多实例可以有相同的变量，但每个变量可以持有不同的值，因为它们对每个实例是<em>唯一的 </em>。
    每个实例都是独一无二的。但是，<i>如何</i>创建一个实例变量呢？嗯，你可以通过简单地给它们赋值来创建新的变量，如这个小例子所示（这被称为<em>声明</em>变量）。</p>
  <p class="code">potions = 12;<br/> life = 100;<br/> name = &quot;Jock MacSweeney&quot;;<br/> strength = 5.5;<br/> armour = -2;</p>
  <p>正如你所看到的，你只需要给出名字和一个值（该值可以是任何<a href="../Data_Types.htm">数据类型</a>）来设置该变量，并让它准备好在你编码的<span class="notranslate">object</span> （注意该值可以是
    注意值可以来自函数的返回值或其他变量之间的操作结果，等等）。然后，这些变量可以在实例中以多种方式被使用和修改，例如，这段代码可以在一个碰撞事件中使用
    并用于从变量 &quot;<span class="inline">life</span>&quot;中取出一个数额。</p>
  <p class="code">life -= 5 + armour;</p>
  <p>如果&quot;<span class="inline">life</span>&quot;在100，它现在将有一个97的值（100-（5+-2）=97）。现在，这是一个简单的例子，你<i>可以</i>把 &quot;<span class="inline">armour</span>&quot; 替换成实际值-2。
    但如果这个值是在多个地方<a class="glossterm" data-glossterm="硬编码" href="#">硬编码</a>的，然后你决定改变它，会发生什么？你将不得不翻阅所有的代码，把每一个-2都改成新的值
    是什么，这很费时间，而且很容易出错但是如果你使用一个变量，你所要做的就是给它重新分配一个新的值，然后代码就会自动使用这个新的值，使事情变得更加灵活，也更容易解决。
    如果有问题的话。还应该注意的是，即使一个值不会改变，要记住一个叫做 &quot;<span class="inline">life</span>&quot;的变量是什么意思也比只看一个数字容易得多。</p>
  <p><span data-keyref="GameMaker Name">GameMaker</span>也有一系列 &quot;内置 &quot;的实例变量，所以你应该注意它们，因为你可能会把你自己的一个实例变量命名为相同的名字，或者希望你自己的全局变量有相同的名字，并想知道为什么
    你得到的错误。然而，它们很容易被发现，因为它们在代码编辑器中以不同的颜色显示，也会在自动完成中出现，并在<a href="../../../The_Asset_Editors/Scripts.htm">代码编辑器</a>的底部显示为条形。</p>
  <p>在处理实例变量时，有相当多的<a href="../Runtime_Functions.htm">运行时函数</a>被设计来帮助你，它们都被列在下面的章节中。</p>
  <ul class="colour">
    <li><a href="../../GML_Reference/Variable_Functions/Variable_Functions.htm">变量函数</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来。<a href="../Variables_And_Variable_Scope.htm">变量和变量范围</a></div>
        <div style="float:right">下一步。<a href="Global_Variables.htm">全局变量</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance variables
-->
  <!-- TAGS
instance_variables
-->

</body></html>