<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>数据类型</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining Data Types" />
  <meta name="rh-index-keywords" content="Data Types" />
  <meta name="search-keywords" content="Data Types" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>数据类型</h1>
  <p>在上一节中，我们介绍了<a href="Variables_And_Variable_Scope.htm">变量和它们的范围规则</a>，但对变量所能存储的不同<b>数据类型</b>却很少提及。因此，本节解释了不同的类型和它们的用途。</p>
  <p>在继续之前，我们先简单解释一下 &quot;数据类型 &quot;的含义。当你创建一个变量时，它可以用来保存信息，而当你调用一个函数时，它也可以存储返回的信息。然而这些信息可以有各种 &quot;口味&quot;--例如，它可以是一个<em>实数</em>，也可以是一个<em>字符串</em>。这些被使用的不同类型的值被称为<b>数据类型</b>，当使用<span class="notranslate">GameMaker Language</span> ，它们可以是以下任何一种。</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">真实的数字</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">实数是指任何不是<span class="notranslate">string</span> ，也不是任何其他可能的数据类型的值。所以，124、45639.566546456、0、-45.5等等......都是实数的例子。所有实数都被存储为64位双精度浮点值（或整数值），编译器将尽可能地进行优化（例如，0.0将被优化为0的整数值）。</p>
    <p class="dropspot">当处理任何非整数的数值时，由于浮点数学的性质，你可能会遇到轻微的四舍五入误差。关于这个和其他数字相关的函数的更多信息，请参见。<a href="../GML_Reference/Maths_And_Numbers/Number_Functions/Number_Functions.htm">GML参考--数字函数</a>。</p>
    <p class="note"><span class="note">注意</span>在<b>HTML5</b>目标上，所有实数都是双数。</p>
    <p class="dropspot">请注意，虽然<span data-keyref="GameMaker Name">GameMaker</span>中创建的变量都是以双精度浮点数或整数形式存储的，但在处理<span class="notranslate">extensions</span> ，你仍然可以使用其他格式。这些可以从一个<span class="notranslate">extension</span> ，然后使用适当的<span class="inline">is_*()</span> 函数检查到<span data-keyref="GameMaker Name">GameMaker</span>中，其中的列表可以<a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">在这里</a>找到。</p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">布尔型</a></p>
  <div class="droptext" data-targetname="drop-down6">
    <p class="dropspot">布尔值是一个简单的值，可以是<span class="inline">true</span> ，也可以是<span class="inline">false</span> 。注意，目前<span data-keyref="GameMaker Name">GameMaker</span>将把等于或低于0.5的实数解释为<span class="inline">false</span> ，而把大于0.5的实数解释为<span class="inline">true</span> 。
      然而，这并<i>不</i>意味着你应该检查1和0（或任何其他实数）的真假，因为你还提供了<b>常数</b> <span class="inline">true</span> 和<span class="inline">false</span> ，这些常数应该始终在你的代码中使用，以
      以防止在未来的更新中增加真正的布尔数据类型时出现任何问题。</p>
    <p class="dropspot">你可以使用以下函数将任何实数转换成隐含的布尔值。</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="../GML_Reference/Variable_Functions/bool.htm"><span class="notranslate">bool</span></a></li>
    </ul>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">弦乐</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot"><label for="one">一个<span class="notranslate">string</span> ，就是任何被置于引号&quot;... &quot;中的文本。你可以对<span class="notranslate">strings</span> ，比如把两个<span class="notranslate">strings</span> 加在一起，形成一个更长的<span class="notranslate">string</span> （连接），你也可以改变<span class="notranslate">string</span> 的属性，甚至从中提取实数。关于<span class="notranslate">strings</span> 和<span class="notranslate">string</span> 函数的更多信息，请参见。<a href="../GML_Reference/Strings/Strings.htm">GML参考 - 字符串</a>。</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">数组</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot"><label for="three">数组是一种特殊的数据类型，可以用来保存多个数值。你把数组分配给一个变量，然后在数组的不同索引处 &quot;填入 &quot;数值。然后，这个数组可以在逐次传递的基础上传递给<span class="notranslate">scripts</span> 和函数，但是如果你修改了传递的数组，那么它将成为原始数组的副本，因此需要返回到原始变量以更新数组。关于数组的更多信息，请参见:<a href="Arrays.htm">GML概述--数组</a>。</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">结构</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot"><label for="eleven"><span class="notranslate">struct</span> （有时称为 &quot;轻量级对象&quot;）是一个原始数据结构，作为所有数据类型的变量的容器。你把一个<span class="notranslate">struct</span> ，然后在<span class="notranslate">struct</span> ，你可以定义更多的变量，然后这些变量可以根据需要被读出或写入。关于<span class="notranslate">structs</span> 的更多详细信息，请参见<a href="Structs.htm">GML概述-结构</a>一节。</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">方法变量</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot"><label for="twelve">方法变量是一个已经被分配了函数的变量，它的使用与你使用<span class="notranslate">GML</span> <span class="notranslate">runtime</span> 函数完全一样。更详细的信息，请参见<a href="Method_Variables.htm">方法变量</a>一节。</label></p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down13" href="#">ǞǞǞ</a></p>
  <div class="droptext" data-targetname="drop-down13">
    <p class="dropspot">int64 &quot;是一个64位的整数，可以使用 <span class="inline"><a href="../GML_Reference/Variable_Functions/int64.htm">int64()</a></span> （通过传入一个非64位的实数）或在从<a href="../GML_Reference/Buffers/buffer_read.htm">缓冲区</a>读取 <span class="inline">buffer_u64</span> 值时创建。</p>
    <p class="dropspot">这可以用在严格要求64位整数的地方，或者当你想进行<a href="../../Additional_Information/Bitwise_Operators.htm">位移</a>工作并需要那些64位的位置时。</p>
    <p class="dropspot">任何位操作，即使在非64位值上运行，也总是返回一个64位的整数。</p>
    <p class="dropspot">对int64值的除法也将返回整数（例如：<span class="inline2">int64(5) / int64(2) = 2</span>）。</p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">十六进制值</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot"><span data-keyref="GameMaker Name">GameMaker</span>将接受<b>十六进制字样</b>作为合法值。十六进制值在处理颜色时特别常见，但也可以在任何需要正整数值的地方使用。十六进制值可以用以下两种方式进行格式化，其中 <span class="inline"><em>abcd</em></span> 将是实际的十六进制值。</p>
    <p class="code"><span style="background-color: transparent;"><strong>$</strong><em>abcd</em></span><br />
      <strong>0x</strong><em>abcd</em>
    </p>
    <p class="dropspot">例如，以下十进制数值可表示为十六进制，如图所示。</p>
    <p class="code"><strong>11406</strong> -&gt; $2c8e, 0x2c8e<br />
      <strong>16777215</strong> -&gt; $ffffff, 0xffffff
    </p>
    <hr />
    <p class="dropspot">十六进制值也可以以哈希/磅符号<span class="inline2">（#</span>）开头，但是这样写的时候，它的值将不等于用以前显示的格式<span class="inline2">（$</span>或<span class="inline2">0x</span>）写的类似的十六进制值。这是由于颜色在<span class="notranslate">GML</span> ，这需要改变哈希/磅十六进制值的格式，以便CSS的颜色可以用<span class="inline2">#RRGGBB</span>格式来书写。欲了解更多信息，请阅读<a data-xref="{text}" href="../GML_Reference/Drawing/Colour_And_Alpha/Colour_And_Alpha.htm#h">Hex颜色</a>。</p>
    <p class="dropspot">例如，以下两个不相等。</p>
    <p class="code">$2c8edd <strong>!=</strong> #2c8edd</p>
    <p class="dropspot">要使它们指的是同一个十进制数值，你必须将前两个和后两个字符对调。</p>
    <p class="code">$<strong>2c</strong>8edd <strong>=</strong><strong>=</strong> #dd8e<strong>2c</strong></p>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">指针</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p class="dropspot">指针是一种数据类型，&quot;指向 &quot;一个内存位置。你不能对指针进行操作，它只用于一些非常特殊的功能，比如为另一个函数从内存中获取<span class="notranslate">texture</span> 或<span class="notranslate">buffer</span> 地址。关于返回指针的函数的例子，你可以参见 <a href="../GML_Reference/Buffers/buffer_get_address.htm"><span class="inline">buffer_get_address()</span></a>或 <a href="../GML_Reference/Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm"><span class="inline">sprite_get_texture()</span></a>.</p>
    <p class="dropspot">还有一个函数用于检查一个值是否是指针（见下面的<b>&quot;检查数据类型</b>&quot;），以及一个将一个值转换成指针的函数。</p>
    <ul class="dropspotlist">
      <li class="dropspot"><a href="../GML_Reference/Variable_Functions/ptr.htm" style="background-color: transparent;"><span class="notranslate">ptr</span></a></li>
    </ul>
    <p class="dropspot">在使用指针时，你也可以使用（并获得返回）以下内置常量。</p>
    <table class=" cke_show_border">
      <tbody>
        <tr>
          <th>恒定</th>
          <th>描述</th>
        </tr>
        <tr>
          <td><span class="notranslate"><span class="inline">pointer_null</span></td>
          <td>这个常数表示指针没有指向任何有意义的东西（与C++中的 <span class="inline">NULL</span> 或C#中的 <span class="inline">null</span> 相同）。这个值是<a class="glossterm" data-glossterm="虚张声势" href="#">虚假的</a>。</td>
        </tr>
        <tr>
          <td><span class="notranslate"><span class="inline">pointer_invalid</span></td>
          <td>这个常数仅仅意味着该值不是一个有效的指针</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">枚举</a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">枚举是一种 &quot;枚举器&quot;，它本质上允许你用一个常量值的列表来创建你自己的有限的数据类型。枚举在<a href="Variables/Constants.htm">常量</a>的页面上有深入的解释。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">未定义</a></p>
  <div class="droptext" data-targetname="drop-down9">
    <p class="dropspot"><label for="seven"><span class="notranslate">undefined</span> 值（也称为 &quot;空 &quot;值）是指一个表达式没有正确的值，尽管它在语法上是正确的，所以必须返回<i>一些东西</i>。例如，假设你有一个<a href="../GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS地图</a>并使用函数 <a href="../GML_Reference/Data_Structures/DS_Maps/ds_map_find_value.htm"><span class="inline">ds_map_find_value()</span></a>.现在，当地图没有被寻找的值时会发生什么？那么，由于函数的格式正确，而问题是没有这样的值，那么它将返回常数<span class="inline">undefined</span> ，你可以像检查<span class="inline">true</span> 或任何其他值一样检查这个常数。<br></label></p>
    <p class="code"><label for="seven">var _value = ds_map_find_value(my_map, &quot;key&quot;);<br /><br />if (<a href="../GML_Reference/Variable_Functions/is_undefined.htm">is_undefined</a>(value)) {<br />    show_debug_message(&quot;The key does not exist!&quot;);<br />}</label><br /></p>
    <p class="dropspot"> <br /></p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">钠</a></p>
  <div class="droptext" data-targetname="drop-down10">
    <p class="dropspot"><label for="nine"><span class="inline">NaN</span> 代表 &quot;非数字&quot;，是一个常数，当编译器不能将一个操作的结果作为一个数字来评估时，可以返回。例如，0/0不能被定义为实数，因此用 表示，或者一个负数的平方根--被认为是一个 &quot;虚数&quot;--不能被表示为实数，因此用 表示。<span class="inline">NaN</span> <span class="inline">NaN</span></label></p>
    <p class="dropspot">请注意，由于 <span class="inline">NaN</span> 不是一个数字，它不能与自己比较，所以像 <span class="inline">NaN == NaN</span> 这样的比较将返回 <span class="inline">false</span> 。像这样的数组比较也是如此。</p>
    <p class="code">show_debug_message(array_equals([NaN], [NaN]));<br />
      <br />
      // Output: 0 (false)
    </p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">无限大</a></p>
  <div class="droptext" data-targetname="drop-down11">
    <p class="dropspot">常数<span class="inline">infinity</span> ，指的是一个被认为是无限的数字，比如你用任何浮点值除以0会得到的结果，例如：1.0/0。</p>
    <p class="dropspot">注意， <span class="inline">infinity</span> 常数等于它自己，所以 <span class="inline">infinity == infinity</span> 将返回 <span class="inline">true</span> 。</p>
  </div>
  <p id="variable"><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">任何</a></p>
  <div class="droptext" data-targetname="drop-down12">
    <p class="dropspot">在手册的许多页面上都可以找到<strong>&quot;Any</strong>&quot;数据类型，例如<a href="../GML_Reference/Variable_Functions/is_string.htm">在参数中，</a>或作为<a href="../GML_Reference/Variable_Functions/array_get.htm">返回值</a>。它表示接受<em>任何类型的值</em>，或者可以返回。</p>
  </div>
  <p> </p>
  <p>你可以使用下面列出的函数来检查任何变量的数据类型。</p>
  <ul class="colour">
    <li><a href="../GML_Reference/Variable_Functions/Variable_Functions.htm">变量函数</a></li>
  </ul>
  <p>你还可以在这里找到显示使用混合变量数据类型进行不同运算结果的算术类型表。</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="../../Additional_Information/Type_Tables.htm">类型表</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="GML_Overview.htm">GML概述</a></div>
        <div style="float:right">下一篇:<a data-xref="{title}" href="Language_Features/If_Else_and_Conditional_Operators.htm">if / else和条件运算符</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Data Type - Real
Data Type - String
Data Type - Pointer
Data Type - Undefined
Data Type - Enum
Data Type - True
Data Type - False
Data Type - Array
Data Type - Boolean
Data Type - NaN
Data Type - Infinite
Data Type - Struct
real
string
pointer
undefined
enum
true
false
arrays
boolean
NaN
infinite
ptr
struct
pointer_null
pointer_invalid
-->
  <!-- TAGS
data_type
real
string
pointer
undefined
enum
true
false
arrays
boolean
ptr
struct
pointer_null
pointer_invalid
-->
</body>
</html>