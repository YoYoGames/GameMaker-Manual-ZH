<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>创建粒子类型</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains the Create Particle Type action" />
  <meta name="rh-index-keywords" content="GML Visual Action - Create Particle Type" />
  <meta name="search-keywords" content="Create Particle Type" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><img> 创建粒子类型</h1>
  <p>在你的项目中，你可以有多个不同的粒子<i>类型</i>，每个粒子都有自己的属性，比如方向和颜色等等......这些都可以通过不同的粒子类型动作来设置。然而，你首先需要使用这个动作来创建一个<b>粒子类型</b>，这基本上是分配了一小部分内存来保存所有的粒子细节，这样你就可以在未来的任何时候使用这些粒子。你给一个变量来保存粒子类型的唯一ID值，然后在
    所有与这个粒子有关的未来行动中，你可以调用这个变量。你可以选择将这个变量作为一个临时的局部变量<span class="notranslate">flag</span> ，但这将意味着它在动作结束时被丢弃<span class="notranslate">script</span> ，或者说，粒子
    类型仍然存在，但你却没有办法访问它，所以在使用时必须小心（一般来说，粒子类型永远不需要存储在一个临时的局部变量中，但对于某些事情，比如将粒子绘制到一个表面。
    它可能是必需的）。</p>
  <p class="note"><b>注意</b>：粒子类型一旦创建，就会在游戏过程中一直驻留在系统内存中，因此如果你需要在任何时候重新创建它（例如，如果你调用<a href="../Game/Restart_Game.htm">重启游戏</a>动作）。
    那么你就<b>必须销毁当前的粒子类型</b>，否则就会出现内存泄漏。当一个资源被添加到内存中，然后被 &quot;取消引用 &quot;时，就会发生这种情况，这意味着<span data-keyref="GameMaker Name">GameMaker</span>没有办法再与该资源进行交互。
    的互动。这导致内存被不可访问的资源堵塞，这反过来会导致你的游戏出现问题。要销毁不再需要的粒子类型，请使用<a href="Destroy_Particle_Type.htm">Destroy Particle Type</a>动作。</p>
  <p>你还可以设置粒子的<b>混合</b>模式。默认情况下，它们将以 &quot;普通 &quot;混合模式绘制，因此颜色将不会被绘制在粒子下面的东西所改变。
    启用时，它们将使用<i>加法</i>混合模式绘制，这意味着事物的颜色将根据粒子下面绘制的内容而改变。加法混合可以产生非常明亮和 &quot;发光 &quot;的效果，并且是
    爆炸、激光、火焰等的理想效果，而普通混合则更适合于雨、烟和碎片等效果。下面的图片显示了关闭（左）和开启（右）加成混合的相同效果。</p>
  <p><img alt="Create Particle Type Icon" class="icon" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Particles/i_Particles_Create_Particle_Type.png" /></p>
  <p> </p>
  <h4>行动语法。</h4>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Particles/Particle_Blending.gif" /></p>
  <h4>争论。</h4>
  <table>
    <tbody>
      <tr>
        <th>争论</th>
        <th>描述</th>
      </tr>
      <tr>
        <td><span class="notranslate">Target</span></td>
        <td>保存返回的类型ID值的目标变量</td>
      </tr>
      <tr>
        <td><span class="notranslate">Blend</span></td>
        <td>粒子类型是否应使用添加剂混合法</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>例子。</h4>
  <p><img>上面的动作块代码将创建一个新的粒子类型，并将其唯一的
    ID值到一个全局变量。然后，它将继续为粒子类型设置所有的属性。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">回来了。<a href="Particle_Actions.htm">粒子行动</a></div>
        <div style="float:right">下一个。<a href="Destroy_Particle_Type.htm">破坏粒子类型</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Action - Create Particle Type
-->
  <!-- TAGS
action_part_type_create
-->
</body>
</html>