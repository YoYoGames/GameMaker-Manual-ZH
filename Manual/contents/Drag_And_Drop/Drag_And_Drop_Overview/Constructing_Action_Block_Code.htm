<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>构建动作块代码</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
    <script src="../../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Mark Alexander" />
    <meta name="topic-comment" content="Article explaining how to construct GML Visual actions" />
    <meta name="rh-index-keywords" content="GML Visual Overview - Constructing Action Block Code" />
    <meta name="search-keywords" content="GML Visual Comments" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1>构建动作块代码</h1>
    <p>要将行为添加到<span class="notranslate">objects</span> ，你可以使用<strong>动作工具箱</strong>中不同库的<strong>动作 </strong>来构建你的代码。首先，你需要建立一个<a href="../../Introduction/The_Start_Page.htm">新的<span class="notranslate">GML</span> Visual项目</a>，然后建立一个新的<a href="../../The_Asset_Editors/Objects.htm">对象</a>（如果需要，你也可以给<span class="notranslate">object</span> 分配一个<a href="../../The_Asset_Editors/Sprites.htm">精灵</a>）。在你的新<span class="notranslate">object</span> ，你可以开始添加 <a href="../../The_Asset_Editors/Object_Properties/Object_Events.htm"><span class="notranslate">events</span></a>，并在事件中添加你的<span class="notranslate">GML</span> Visual代码动作。</p>
    <p><img>注意，当你添加一个新的事件时，一个 &quot;代码 &quot;窗口会被打开，其中有一个给定事件的标签（见上图），你现在可以从右边的工具箱中拖动任何你想要的动作到代码窗口的动作块窗格中。现在，虽然你确实可以添加任何动作，但这并不意味着它们都能工作，也不意味着项目会用它们进行编译。有些动作需要至少一个<a class="glossterm" data-glossterm="变量" href="#">变量</a>才能工作，而其他动作--如<a href="../Drag_And_Drop_Reference/Drawing/Drawing_Actions.htm">绘图</a>动作--只有在特定事件中使用才能工作。你怎么知道要使用哪些动作？嗯，一般来说，这只是一个使用逻辑的问题......如果一个动作需要一个变量，而我们还没有定义一个变量，那么我们就不应该使用它，直到我们添加一个动作来创建这个变量。</p>
    <p>当你从工具箱中拖动一个动作到主动作块<span class="notranslate">workspace</span> ，它将展开显示可用的<span class="glossextra">参数</span>（参数），你可以填入并改变这些参数来设置行为。在下面的图片中，我们从工具箱的<a href="../Drag_And_Drop_Reference/Common/Common_Actions_Library.htm">公共库中</a>拖动了一个<a href="../Drag_And_Drop_Reference/Common/Assign_Variable.htm">分配变量</a>的动作到动作块工作区。</p>
    <p><img>你可以看到，新的动作也以速记的形式显示在代码窗口的左边。这个动作列表被称为动作概览，可以点击它来快速导航到该动作进行编辑。如果需要，你可以继续向事件添加动作，每个新动作都与前一个动作 &quot;连锁&quot;，以显示你正在构建的<span class="notranslate">GML</span> Visual代码的流程。请注意，在初始动作的下方，你可以添加其他动作的区域被高亮显示，而且，根据你使用的动作，不同的区域会高亮显示你可以在链中添加它。</p>
    <p><img>当你把动作添加到<span class="notranslate">workspace</span> ，它们将被 &quot;连锁 &quot;到上面的动作，所以你可以看到<span class="notranslate">GML</span> Visual代码是如何流动的，一个动作导致另一个动作，概览窗格以速记的形式和执行的顺序显示它们。</p>
    <p><img>有些动作将把代码放在远离主流程的单独链中--像<a href="../Drag_And_Drop_Reference/Common/If_Variable.htm">If Variable</a>这样的东西将创建一个动作<em>子链</em>，如果满足正确的条件，在继续主链之前就应该发生。</p>
    <p><img>请注意，当使用像这样可以有侧链块的动作时，该动作会有<em>两个 </em>区域高亮显示，用于丢弃进一步的动作。</p>
    <ul class="colour">
      <li>一个人在下面的行动是正常的</li>
      <li>在动作的右边有一个，表明你想创建一个单独的动作块，在第一个动作的条件返回为真时运行。</li>
    </ul>
    <p><img>你可以通过简单地点击<img> ，并把它们拖到你所需要的新位置，来改变动作在链内的位置。如果你做一个点击<img> ，并保持一秒钟，然后移动鼠标，你可以在<span class="notranslate">workspace</span> ，同时保持它在动作块链内的位置。</p>
    <p>还可以在<span class="notranslate">GML</span> 视觉行动中添加<strong>注释</strong>，因此你可以在不同的块旁边留下注释，解释它们的作用（这在团队工作中特别有用）。</p>
    <p><img>你可以从 "<a href="Right_Mouse_Button_Menu_Options.htm">鼠标右键菜单</a>"的页面上了解到更多关于这个功能的信息。</p>
    <p>这就是使用<span class="notranslate">GML</span> Visual代码编辑器的基本情况，但还有一些重要的细节在下面的章节中解释。</p>
    <p> </p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">目标变量</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p class="dropspot">值得注意的是，许多行动提供了一个 &quot;目标 &quot;变量，例如，可以标记为 &quot;临时&quot;。</p>
      <p class="dropspot"><img>这意味着你可以提供一个变量，这个变量是保存动作返回值的目标。在上面的例子中，动作将返回你选择的音频资源的音量，所以你提供了一个目标变量来保持这个值，以便你以后可以引用它。</p>
      <p class="dropspot">现在，这个目标变量需要事先使用<a href="../Drag_And_Drop_Reference/Common/Assign_Variable.htm">Assign Variable</a>（创建一个<strong>实例变量</strong>）或<a href="../Drag_And_Drop_Reference/Common/Declare_Temporary_Variable.htm">Declare</a>Temporary Variable（创建一个<strong>本地临时变量</strong>）进行声明。如果你选中了 &quot;Temp &quot;选项，那么你可以简单地添加一个变量名，动作将创建该变量并将其设置为保存返回值（创建一个本地临时变量）。此后使用的任何动作现在都可以访问临时变量中的值，<strong>但只能在同一事件或脚本中</strong>使用。临时变量只能在它们被创建的范围内使用。关于变量和变量范围的更深入的信息，请看<a href="../../GameMaker_Language/GML_Overview/Variables_And_Variable_Scope.htm">这里</a>。</p>
      <p class="dropspot"> </p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">行动范围</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p class="dropspot">不仅变量有作用域（见上面的<strong>目标变量 </strong>部分），动作也可以有不同的作用域。事实上，几乎所有的动作都可以被赋予一个不同的作用域，从动作本身打开的下拉窗口中设置，如图所示。</p>
      <p class="dropspot"><img>你还可以使用特殊的动作<a href="../Drag_And_Drop_Reference/Common/Apply_To...htm">Apply to为</a>所有进一步的动作设置范围。关于<span class="notranslate">GML</span> 视觉动作的这一特点的更多信息，请看这里。</p>
      <ul class="dropspotlist">
        <li class="dropspot"><a href="Applying_Actions_To_Other_Instances.htm">将行动应用于其他实例</a></li>
      </ul>
      <p class="dropspot"> </p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">汽车整车</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p class="dropspot">在使用<span class="notranslate">GML</span> Visual时，你将不得不把变量和表达式添加到动作的不同输入字段中。然而，当你这样做时，你会经常弹出<strong>自动完成</strong>窗口来帮助你。</p>
      <p class="dropspot"><img>这个弹出的窗口将列出所有内置的<span class="notranslate">GML</span> (<span class="notranslate">GameMaker Language</span>) 变量、常量和函数，以及任何包含你所输入内容的首字母的资源。它可以用来快速找到你想要的资源或变量，而不必自己全部输入。例如，如果你的所有<span class="notranslate">rooms</span> 的前缀是 &quot;<span class="inline">rm_</span>&quot;，那么键入该词并等待片刻，就会在自动完成窗口中显示所有以 &quot;<span class="inline">rm_</span>&quot;开头的<span class="notranslate">assets</span> 。请注意，所有显示在自动完成窗口中的内置变量都可以在行动中预期的变量或表达式的任何地方使用，大多数<span class="notranslate">GML</span> 函数也是如此。</p>
      <p class="dropspot"> </p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">行动扩展</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p class="dropspot">有时在使用一个动作时，你会看到边上有一个小的加号图标<img> 。这意味着你可以扩展该动作以执行额外的任务或接受更多的参数。例如，如果你看一下<a href="../Drag_And_Drop_Reference/Common/Declare_Temporary_Variable.htm">声明临时变量</a>的动作，你可以看到它有这个图标。</p>
      <p class="dropspot"><img>当你点击该图标时，该动作将<em>展开 </em>并允许你声明更多的变量，使你更容易和更快地同时定义多个变量。</p>
      <p class="dropspot"><img>该图标也可用于那些需要<strong>可选的 </strong>参数的动作，如<a href="../Drag_And_Drop_Reference/Random/Choose.htm">选择</a>动作，它允许你添加各种不同的值来返回。</p>
      <p class="dropspot"><img alt="GML Visual Create Event" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Overview/DnD_Create_Event.png"/></p>
    </div>
    <p> </p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">返回:<a href="../../Content.htm">索引</a></div>
          <div style="float:right">下一步。<a href="Applying_Actions_To_Other_Instances.htm">将操作应用于其他实例</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
    </div>
    <!-- KEYWORDS
GML Visual Construction
--><!-- TAGS
drag_and_drop_construction
--></body>
</html>