<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频播放</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Playback async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Playback Event" />
  <meta name="search-keywords" content="Audio Playback,ev_audio_playback" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频播放</h1>
  <p><img>这个事件只能由<a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm">音频队列</a>播放功能触发，并将返回一个存储在变量 <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"> <span class="inline">async_load</span></a>,
    包含与触发该事件的音频<span class="notranslate">queue</span> 有关的不同键/值对。当你选择了一个要播放的音频<span class="notranslate">queue</span> ，并且该音频 中的一个 ，就会通过<a class="glossterm" data-glossterm="回调" href="#">回调</a>触发该事件。
    <span class="notranslate">buffer</span> ，并且该音频<span class="notranslate">queue</span> 已经播放完毕。</p>
  <p>在DS地图中会有以下按键。</p>
  <ul class="dropspotlist">
    <li class="dropspot"> <span class="notranslate">queue</span> &quot;<span class="inline">queue_id</span>&quot; - 已经播放完毕的<span class="notranslate">queue</span> 的索引，由函数返回。 <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm"><span class="inline">audio_create_play_queue()</span></a>.</li>
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - 不再播放的<a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">缓冲区</a>的<span class="notranslate">buffer</span> ID。</li>
    <li class="dropspot">&quot;<span class="inline">queue_shutdown</span>&quot; - 在正常播放时被设置为0，在收到事件时被设置为1，因为 <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm"><span class="inline">audio_free_play_queue()</span></a>已经被调用
      被调用。当它被设置为1时，你不希望再<span class="notranslate">queue</span> ，任何数据。</li>
  </ul>
  <p>由于一个音频<span class="notranslate">queue</span> ，可以由多个<span class="notranslate">buffers</span> ，当每段缓冲音频结束时，这个事件可以对一个<span class="notranslate">queue</span> ，触发多次，因此有 &quot;buffer_id &quot;键。</p>
  <p class="note"><strong>注意</strong>：变量<span class="inline" style="font-size: 14px">async_load</span>只在异步事件中有效，因为它所指向的DS图在事件开始时被创建，然后在事件结束时再次删除，这个
    然而，所有从事件中创建的进一步的数据结构必须使用适当的函数进行清理。</p>
  <p>在下面给出的使用例子中，我们将创建一个音频<span class="notranslate">queue</span> ，并在其中添加10个缓冲的音频声音，然后播放队列。</p>
  <p class="code">audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br/> for (var i = 0; i &lt; 10; i++;)<br/>    {<br/>    audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br/>    }<br/> audio_play_sound(audio_queue,
    0, true);</p>
  <p>现在检测到录音的每个游戏步骤都会触发一个异步音频录音事件，你可以像这样处理录音的输入。</p>
  <p class="code">var queue = async_load[? &quot;queue_id&quot;];<br/> var num = 0;<br/> if queue = audio_queue<br/>    {<br/>    for (var i = 0; i &lt; 10; i++;)<br/>       {<br/>       if async_load[? &quot;buffer_id&quot;] == audio_buffer[i]<br/>          {<br/>  buffer_seek(audio_buffer[i],
    buffer_seek_start, 0);<br/>          num = i;<br/>          }<br/>       }<br/>    if num == 9<br/>       {<br/>       audio_stop_sound(audio_queue);<br/>       audio_free_play_queue(audio_queue);<br/>       }<br/>  }
  </p>
  <p>这里我们检查<span class="notranslate">queue</span> ID，如果它是我们想要的，我们再检查<span class="notranslate">buffer</span> ID，看看哪个<span class="notranslate">buffer</span> 已经播放完毕。我们还设置一个本地var到该索引值，以便以后检查，并将<span class="notranslate">buffer</span> 回到该声音的开始位置。
    声音。一旦我们的局部变量达到9，表明<span class="notranslate">queue</span> 已经结束，我们就停止声音的播放，释放<span class="notranslate">queue</span> 。</p>
  <p> </p>
  <div class="droptext" data-targetname="drop-down"> </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Async_Events.htm">异步事件</a></div>
        <div style="float:right">下一步。<a href="Audio_Recording.htm">音频记录</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Playback Event
ev_audio_playback
Audio Playback
-->
  <!-- TAGS
ev_audio_playback
-->

</body></html>