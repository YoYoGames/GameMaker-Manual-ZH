<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>音频录制</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Recording async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Recording Event" />
  <meta name="search-keywords" content="Audio Recording,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>音频录制</h1>
  <p><img>这个事件只能由 <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a>函数触发，并将返回存储在变量中的DS Map。
    触发，并将返回一个存储在变量中的<a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    包含不同的键/值对，取决于触发该事件的函数的<a class="glossterm" data-glossterm="回调" href="Dialog.htm#">回调</a>。</p>
  <p>在ds_map中会有以下的键。</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - 临时<a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">缓冲区</a>的ID，你可以用来检索音频数据。</li>
    <li class="dropspot">&quot;<span class="inline">channel_index</span>&quot; - 由调用函数返回的记录通道索引，该数据来自于此。</li>
    <li class="dropspot">&quot;<span class="inline">data_len</span>&quot; - 你收到的数据长度（字节）。</li>
  </ul>
  <p class="note"><strong>注意</strong>：正如本页开始时提到的，变量<span class="inline" style="font-size: 14px">async_load </span>只在异步事件中有效，因为它所指向的DS地图是在事件开始时创建。
    然后在结束时再次删除。然而，请注意，临时的<span class="notranslate">buffer</span> ，其中所有的音频与地图一起被存储，也会在事件结束时被删除，所以如果你想保留它供以后使用，你应该把它复制到一个自定义的<span class="notranslate">buffer</span> 。</p>
  <p>在下面的使用例子中，我们将创建一个自定义的<span class="notranslate">buffer</span> ，以存储我们录制的音频，同时将我们的游戏设置为从输入源0录制。</p>
  <p class="code">channel_index = audio_start_recording(0);<br/> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>现在检测到录音的每个游戏步骤都会触发一个异步音频录音事件，你可以像这样处理录音的输入。</p>
  <p class="code">var channel = async_load[? &quot;channel_index&quot;];<br/> if channel == channel_index<br/>    {<br/>    len = async_load[? &quot;data_len&quot;];<br/>    buffer_copy(async_load[? &quot;buffer_id&quot;], 0, len, audio_buffer, 0);<br/>    }</p>
  <p>在这里，我们简单地检查 &quot;channel_index &quot;键，以确保它与我们开始录制时返回的值相符，如果相符，我们就把为这个事件创建的临时<span class="notranslate">buffer</span> 的内容复制到我们的自定义<span class="notranslate">buffer</span> 。之后，你可以
   <span class="notranslate">buffer</span> 做你想做的事--你可以用专用的<span class="notranslate">buffer</span> 音频功能播放它，你可以处理它并通过网络发送，你可以把它保存到磁盘上......一旦你把录制的音频放在<span class="notranslate">buffer</span> ，你基本上可以做你想做的任何事情。
    任何你想要的东西。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Async_Events.htm">异步事件</a></div>
        <div style="float:right">下一步。<a href="Cloud.htm">云</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>