<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>物理学对象</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing object physics" />
  <meta name="rh-index-keywords" content="Objects - Physics" />
  <meta name="search-keywords" content="Object Physics,Physics,fixtures,binding,physics shape editor,shape editor,physics properties" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>物理学对象</h1>
  <p>当你第一次创建一个新的<span class="notranslate">object</span> 资源时，有一个标有 "<strong>使用物理学</strong>"的复选框，它在默认情况下<em>没有 </em>被选中。选择这个选项将从根本上改变你的<span class="notranslate">object</span> 的行为，当它的一个实例被放置在
    在一个<span class="notranslate">room</span> ，因为这将打开对象的物理属性，并意味着它的 &quot;传统 &quot;运动和碰撞功能不再有效（但只有当它被放置的<span class="notranslate">room</span> 也被标记为一个物理<span class="notranslate">room</span> 。见
   <a href="../Room_Properties/Room_Properties.htm">房间编辑器属性</a>"一节）。当你选中这一点时，<span class="notranslate">object</span> 资源窗口就会为物理编辑器打开一个新的链式窗口。</p>
  <p><img>在你开始编辑物理行为的值之前，最好先设置一下<strong>碰撞形状</strong>。
   <span class="notranslate">sprite</span> 在 &quot;正常 &quot;的碰撞系统中，你的碰撞是基于分配给<span class="notranslate">object</span> 的掩码，但在启用物理学的情况下，情况就<strong>不再</strong>是这样了。我们需要为<span class="notranslate">object</span> ，指定一个碰撞<strong>形状</strong>（这被正确地称为<strong>夹具</strong>，更多信息见<a href="../../GameMaker_Language/GML_Reference/Physics/Physics.htm">物理功能</a>），它可以是一个圆、一个矩形或一个你自己定义的多边形。
    形状，它可以是一个圆形、一个矩形或一个你自己定义的多边形。点击 "<strong>修改碰撞形状</strong>"按钮将打开下面的链式窗口来编辑这个形状。</p>
  <p><img>这看起来与<a href="../Paths.htm">路径编辑器</a>相似，功能也基本相同。然而，根据
    你所选择的掩码，它可以有更多的限制。</p>
  <ul class="colour">
    <li>如果你有一个<strong>圆形 </strong>面具，那么你只能拉动任何一个<span class="notranslate">path</span> 点，使圆的直径变大或变小</li>
    <li>如果你有<strong>矩形 </strong>掩码，那么你可以移动四个角中的任何一个，但相应的角会自动调整位置，以始终保持一个矩形。</li>
    <li>如果你有一个<strong>自定义 </strong>（多边形）掩码，它必须有最少3个、最多8个点，而且必须是凸形的（见下图）。</li>
  </ul>
  <p><img>一旦你建立了你的形状，你就需要定义你的<span class="notranslate">object</span> 的基本物理属性。这些
    是通过改变以下参数来配置的。</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">密度</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p class="dropspot">某物的密度被定义为其每单位体积的质量，这基本上意味着有多少质量被塞进它在世界所占的空间。因此，一个气球的密度很低，因为它的质量很小，却占据了很大的空间，而
      铅条的密度很高，因为它的质量很大，但占用的空间很小。在<span data-keyref="GameMaker Name">GameMaker</span>的2D物理世界中，质量是由你输入的密度值和你定义的夹具的表面积自动计算出来的。
      形状来计算。这将直接影响到灯具的惯性以及它对碰撞和力的反应，所以如果你做一个高密度的小形状，它的质量会非常大（就像一根
      铅），但如果你用低密度定义一个大的形状，它的质量就会小得多（像一个气球）。</p>
    <p class="dropspot">注意，将密度设置为0将创建一个 &quot;静态 &quot;的夹具，它的密度基本上是无限的，不会受到外力或碰撞的影响，除了在实例被创建为<strong>运动学</strong>的特殊情况下（见
      更多细节见下文）。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">复原</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <p class="dropspot">在物理学中，恢复被定义为 &quot;一个<span class="notranslate">object</span> 或系统在弹性变形后恢复到原来的状态&quot;，但由于<span data-keyref="GameMaker Name">GameMaker</span>中的夹具是真正的刚性体，不能变形，恢复实际上是
      是说夹具的 &quot;弹跳 &quot;程度。这个设置将影响一个<span class="notranslate">object</span> 与其他<span class="notranslate">objects</span> 碰撞时的 &quot;弹跳 &quot;程度，并且与作用在实例上的其他力（如重力和摩擦力）共同决定。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">碰撞组</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">默认情况下，所有物理学<span class="notranslate">objects</span> 的碰撞组是0，这意味着它们将像正常一样互动，这又意味着它们<strong>必须有一个碰撞事件才能互动</strong>（一个简单的注释就可以触发碰撞），否则
      没有碰撞将被注册。然而，你也可以指定一个<span class="notranslate">object</span> 应该属于一个特定的、编号的<strong>碰撞组</strong>。通过将<span class="notranslate">objects</span> 分配到一个<em>正的 </em>碰撞组（即：三个<span class="notranslate">objects</span> 都在组内
      &quot;<strong>2</strong>&quot;），你就是在告诉<span data-keyref="GameMaker Name">GameMaker</span>，这些<span class="notranslate">objects</span> 的实例应该<em>总是 </em>发生碰撞，即使它们的碰撞事件中没有任何东西，也要遵守你分配给它们的物理属性和
      他们所处的<span class="notranslate">room</span> 。相反，如果你有<span class="notranslate">objects</span> ，并有一个<em>负的 </em>碰撞组（即：四个<span class="notranslate">objects</span> 被分配为<strong>&quot;-1</strong>&quot;），你就告诉<span data-keyref="GameMaker Name">GameMaker</span>，这些实例<em>永远不 </em>应该碰撞，它们之间的任何碰撞事件都会被忽略。
      它们之间的任何碰撞事件都将被忽略。</p>
    <p class="note"><strong>注意</strong>：使用碰撞组极大地增加了物理系统所需的处理，应该只在绝对必要的时候使用，而且应该尽可能少地使用碰撞组。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">线性阻尼</a></p>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">阻尼用于降低实例在物理世界中的速度，因为它在<span class="notranslate">room</span> 。原则上，这就像在 &quot;真实 &quot;世界中对表面的摩擦，但在<span data-keyref="GameMaker Name">GameMaker</span>物理系统中，摩擦实际上是
      只有在两个具有碰撞形状（固定装置）的实例接触时才会应用。因此，你可以认为线性阻尼更像是 &quot;空气摩擦&quot;，随着时间的推移逐渐减慢任何移动的物理实例，而不需要与其他物理实例接触。
      任何其他物理实例的接触。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">角度阻尼</a></p>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">如果你想想 &quot;现实世界 &quot;中任何旋转的<span class="notranslate">object</span> ，除非它有一个马达或在太空中，否则由于外力的影响（如机械摩擦或与空气或水的摩擦），其旋转将随着时间的推移而减慢。
      的影响）。我们可以使用角度阻尼选项来模拟这种效果，降低物理世界中实例的旋转速度，因为如果没有它，任何旋转的实例都会继续无限地旋转。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">摩擦力</a></p>
  <div class="droptext" data-targetname="drop-down5">
    <p class="dropspot">摩擦力是抵制材料元素相互滑动的相对运动的力量，在<span data-keyref="GameMaker Name">GameMaker</span>的物理世界中，它被翻译成两个实例与物理夹具的碰撞造成的动量损失。
      因此，当两个实例发生碰撞时，它们的运动会受到这个值的影响，高的摩擦力会比低的摩擦力造成更大的动量损失。</p>
    <p class="dropspot"> </p>
  </div>
  <p> </p>
  <p>最后，有三个额外的选项可以为你的灯具标记为开或关，即<strong>传感器</strong>、<strong>开始唤醒</strong>和<strong>运动性</strong>。这些<span class="notranslate">flags</span> ，都会以下列方式改变灯具的行为
    方式。</p>
  <p> </p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">传感器</a></p>
  <div class="droptext" data-targetname="drop-down6">
    <p class="dropspot">勾选这个框，你就是告诉<span data-keyref="GameMaker Name">GameMaker</span>基本上 &quot;忽略 &quot;了<span class="notranslate">object</span> 的物理属性，但仍然返回一个与它周围的<span class="notranslate">objects</span> 的碰撞事件。通过这种方式，你可以有一个没有物理存在的实例
      在<span class="notranslate">room</span> ，但它可以对另一个实例（如玩家）的碰撞做出反应，并反过来做一些事情，如打开一扇门，或在<span class="notranslate">room</span> 的另一个地方触发某种行动。</p>
    <p class="note"><strong>注意</strong>：传感器夹具将<strong>只</strong>在碰撞<strong>第一次发生</strong>时触发碰撞事件，这意味着你不会在两个物体继续重叠时得到碰撞事件流（这就是传统上的
      发生的）。如果它们停止重叠，随后又重叠，就会有另一个碰撞事件被触发。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">开始醒着</a></p>
  <div class="droptext" data-targetname="drop-down7">
    <p class="dropspot">这在默认情况下是被选中的，代表灯具在开始时的初始 &quot;状态&quot;，<span class="notranslate">room</span> 。通常情况下，你希望它从一开始就处于清醒状态（即：参与物理世界），但有时这
      会导致某些不稳定和不必要的效果，因为物理模拟突然开始了。为了避免这些影响，你可以取消勾选这个<span class="notranslate">flag</span> ，实例在创建时将处于睡眠状态，并且它不会参与到
      它将不参与物理模拟，除非有东西对它采取行动。</p>
    <p class="dropspot">请注意，当物理实例不再处于任何运动状态或与任何其他物理实例进行交互时，它们将被标记为 &quot;睡眠&quot;。
      处于 "睡眠 "状态的实例只是目前没有被物理模拟完全处理的实例（这可以节省<a class="glossterm" data-glossterm="CPU开销" href="#">CPU</a>的开销）。</p>
    <p class="dropspot"> </p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">运动学</a></p>
  <div class="droptext" data-targetname="drop-down8">
    <p class="dropspot">在基于物理学的游戏中，会有某些情况下你想四处移动，但不希望受到重力等力的作用，也不希望受到与动态<span class="notranslate">objects</span> 碰撞产生的力的作用（例如，想想平台游戏中的移动平台）。
      例如平台游戏中的移动平台）。对于这样的<span class="notranslate">objects</span> ，只需将夹具的密度设置为0，就意味着物理学将假定<span class="notranslate">object</span> 是<strong>静态 </strong>的，它对任何东西都没有反应。然而，勾选这个框将
      使静态的<span class="notranslate">object</span> <strong>运动学 </strong>，虽然它仍然不受碰撞和重力等力量的影响，但它现在可以使用适当的变量进行移动或旋转（见 <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_x.htm"><span class="inline">phy_position_x</span></a>和
      <a href="../../GameMaker_Language/GML_Reference/Physics/Physics_Variables/phy_position_y.htm"><span class="inline">phy_position_y</span></a>，例如）。</p>
    <p> </p>
  </div>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Objects.htm"> <span class="notranslate">Object</span> 编辑</a></div>
        <div style="float:right">下一步。<a href="Object_Variables.htm">对象变量</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Physics Objects
-->
  <!-- TAGS
objects_physics
-->

</body></html>