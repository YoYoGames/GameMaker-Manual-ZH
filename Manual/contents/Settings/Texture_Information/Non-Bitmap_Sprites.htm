<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>非位图精灵</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section explaining non-bitmap sprites in GameMaker" />
  <meta name="search-keywords" content="SWF,Spine,skeleton animation,vector sprites" />
  <meta name="rh-index-keywords" content="Texture Goups - Non-Bitmap Sprites,SWF,Spine" />
</head>
<body>
  <h1>非位图精灵</h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span>支持<a class="glossterm" data-glossterm="位图" href="#">非位图</a> <span class="notranslate">sprites</span> ，形式为<a class="glossterm" data-glossterm="向量" href="#">矢量</a> <span class="inline">SWF </span>文件或<strong>Spine Skeletal Animation</strong>文件。这两种格式都有其优点和缺点，下面两节解释了如何将它们导入<a href="../../The_Asset_Editors/Sprites.htm">精灵编辑器</a>，以及关于它们的绘制方式的一些信息。</p>
  <h2>骨架动画<span class="notranslate">Sprites</span> (<span class="notranslate">Spine</span>)</h2>
  <p>使用骨架动画制作的<span class="notranslate">sprite</span> ，是指创建了一个基本的 &quot;骨架&quot;，并使用关键帧随时间移动骨架的组成部分来制作动画。然后，这个骨架从<a class="glossterm" data-glossterm="纹理图集" href="#">纹理图集中</a>被换成皮肤，所产生的动画以许多文件类型之一被导出。<span data-keyref="GameMaker Name">GameMaker</span>允许你导入这种类型的<span class="notranslate">sprite</span> ，只要它被导出为 <span class="inline">*.json</span> 格式的文件，并<em>在同一目录</em>下有正确关联的<span class="notranslate">texture</span> 图集文件（<span class="inline">*.atlas</span> ）和图像文件（作为 <span class="inline">*.png</span> ）。</p>
  <p><img>目前<span data-keyref="GameMaker Name">GameMaker</span> <strong>只能从<a href="http://esotericsoftware.com/">Spine</a></strong>程序制作的JSON格式文件中导入矢量图像，然而将它们导入程序的方法与添加普通位图图像的方法几乎相同。要添加一个骨架动画，你需要创建一个新的<span class="notranslate">sprite</span> ，这将带来标准的<strong>Load Sprite</strong>对话，只是在这里你需要确保你在底部的文件过滤器中选择了 <span class="inline">*.json</span> 。</p>
  <p><img alt="Spine UI" class="center" src="../../assets/Images/Settings/Spine_Example.png" /></p>
  <p>点击 &quot;加载 &quot;按钮将把骨架动画作为一个<span class="notranslate">sprite</span> ，添加到<a href="../../Introduction/The_Asset_Browser.htm">资产浏览器</a>中，在文件被处理的过程中会显示一个进度条。注意，根据文件的复杂性，这可能需要一两分钟。当处理完成后，你将返回到<span class="notranslate">sprite</span> 属性对话框，现在看起来像这样。</p>
  <p><img>一旦你导入了动画，你就可以设置碰撞属性，但请注意，你在这里只限于使用精确碰撞或边界框碰撞，而且骨架动画的碰撞数据是明确取自提供的数据。如果导入的文件中缺少数据，<span data-keyref="GameMaker Name">GameMaker</span>不会生成任何碰撞掩码，这意味着如果在用于创建被导入的图像的程序中没有正确设置掩码，你根本不会得到工作的碰撞。</p>
  <p class="note"><span class="note">注意</span>由于骨架动画的复杂性，在<span class="notranslate">sprite</span> 编辑器中显示的预览图像并不打算准确地代表你的动画，而是给你一个简单的图像，代表动画，以便在<span class="notranslate">room</span> 编辑器中进行可视化。</p>
  <p>与位图<span class="notranslate">sprites</span> 不同，导入的骨骼动画<span class="notranslate">sprite</span> <strong>不能</strong>以任何方式<strong>在编辑器中修改</strong>，但在<span class="notranslate">GameMaker Language</span> (<span class="notranslate">GML</span>) 中有许多函数可以用来改变皮肤，设置属性，以及控制动画的其他方面。你也不能为<span class="notranslate">texture</span> 设置任何<span class="notranslate">sprite</span> 选项，因为<span class="notranslate">GameMaker</span> 将使用提供的<span class="notranslate">texture</span> 图集，该图集是由生成<span class="notranslate">sprite</span> 的程序制作的。</p>
  <p>在导入骨架动画<span class="notranslate">sprites</span> ，你应该注意一些事情，其中最重要的是，由于技术原因，一些<span class="notranslate">sprite</span> 绘制和<span class="notranslate">sprite</span> 管理功能不被支持，特别是那些只绘制部分<span class="notranslate">sprite</span> ，或以某种方式 &quot;倾斜 &quot;位置的绘制功能（见各个 <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a>确切的细节见各个函数）。然而，基本的<span class="notranslate">sprite</span> 绘图功能和内置的<span class="notranslate">sprite</span> 变量都是完全支持的。除了这些函数和变量之外，你还可以使用特殊的 <span class="inline">skeleton_*</span> 函数来设置和改变动画属性，这些函数在关于<a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Skeletal_Animation.htm">骨骼动画</a>的参考章节中列出和解释。</p>
  <h2>矢量<span class="notranslate">Sprites</span> (SWF)</h2>
  <p>一般来说，<span class="notranslate">sprites</span> 中的所有<span class="notranslate">GameMaker</span> 都使用位图，虽然在内容上很灵活，但在内存使用变得令人望而却步之前，<span class="notranslate">sprite</span> 的大小和可能的帧数都有限制。矢量<span class="notranslate">sprites</span> ，通过存储和绘制不同的内容来解决这些限制：它们不是像素的网格，在缩放时可能会变得块状或模糊，而是使用矢量数学绘制成三角形，这些可以放大（或缩小）而不失去定义，如下图所示。</p>
  <p><img>为了帮助你直观地了解这是如何做到的，下面的图片是同一个矢量消防员<span class="notranslate">sprite</span> ，只是现在我们可以看到在<span data-keyref="GameMaker Name">GameMaker</span>中用来制作图片的多边形。</p>
  <p><img>然而，当涉及到游戏编程时，没有什么是免费的，矢量<span class="notranslate">sprites</span> ，这里的权衡是它们在绘制时比位图<span class="notranslate">sprites</span> ，更耗费CPU，而且这种速度差异随着被导入动画的复杂性增加而增加。另外，它们的内存使用量受其视觉复杂性的影响，不像位图<span class="notranslate">sprites</span> 。考虑到这一点，它们确实使添加大型动画图形成为可能，而使用传统的位图<span class="notranslate">sprites</span> 则是不可能的。</p>
  <p>在性能等式的另一面，由于矢量<span class="notranslate">sprites</span> ，只绘制绝对需要的像素（不像位图<span class="notranslate">sprites</span> ，它也 &quot;绘制 &quot;图像周围的空白空间），从GPU的角度来看，它们可能更便宜。另外，一般来说，矢量<span class="notranslate">sprites</span> ，比它们的位图对应物要小得多--对于上面的消防员例子，各种<span class="notranslate">sprite</span> 的尺寸如下。</p>
  <p class="code">Bitmap at 70x68 = 4x70x68 bytes x 12 frames = 223k<br />
    Vector = 54k</p>
  <p>如果你把精灵的分辨率提高四倍。</p>
  <p class="code">Bitmap at 280x272 = 4x280x272 bytes x 12 frames = 3570k<br />
    Vector = 54k</p>
  <p>因此，正如你所看到的，通过使用矢量<span class="notranslate">sprites</span> ，可以潜在地节省大量的内存，而且我们还有很大的潜力来节省未来的空间。</p>
  <p>目前<span data-keyref="GameMaker Name">GameMaker</span>对矢量<span class="notranslate">sprites</span> 。<em>只能 </em>从 <span class="inline">SWF</span> 格式文件中导入矢量图像。将它们导入程序的方法与添加普通位图图像的方法几乎相同。要添加一个矢量<span class="notranslate">sprite</span> ，创建一个新的<span class="notranslate">sprite</span> ，这将带来标准的加载<span class="notranslate">Sprite</span> 对话，但要确保你在底部的文件过滤器中选择了 <span class="inline">*.swf</span> 。</p>
  <p><img>点击 &quot;加载 &quot;按钮将把矢量图像或动画添加到<a href="../../Introduction/The_Asset_Browser.htm">资产浏览器</a>中，当文件被处理时将显示一个进度条。请注意，根据文件的复杂性，这可能需要一段时间（对于更复杂的动画，可能需要一分钟）。当处理完成后，你将返回到<span class="notranslate">sprite</span> 属性对话，现在看起来像这样。</p>
  <p><img> <span class="notranslate">sprite</span> 编辑器不会有什么变化，但现在<strong>编辑图像</strong>按钮已经变灰了，不能点击，因为在这种 ，没有任何位图可以编辑。其次，所有的 选项也变灰了。SWF 是基于数学的，因此通常没有与之相关的 ，所以可用的选项都不适用于这种 。<span class="notranslate">sprite</span> <span class="notranslate">texture</span> <span class="notranslate">sprites</span> <span class="notranslate">textures</span> <span class="notranslate">sprite</span></p>
  <p class="note"><span class="note">注意</span>图像在你选择的预览编辑器中的样子不会与它在游戏中的样子相同，也不会与它在<span class="notranslate">sprite</span> 编辑器的预览窗口中的样子相同。矢量图像将以创建时的尺寸导入，这不一定是预览时的尺寸（例如，浏览器通常会缩放图像以适应）。</p>
  <p><span class="notranslate">Sprite</span> 编辑器的一个新增功能是，你可以使用顶部的<strong>SWF精度</strong>滑块来设置绘制矢量<span class="notranslate">sprite</span> 的<em>质量 </em>。这将简单地减少或增加用于生成<span class="notranslate">sprite</span> 的三角形的数量--对于大多数游戏来说，通常50%左右的数值就足够了--然而，如果你使用极端的缩放，或有性能问题，你应该试验这个数值。</p>
  <p>在导入矢量<span class="notranslate">sprites</span> ，你应该注意一些事情，其中最重要的是，由于技术原因，一些<span class="notranslate">sprite</span> 绘图和<span class="notranslate">sprite</span> 管理功能不被支持，特别是那些只画出<span class="notranslate">sprite</span> 的一部分，或以某种方式 &quot;倾斜 &quot;位置的绘图功能（见个别的 <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a>确切的细节见各个函数）。然而，基本的<span class="notranslate">sprite</span> 绘图功能和内置的<span class="notranslate">sprite</span> 变量是完全支持的。你还可以使用函数 <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_enable_swf_aa.htm">draw_enable_swf_aa()</a></span> 、<span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_get_swf_aa_level.htm">draw_get_swf_aa_level()</a></span> 或 <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_set_swf_aa_level.htm">draw_set_swf_aa_level()</a></span> ，为正在绘制的SWF<span class="notranslate">sprites</span> 设置不同的<a class="glossterm" data-glossterm="抗锯齿" href="#">抗锯齿</a>（AA）值。</p>
  <p>你还应该注意以下几点。</p>
  <ul class="colour">
    <li>当导入一个 <span class="inline">*.SWF</span> 文件时，<em>不 </em>支持Actionscript，所以如果你的SWF依赖它来正常工作，那么它可能不会变成正确的。同样，任何有自己的<span class="notranslate">timeline</span> 的嵌入式电影剪辑，在整个动画中只显示其第一帧--所有的动画都必须在主<span class="notranslate">timeline</span> 。</li>
    <li>如果你的矢量文件有特别精细的细节，你可能偶尔会发现洞或奇怪的三角形会出现在生成的<span class="notranslate">sprites</span> 。这是因为在小比例下，几何体有时会坍缩在一起，形成不能很好三角化的形状。在这种情况下，你有两个选择--你可以放大矢量文件的内容，这将使导入器有更多的<span class="notranslate">room</span> ，或者你可以尝试减少<span class="notranslate">object</span> ，以减少细节的破坏。</li>
    <li><span data-keyref="GameMaker Name">GameMaker</span>使用SWF的舞台尺寸作为生成的<span class="notranslate">sprite</span> 的边界。然而，如果你在舞台上有任何东西在这些界限之外，它仍然被画出来。这意味着，如果你不希望它被显示出来，你应该尽量避免把任何东西放在舞台的边界之外，或者使用遮罩层来限制在这个区域内绘制。</li>
    <li>舞台的大小也会影响到生成的任何碰撞遮罩的大小，因此，如果你有一个大的舞台尺寸和你的动画中有很多帧，你就有可能吃掉很多内存。因此，只有在你真的需要时才使用精确的碰撞遮罩。</li>
    <li>由于SWF文件是由多个图层创建的，其中一些图层可能会重叠，因此阿尔法的工作方式与位图<span class="notranslate">sprites</span> ，重叠的区域看起来不会像<span class="notranslate">sprite</span> ，因为那里的像素被多次绘制，所以看起来不那么透明。</li>
    <li>支持位图填充<em>， </em>但如果你使用平铺的位图填充作为你的SWF文件的一部分，你需要确保位图的大小是2的幂，否则它将无法正常<span class="notranslate">tile</span> 。也支持文本渲染，但你需要将<span class="notranslate">font</span> 嵌入到你的SWF文件中，以便在生成的<span class="notranslate">sprite</span> 。另外，目前只支持左对齐的单行文本。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Texture_Groups.htm">纹理组</a></div>
        <div style="float:right">下一个。<a href="Texture_Pages.htm">纹理页</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
</body>
</html>