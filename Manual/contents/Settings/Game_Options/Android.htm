<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>安卓</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that details the Android Game Options" />
  <meta name="rh-index-keywords" content="Game Options - Android" />
  <meta name="search-keywords" content="Android Game Options" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>安卓游戏选项</h1>
  <p>本节概述了可供你使用的不同选项，这些选项控制你的<span class="notranslate">Android</span> 游戏项目的编译方式。这些不同的部分是</p>
  <p> </p>
  <h2>一般</h2>
  <p><img><strong>常规 </strong>部分的第一部分是关于<strong>产品信息</strong>和<strong>构建设置</strong>的。你应该填写产品信息，其中包括项目的<strong>显示名称</strong>，它的包信息，其中包括一个<strong>域名</strong>，<strong>公司 </strong>和<strong>产品</strong>。包装信息只能由A-Z字母和0-9数字组成，不能有符号或其他特殊字符，也不能有大写字符。这些细节将被用来生成一个格式为 &quot;<span class="inline">com.company.myappname</span>&quot;的包裹ID。</p>
  <p>然后你需要设置<strong>构建工具</strong>以及<strong>目标</strong>、<strong>最小 </strong>和<strong>编译SDK</strong>版本。</p>
  <p class="note"><strong>注意</strong>：还有一个选项是使用<strong>&quot;支持库</strong>&quot;的版本。从<span data-keyref="GameMaker Name">GameMaker</span>v2.2.4及以上版本开始，这不再是必需的，这里使用的任何值都将被忽略。保留这个设置是为了用于需要比 2.2.4 更早的<span class="notranslate">runtime</span> 的传统项目。</p>
  <p>当<span data-keyref="GameMaker Name">GameMaker</span>为Android目标构建你的游戏时，会用到构建工具（如果需要的话，还有支持库），应该根据你使用<span class="notranslate">Android</span> Studio安装的工具设置为适当的值。</p>
  <ul class="colour">
    <li><strong>目标SDK</strong>表示您已经在您指定的版本上测试了您的应用程序（包括并不包括）。这只是为了让<span class="notranslate">Android</span> 操作系统了解它应该如何处理你的应用程序的操作系统功能。为了所有的实际目的，大多数应用程序都希望将目标SDK设置为最新发布的API版本（正如编译SDK设置所使用的）。这将确保你的应用程序在最新的<span class="notranslate">Android</span> 设备上看起来尽可能的好。请注意，从2019年11月起，谷歌已将API级别28作为必要的目标。</li>
    <li><strong>最低SDK</strong>版本是指能够运行你的项目的最低API水平。从2019年11月起，谷歌将API级别16作为绝对最低要求，但如果你添加<span class="notranslate">extensions</span> ，那么它们可能需要更高的最低API级别。</li>
    <li><strong>编译SDK</strong>的版本是项目被编译的API的版本。这意味着你可以使用该版本的API中包含的<span class="notranslate">Android</span> API功能。如果你试图使用API 16的功能--例如--但设置了Compile SDK 15，那么你会得到一个编译错误。然而，如果你把编译SDK设置为28，那么你仍然可以在API 26设备上运行该应用程序（以及所有其他以前的版本）。</li>
  </ul>
  <p>您可以通过点击<strong>预先填充SDK</strong>值到所选的API级别按钮，从预定义的目标设置中选择一个，这将打开一个不同的API列表供您选择。选择其中任何一个，都会在所有的SDK文件中填入适当的数值，然后您可以根据需要使用或编辑。</p>
  <p class="note"><strong>注意</strong>：你必须在<span class="notranslate">Android</span> SDK Manager中或通过<span class="notranslate">Android</span> Studio安装了相应的API，你的项目才能正确编译。</p>
  <p><img alt="General Android Game Options 1" class="center" src="../../assets/Images/Settings/Android_General1_Options.png" /></p>
  <p><strong>常规</strong>部分的第二部分包括为CPU架构进行构建，有以下选项（你可以选择所有这些选项或只选择你需要的选项，但注意每个选项都将增加编译后的apk的最终大小）。</p>
  <ul class="Disc">
    <li>为ARMV5构建（默认选中）。</li>
    <li>为ARMV7构建（默认勾选）。</li>
    <li>为x86构建（默认勾选）。</li>
    <li>为Mips构建（默认勾选）。</li>
    <li>为ARM64构建</li>
    <li>为x86_64构建</li>
  </ul>
  <p>设置之后，你可以选择你的游戏可以运行的不同方向，以获得最佳的用户体验。可用的选项是。</p>
  <ul class="Disc">
    <li>形象代言人</li>
    <li>纵向翻转的</li>
    <li>景观</li>
    <li>景观翻转</li>
  </ul>
  <p>最后，你有以下杂项选项。</p>
  <ul class="colour">
    <li><strong>启用蓝牙/iCade支持</strong>。这将为你的游戏项目添加对蓝牙或iCade游戏手柄的支持。这在默认情况下是打开的。</li>
    <li><strong>运行Lint代码分析</strong>。当这个选项被标记时，构建工具将在项目构建时运行lint代码分析，提供更深入的错误检查，并在项目编译时在输出窗口显示更多信息（也将创建一个LOG文件，在<a href="../../Introduction/The_Output_Window.htm">输出窗口</a>中显示编译结束后的文件<span class="notranslate">path</span> ）。请注意，并不是所有被lint分析标记为错误的东西对你的游戏来说都是有问题的，启用这个功能可能意味着你的游戏不再编译，尽管当它被关闭时，它可以正常编译和运行。基本上，这只适用于<span class="notranslate">debugging</span> ，该选项默认为关闭。</li>
    <li><strong>安装位置</strong>。在这里你可以为你的游戏设置默认的安装位置。这可以设置为<strong>自动</strong>，在这种情况下，游戏将被安装到用户在其设备上选择的位置，或者可以设置为<strong>首选外部</strong>，这将总是尝试将游戏安装到设备的外部存储。</li>
  </ul>
  <p>你也可以在这里设置安卓<strong>睡眠保证金</strong>。这个选项与减少在特定系统上运行你的游戏时的卡顿有关。基本上，如果你的游戏运行速度比你的<span class="notranslate">room</span> 速度快，<span data-keyref="GameMaker Name">GameMaker</span>将 &quot;睡眠 &quot;剩余的时间，但这种睡眠可能是相当不准确的，你往往可以结束睡眠超过必要的时间，导致你的帧需要更长的时间，从而导致卡顿。为了解决这个问题，我们可以减少睡眠时间，然后在剩下的时间里坐在一个紧密的<span class="notranslate">loop</span> ，使其更加准确--尽管坐在一个<span class="notranslate">loop</span> ，问题是它会导致CPU使用率增加，这反过来会导致你的CPU温度上升，你的设备使用更多的电池。默认情况下，这个值被设置为4，在99.99%的情况下，你会对这个值感到满意，但对于低端设备或有大量后台进程运行的设备，这可能不是一个理想的解决方案，可能需要一个5到10的值。请注意，这是一个非常具体的设备配置，在你的设备上运行的配置可能不适合其他用户，因此，如果有疑问，请将其设置为4。</p>
  <p> </p>
  <h2>自适应图标</h2>
  <p><img>安卓8.0（API级别26）为你的游戏引入了<strong>自适应启动器图标</strong>，这些图标可以在不同设备型号上显示各种形状。为了处理这个问题，你需要为你的图标提供一些前景和背景图片，以便以不同的尺寸显示。这些图标的尺寸是：。</p>
  <ul class="Disc">
    <li>81x81像素（LDPI）</li>
    <li>108x108像素MDPI)</li>
    <li>162x162像素（HDPI）</li>
    <li>216x216像素(XHDPI)</li>
    <li>324x324像素（XXHDPI）。</li>
    <li>432x432像素（XXXXDPI）。</li>
  </ul>
  <p>你可以单独提供每个背景图像，或者你可以选择从文件生成图标。这意味着<span data-keyref="GameMaker Name">GameMaker</span>将从一个基础文件（XXXHDPI）生成所需的图标图像。你需要为前景和背景各提供一张图片，然后点击标记为 "生成 "的按钮，图标就会为你创建。图像应全部为 <span class="inline">*.png</span> 。</p>
  <p>重要的是要明白，你的自适应图标在任何给定的设备上都可能被屏蔽，因此你也可以选择在<strong>预览自适应图标</strong>菜单中查看它们与这些屏蔽一起的外观。</p>
  <p><img>请注意，这只是对图标在选定的遮罩下<em>的 </em>外观的预览，设置不会影响图标的导出和显示方式，因为这取决于游戏运行的设备和操作系统。还要注意的是，这些图标<strong>不是</strong>在使用<a href="../../IDE_Tools/Project_Image_Generator.htm">项目图像生成</a>工具时作为图像生成的一部分为你创建的。</p>
  <p> </p>
  <h2>图形</h2>
  <p><img>在这里，你可以改变与你的游戏如何显示有关的以下细节，有以下选项可供选择。</p>
  <ul class="colour">
    <li><strong>在像素之间进行颜色插值</strong>。打开<a class="glossterm" data-glossterm="线性内插">线性插值</a>，这基本上是 &quot;平滑 &quot;像素。对于清晰的像素图形，它应该是关闭的，但如果你有漂亮的阿尔法混合和平滑的边缘图形，它最好是打开。这在默认情况下是打开的。</li>
    <li><strong>屏幕颜色深度</strong>。这可以用来设置渲染的颜色深度为16bit或24bit。如果设置为24bit，这将影响与一些旧设备的兼容性，同时也会增加所需的<em>ashmem </em>（这是AmazonFire设备上的共享内存）。</li>
    <li><strong>设备支持</strong>。这个选项将设置是否只支持有专用GPU的设备，或所有设备。基本上，如果你的游戏有任何先进的绘图功能，如阿尔法混合，加法混合，表面，等等......你应该将它限制在那些有GPU的设备上，否则你的游戏有可能因为图形错误或在旧设备上崩溃而得到负面评论和差评。</li>
    <li><strong>缩放</strong>。在这里，你可以选择缩放画布，保持设备屏幕内的长宽比--在边缘添加 &quot;填充 &quot;以适应屏幕，或者你可以选择让画布被拉伸以适应设备屏幕。</li>
  </ul>
  <p>最后是设置<a class="glossterm" data-glossterm="纹理页" href="macOS.htm#">纹理页</a>的大小的选项。默认（也是最兼容的）尺寸是2048x2048，但你可以从256x256到8192x8192之间的任何地方进行选择。还有一个标记为 "<strong>预览 </strong>"的按钮，它将为这个平台生成<span class="notranslate">texture</span> ，然后打开一个窗口，以便你能看到它们的样子。如果你希望看到<span class="notranslate">texture</span> 页面的结构，并防止<span class="notranslate">texture</span> 页面大于（或小于）所需，这可能非常有用。关于<span class="notranslate">texture</span> 页面的更多信息，请看<a href="../Texture_Information/Texture_Pages.htm">这里</a>。</p>
  <p class="note"><strong>注意</strong>：请注意，<span class="notranslate">texture</span> 页面的尺寸越大，你的游戏与不同浏览器和设备的兼容性就越差。</p>
  <p> </p>
  <h2>图标</h2>
  <p><img>本节允许你添加各种<strong>图标 </strong>图像，你的项目将需要不同的商店页面和设备。所有的图标图像都应该创建为24bit <span class="inline">*.png</span> 文件，并给出适当的尺寸。</p>
  <p>值得注意的是，<span data-keyref="GameMaker Name">GameMaker</span>有一个<a href="../../IDE_Tools/Project_Image_Generator.htm">项目图像生成器</a>工具，可以用来自动创建你的游戏被编译到的所有不同目标平台所需的所有图像。如果你使用这个工具，你应该修改创建的图像以确保它们是你所需要的。该工具将生成图标和图像（见下面的章节）。</p>
  <p> </p>
  <h2>图片</h2>
  <p><img>在这里你可以设置<strong>边框颜色</strong>，它将被用作没有被设置为充满整个屏幕的闪屏的背景。你也可以在你的最终游戏文件中添加<strong>闪屏</strong>，用于<em>横向 </em>和<em>纵向 </em>模式，这将在游戏加载到设备上时显示。这个屏幕应该是一个24bit的 <span class="inline">*.png</span> 文件，建议与你的游戏的第一个<span class="notranslate">room</span> （或视图）的大小相同。如果你要求闪屏显示一个特定的时间，那么你也可以在这里设置，从0到10秒不等（默认时间为0意味着它将只显示在<span class="notranslate">asset</span> 载入期间）。你还可以在以下选项中设置闪屏的显示方式。</p>
  <ul class="colour">
    <li><strong>保持长宽</strong>比。这将保持图像与设备屏幕相比的长宽比，在需要时在边缘添加 &quot;填充&quot;。</li>
    <li><strong>裁剪以适应</strong>。这将使图像与设备屏幕保持1:1，并根据需要裁剪（或填充）边缘。</li>
    <li><strong>伸展</strong>。这将拉伸图像以填满设备屏幕（并可能扭曲显示的图像）。</li>
  </ul>
  <p>最后你可以在<span class="notranslate">Android</span> 电视设备上设置游戏的<strong>Banner图像</strong>，这也是一个24bit<span class="inline">*.png</span> 。</p>
  <p> </p>
  <h2>包装</h2>
  <p><img alt="Android General Options Part 2" class="center" src="../../assets/Images/Settings/Android_General2_Options.png" /></p>
  <p>为你的<span class="notranslate">Android</span> 游戏使用Google Play的一个特点是能够对你的游戏进行<strong>授权 </strong>。这意味着你的游戏将由谷歌控制，只有通过他们的市场下载的人才能玩这个游戏，从而避免你的产品的非法拷贝被传播。</p>
  <p>要在你的游戏中激活这个功能，你需要把你的<strong>公钥</strong>复制到标有<strong>谷歌许可公钥</strong>的盒子里。这个许可证可以通过进入你的<a href="https://play.google.com/apps/publish">Google Play开发者页面</a>，然后选择你想编辑的游戏来找到。一旦进入游戏简介页面，向下滚动到题为<em>&quot;服务和API</em>&quot;的部分，你应该在那里找到启用该功能所需的公共密钥。</p>
  <p>一旦激活，如果任何未被授权拥有你的游戏的人试图玩它，他们将显示一个弹出的消息框，通知他们在他们的设备上找不到许可证，然后让他们选择重试和再次测试，或退出游戏。</p>
  <p>许可的另一个特点是，你的游戏可以使用<strong>APK扩展</strong>。这是一种绕过Google Play（而且只有Google Play）规定的50MB最大应用尺寸的方法。它将把你的游戏分成两部分：一个小的 <span class="inline">*.apk</span> 文件和一个较大的 <span class="inline">*.zip</span> 文件，该文件将容纳你所有的游戏<span class="notranslate">assets</span> ，这两个文件都上传到商店。当用户第一次运行你的游戏时，该压缩包将被下载并解压。你可以<a href="https://help.yoyogames.com/hc/en-us/articles/115002418632-Android-Using-APK-Expansions-With-Google-Play">在这里</a>找到这个选项的进一步细节。</p>
  <p>你也可以使用谷歌动态<span class="notranslate">Asset</span> ，在使用<span class="inline">*.aab</span> 输出选项时，创建大至1GB的应用包。这将所有游戏<span class="notranslate">assets</span> ，作为 &quot;安装时间 &quot;<span class="notranslate">assets</span> ，与应用程序本身一起安装。你可以<a href="https://developer.android.com/guide/playcore/asset-delivery" title="Asset Delivery">在这里</a>找到关于这个功能的进一步细节。</p>
  <p>最后，你可以选择将最终的应用包准备<strong>成安卓电视</strong>游戏（如果你的游戏符合<a href="https://developer.android.com/training/tv/games/">安卓电视指南</a>，你应该勾选这个选项）。</p>
  <p> </p>
  <h2>许可权</h2>
  <p><img>在这个标签中，你可以改变你的游戏在<span class="notranslate">Android</span> Manifest中可能要求的一些权限。<span data-keyref="GameMaker Name">GameMaker</span>会根据游戏使用的功能自动分配权限，但是你可能会发现你的游戏需要的权限没有被正确分配（例如，当你使用自定义<span class="notranslate">extensions</span> ），在这种情况下，勾选必要的权限。</p>
  <p>下面的清单概述了那些可用的权限。</p>
  <ul class="colour">
    <li><span class="inline">WRITE_EXTERNAL_STORAGE</span>:将允许你的游戏写到外部存储。</li>
    <li><span class="inline">READ_PHONE_STATE</span>:允许对电话状态进行只读访问。</li>
    <li><span class="inline">ACCESS_NETWORK_STATE</span>:允许你的游戏访问有关网络的信息。</li>
    <li><span class="inline">INTERNET</span>:允许你的游戏打开网络插座。</li>
    <li><span class="inline">BLUETOOTH</span>:将允许你的游戏连接到配对的蓝牙设备。</li>
    <li><span class="inline">RECORD_AUDIO</span>:将允许你的游戏记录来自麦克风的音频输入。</li>
  </ul>
  <p class="note"><strong>注意</strong>：如果你不确定你是否需要这些，你也许应该默认不勾选它们，让<span data-keyref="GameMaker Name">GameMaker</span>来处理你游戏的权限。</p>
  <p><span class="notranslate">Android</span> 权限部分也有一个区域，你可以将权限注入到 <span class="inline">Androidmanifest.xml</span> 的<strong>安卓应用标签</strong>中。你可以从<span class="notranslate">Android</span> 文档中找到可用标签的完整列表。</p>
  <ul class="colour">
    <li><a href="https://developer.android.com/guide/topics/manifest/application-element">安卓开发者。应用标签</a></li>
  </ul>
  <p>值得注意的是，对于目标API 28及以上版本，你将不再被允许使用 &quot;<span class="inline">http</span>&quot; 的任何外部网络调用--需要使用 &quot;<span class="inline">https</span>&quot; 来代替--除非你添加以下标签。</p>
  <p class="code">android:usesCleartextTraffic=&quot;true&quot;</p>
  <p> </p>
  <h2>社会</h2>
  <p><img>本节是为了在你的<span class="notranslate">Android</span> 游戏中启用不同的<strong>社交 </strong>功能。可以选择以下选项。</p>
  <ul class="colour">
    <li><strong>谷歌 - </strong> <strong>启用云存储</strong>。勾选此项将启用谷歌云存储，并将提示您从<a href="../../Introduction/The_Marketplace.htm">市场上</a>下载并安装相关的<span class="notranslate">extension</span> 。请参阅<a href="../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">异步函数</a>页面中的云端保存部分。</li>
    <li><strong>谷歌 - 谷歌服务ID</strong>。这允许你输入你的应用程序的谷歌服务ID。</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="../Game_Options.htm">游戏选项</a></div>
        <div style="float:right">下一页:<a href="iOS.htm">iOS</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Android Game Options
-->
  <!-- TAGS
android_options
-->
</body>
</html>