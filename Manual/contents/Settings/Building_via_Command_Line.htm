<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>通过命令行构建</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">通过命令行构建</h1>
    <p class="note"><span class="note"><strong>注意</strong></span>通过命令行构建可执行包只适用于特定的许可证，所以请查看<a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">此页面</a>以了解你的许可证是否支持该功能。对于所有其他许可证，你可以通过命令行运行和调试你的项目，没有任何限制。</p>
    <p>除了通过<span class="notranslate">IDE</span> 。 <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span>允许你通过一个命令行界面使用下面描述的许多选项和命令来构建你的项目。你可以用它来构建你的项目，通过运行一个批处理文件来测试和部署到多个平台，并通过自动化<span class="notranslate">server</span> ，如<a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>，来设置持续集成。</p>
    <p>这可以通过运行<span class="notranslate">runtime</span> 文件夹中的 <span class="inline">Igor.exe</span> 可执行文件并输入本页所列的选项和命令来实现。在<span class="notranslate">Windows</span> ，这将出现在<span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span> 文件夹中，在Mac上则在 <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span> 。</p>
    <p> </p>
    <h1>伊戈尔CI大厦</h1>
    <h2>设置</h2>
    <p>要在一台机器上设置CI构建，你将需要做以下工作。</p>
    <ul class="colour">
      <li>安装<span data-keyref="GameMaker Name">GameMaker</span>和所需的<span class="notranslate">runtimes</span> </li>
      <li>通过<span class="notranslate">IDE</span> ，为所需的目标建立项目，以确保它们工作正常。</li>
      <li>从命令行测试构建（见下面的例子）。</li>
      <li>创建一个批处理文件，在任务中完成你所要求的构建（从命令行测试）。</li>
      <li>建立一个CI环境（这取决于你将如何构建你的游戏）；我们建议使用<a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a></li>
      <li>设置你的CI任务，并确保所有的先决条件都已设置好（即<span class="notranslate">source control</span> 同步到你的项目上）</li>
      <li>将批处理文件挂到CI任务中，并在Jenkins环境中测试。</li>
    </ul>
    <h2>笔记</h2>
    <ul class="colour">
      <li>一些平台可能对你的文件长度有问题<span class="notranslate">paths</span> ，在这种情况下，你将需要在你的PC上 <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> 虚拟驱动器（像<span class="notranslate">IDE</span> ），然后再把它们传入你的命令中</li>
      <li>一些平台（特别是<span class="notranslate">Android</span> ）会在构建时自动<span class="inline">subst</span> ，所以你可能需要在出现错误时手动清理。</li>
    </ul>
    <h2>选择</h2>
    <p>以下是你在运行<strong>Igor </strong>可执行文件时可以使用的选项。</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">选项</th>
          <th style="">描述</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">用于检索许可证信息的用户文件夹
            <br>
            <br>
            在<span class="notranslate">Windows</span> ，这将是。<span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            在<span class="notranslate">macOS</span> ，这将是。 <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">运行时的根文件夹</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">完整的<span class="notranslate">path</span> 到项目的 <span class="inline">.yyp</span> 文件</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">要使用的<span class="notranslate">cache</span> 目录（默认为当前目录下的 <span class="inline">\cache</span> ）。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">要使用的临时目录（默认为 <span class="inline">c:\temp</span> ）。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">将被提取的输出目录；不要只指定一个目录，因为后面的条目总是被删除（例如：指定 <span class="inline">d:\game\output</span> ，将把游戏文件放在 <span class="inline">d:\game</span> ）。
            <br>
            <br>
            如果没有指定，将在与 <span class="inline">.bat</span> 文件（或命令运行的地方）相同的目录下创建一个名为 <span class="inline">output</span> 的目录，其中包含提取的构建文件。 </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">创建的ZIP文件或NSIS安装程序的实际文件名。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">要使用的配置的名称（默认为 <span class="inline">Default</span> ）。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">输出类型（YYC或VM），默认为VM。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">构建过程中要使用的CPU数量</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">在IDE中设置的目标设备的名称</td>
        </tr>
      </tbody>
    </table>
    <h2>实例</h2>
    <p>下面你可以找到所有平台的构建命令的例子。</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Opera GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>清洁Opera GX项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>运行Opera GX。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">窗户</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>清洁<span class="notranslate">Windows</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>为<span class="notranslate">Windows</span> 建立 VM -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>和 <span class="inline">PackageNsis</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>为Windows构建YYC-- <span class="inline">Run</span>, <span class="inline">PackageZip </span>和 <span class="inline">PackageNsis</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>清洁<span class="notranslate">macOS</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>在Mac上为<span class="notranslate">macOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>注意</strong>，在Mac上你需要使用mono来运行Igor，所以你需要在所有的命令前写上 <span class="inline"><strong>mono</strong></span> ，例如。<span class="inline">mono Igor.exe [options]</span></p>
      <p>在个人电脑上为<span class="notranslate">macOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>在Mac上构建YYC for<span class="notranslate">macOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>在PC上构建YYC for<span class="notranslate">macOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>清洁<span class="notranslate">Linux</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>在个人电脑上为<span class="notranslate">Linux</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>在PC上构建YYC for<span class="notranslate">Linux</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>清洁HTML5项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>构建HTML5文件夹（确保指定一个目标文件夹， <span class="inline">/tf)</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">基础设施</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>在Mac上为<span class="notranslate">iOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>在个人电脑上为<span class="notranslate">iOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>在Mac上构建YYC for<span class="notranslate">iOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>在PC上构建YYC for<span class="notranslate">iOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">安卓</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>清洁<span class="notranslate">Android</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>使用VM构建一个<span class="notranslate">Android</span> APK。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>使用YYC构建一个<span class="notranslate">Android</span> APK。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>清洁<span class="notranslate">tvOS</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>在Mac上为<span class="notranslate">tvOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>在个人电脑上为<span class="notranslate">tvOS</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>在Mac上构建YYC for<span class="notranslate">tvOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>在PC上构建YYC for<span class="notranslate">tvOS</span> 。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">淘宝网</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>清洁PS4项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>在PC上为PS4构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>在PC上为PS4构建YYC。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>清洁PS5项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>在PC上为PS5构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>在PC上为PS5构建YYC。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox One</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>清洁Xbox One项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>在PC上为Xbox One构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>在PC上为Xbox One构建YYC。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">X系列X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>清洁X系列X/S项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>为Xbox系列X/S构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>为Xbox X/S系列建造YYC。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">开关</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>清洁<span class="notranslate">Switch</span> 项目。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>在个人电脑上为<span class="notranslate">Switch</span> ，构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>在PC上为YYC构建虚拟机。</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>伊戈尔运行时间</h1>
    <p>下面是可以与Igor运行时一起使用的选项。</p>
    <table>
      <tbody>
        <tr>
          <th style="">选项</th>
          <th style="">描述</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">设置用于检索许可证信息的用户文件夹，以便<span data-keyref="GameMaker Name">GameMaker</span>知道哪些模块可以安装。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">将直接<span class="notranslate">path</span> 到一个许可证文件，可以作为设置用户文件夹的替代方案(<span class="inline">/uf</span>)。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">设置获取<span class="notranslate">runtime</span> 信息的URL（默认为稳定版）。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">设置本地<span class="notranslate">runtime</span> 安装文件夹，以列出已安装的<span class="notranslate">runtimes</span> 或安装新的运行时间</td>
        </tr>
      </tbody>
    </table>
    <p>以下是可以在Igor运行时使用的命令。</p>
    <h4>语法。</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">指挥部</th>
          <th style="">描述</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">列出<span class="notranslate">runtimes</span> ，在一个饲料中可用（版本号，构建日期/时间）。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">列出当前文件夹中可用的<span class="notranslate">runtimes</span> (<span class="inline">directory</span>= 完整的<span class="notranslate">path</span> 到文件夹)
            <br>
            <br>
            你可以指定一个目录来查找，但如果没有指定，它将默认为当前目录
            <br>
            <br>
            这也会检查该目录中是否有一个 <span class="inline">receipt.json</span> 文件和一个 <span class="inline">manifest</span> 文件夹（确保它实际上是一个<span class="notranslate">runtime</span> ）。 </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">打印出关于给定饲料的最新信息<span class="notranslate">runtime</span> ；还需要一个许可文件，以显示关于用户可用的模块的信息。
            <br>
            <br>
            <span class="inline">version</span>可以由一个<span class="notranslate">string</span> ，用于搜索feed的标题（例如： <span class="inline">&quot;739&quot;</span> ，显示所有版本号中包含739的build的信息），也可以是 <span class="inline">all</span> ，显示所有feed的信息。
            <br>
            <br>
            它将列出模块，每个模块的文件名为 <span class="inline">.zip</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">使用给定的 <span class="inline">version</span> 作为搜索过滤器，从给定的feed安装最新的<span class="notranslate">runtime</span> ；如果没有指定，它默认为最新的版本。它将获得用户在其许可证上的所有模块。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">计算所有已安装文件的校验和，并将其与写入清单的校验和进行比较 <span class="inline">folder</span> 。您可以指定一个要检查的文件夹，但如果没有指定，它将默认为当前目录。
            <br>
            <br>
            这将<span class="notranslate">flag</span> 任何与校验和不匹配的文件、丢失的文件和不应该存在的文件。
            <br>
            <br>
            请注意，清单文件本身并没有被验证，用户可以改变清单文件以匹配已安装的文件。 </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>伊戈尔测试</h1>
    <p>以下是可用于用Igor测试你的构建的选项。</p>
    <table>
      <tbody>
        <tr>
          <th style="">选项</th>
          <th style="">描述</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">设置用于检索许可证信息的用户文件夹，以便<span data-keyref="GameMaker Name">GameMaker</span>知道哪些模块可以安装。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">设置一个直接的<span class="notranslate">path</span> 到许可证文件，可以作为设置用户文件夹的替代方案 (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">设置一个直接的<span class="notranslate">path</span> 到一个 <span class="inline">devices.json</span> 文件，可以作为设置用户文件夹的替代方案(<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">测试使用的超时，以秒为单位，默认为120秒；该超时结束后，测试将被停止，并被标记为失败。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">在主<span class="notranslate">loop</span> ，在宣布测试通过之前要等待的秒数，默认为30秒。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">用于在用户文件夹的 <span class="inline">devices.json</span> 文件中查找设备名称。</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">逗号分隔的目标列表，格式为 <span class="inline">PLATFORM|DEVICE</span> ，例如： <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            如果你指定<strong>全部</strong>，测试将尝试运行 <span class="inline">devices.json</span> 文件中的每一个设备。 </td>
        </tr>
      </tbody>
    </table>
    <p>有一个命令，你可以用Igor来运行测试。</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>你必须指定一个测试目录或一个测试文件名。</p>
    <ul class="colour">
      <li>如果是一个目录，Igor将在该目录中寻找一个名为 <span class="inline">tests.json</span> 的文件
        <ul>
          <li>如果<strong>没有找到</strong>该文件，Igor将递归地搜索目录中的 <span class="inline">.yyz</span> 和 <span class="inline">.yyp</span> 文件。
            <ul>
              <li>找到的每个项目都将被构建并在Windows上运行</li>
              <li>它将等待，直到运行器到达主循环
                <ul>
                  <li>如果运行器在等待时间后仍在运行，则测试通过。</li>
                  <li>如果项目在超时时间内没有编译，或者在等待时间结束前崩溃，则测试失败。</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>如果<strong>发现</strong>一个<span class="inline">tests.json</span> 文件，Igor将运行该文件中描述的测试（见下面的例子）</li>
        </ul>
      </li>
      <li>或者，你可以提供一个直接的<span class="notranslate">path</span> ，而不是一个目录的 <span class="inline">tests.json</span> 文件。</li>
    </ul>
    <p> </p>
    <h1>测试.json文件</h1>
    <h2>格式</h2>
    <p> <span class="inline">tests.json</span> 文件必须具有以下格式。</p>
    <ul class="colour">
      <li>该JSON文件应包含一个对象数组</li>
      <li>每个<span class="notranslate">object</span> 应该描述一个测试
        <ul>
          <li>测试<span class="notranslate">object</span> ，必须包含这些键。
            <ul>
              <li><span class="inline">name</span>:用于报告测试是通过还是失败的一个名称。</li>
              <li><span class="inline">path</span>:一个<span class="notranslate">path</span> ，用于测试的 <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> 文件或文件夹。</li>
              <li><span class="inline">command</span>:测试的Igor命令（<span class="inline">Run</span>, <span class="inline">CreatePackage</span>, 等等，如上所述）。</li>
            </ul>
          </li>
          <li>测试<span class="notranslate">object</span> ，也可以包含这些键。
            <ul>
              <li><span class="inline">platform</span>:直接传递给Igor以进行测试</li>
              <li><span class="inline">device</span>: <span class="inline">devices.json</span> 文件中的设备名称</li>
              <li><span class="inline">target</span>:<span class="inline">PLATFORM|TARGET&quot;</span> 格式的目标，例如：&quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>:包括编译和运行在内的整个测试的超时；如果超过了，测试将被停止并被标记为失败。</li>
              <li><span class="inline">waittime</span>:进入主<span class="notranslate">loop</span> ，在决定测试是否通过之前要等待的时间长度。</li>
              <li><span class="inline">owner</span>：如果该测试失败，将向用户发送电子邮件的电子邮件地址</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>例子</h2>
    <p>下面是一个 <span class="inline">tests.json</span> 文件的例子。</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">回来了。<a data-xref="{title}" href="Runner_Details/Runner_Details.htm">运行器和编译器</a></div>
          <div style="float:right">下一步。<a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">编译器批处理文件/脚本</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2022 All Rights Reserved</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>