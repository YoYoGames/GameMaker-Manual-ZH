<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>媒介物</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how vectors work" />
  <meta name="rh-index-keywords" content="Vectors" />
  <meta name="search-keywords" content="Vectors,vector maths" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>媒介物</h1>
  <p>在创建任何复杂的游戏时，在某些时候你可能不得不处理<strong>向量</strong>。它们被用于物理学、人工智能、三角学和许多其他情况，但什么是矢量？嗯，简单地说，矢量是一个<em>有方向的量</em>。让我们先来看看一个一维矢量--它就像一个单一的数字--用箭头画一条数字线，从0开始到5结束，这就是矢量 &quot;a&quot;，等于5，如果我们再画一个箭头，从5开始到8结束，我们就有矢量 &quot;b&quot;，等于3。</p>
  <p><img>你应该意识到，一个向量从哪里开始并不重要，重要的是它有多长，朝什么方向走。因此，向量 &quot;b &quot;从5开始，长3个单位，指向 &quot;右边&quot;，使其与从0开始到3的向量相同。现在，你也可以把这些向量加在一起，把两个向量 &quot;a &quot;和 &quot;b &quot;端到端，得到向量 &quot;c&quot;，等于8。负数怎么处理？好吧，如果在上图中，指向 &quot;右边 &quot;的向量对应的是一个正数，你可以看到指向 &quot;左边 &quot;的向量对应的是一个负数，这使得一个一维向量只不过是一个有符号（+/-）的数字。这解释了矢量的基本概念：只有<em>长度</em>和<em>方向</em>（本例中的 &quot;左 &quot;或 &quot;右&quot;）才算数，没有位置。</p>
  <p>那么，二维向量又是怎么回事呢？好吧，我们可以认为它们不仅由 &quot;左 &quot;和 &quot;右 &quot;组成，而且由 &quot;上 &quot;和 &quot;下 &quot;组成。</p>
  <p><img>现在，这些还不是真正的向量，因为我们还必须用它们的起点和终点坐标把它们缩小。看一下矢量 &quot;a&quot;，我们可以看到它的起始坐标是[2,2]，终点坐标是[4,3]，所以为了得到这个矢量，我们需要用起始坐标减去终点坐标来缩小它。</p>
  <p class="code">a = [(x2-x1), (y2-y1)] = [(4-2), (3-2)] = [2,1]</p>
  <p>现在让我们对矢量b做同样的处理。</p>
  <p class="code">b = [(-1.2 -(-3.2)) ,(2.1 - 1.1)] = [2 ,1]</p>
  <p>注意到什么了吗？这两个向量是一样的!这又一次证明了一个矢量没有位置，只有方向和长度，我们可以围绕本地[0,0]轴画出这些矢量的相对位置。</p>
  <p><img>这意味着一个二维矢量是由两个值定义的，即相对于本地[0,0]轴的 &quot;x &quot;和 &quot;y &quot;位置。那么三维矢量呢？嗯，它们有一个额外的 &quot;深度 &quot;维度需要考虑，并将被计算为围绕本地轴的 &quot;x&quot;、&quot;y &quot;和 &quot;z &quot;位置，就像这样。</p>
  <p><img><span data-keyref="GameMaker Name">GameMaker</span>中使用矢量的一个很好的例子是<span class="notranslate">room</span> 编辑中的物理学<strong>重力</strong>属性。重力被计算为围绕[0,0]位置的一个矢量。因此，如果你将重力定义为[x0, y10]，那么重力将以10的力量<em>向下</em>。</p>
  <p>通常情况下，向量可以在很多情况下使用，但有时你想限制它们的值（比如处理角度时），这就是我们对它们<strong>进行归一化 </strong>的原因。这本质上是一种数学技巧，用于将长度为<em>n</em>的向量转换为长度为1的向量，也就是说，向量成分被<em>归一化 </em>为0和1之间。</p>
  <p><img>要计算一个归一化的向量，我们必须先有原始的向量分量，然后用它们来得到向量的长度。然后我们用每个矢量分量除以这个长度，得到归一化的矢量分量，形成归一化的矢量，其中<strong>所有坐标的平方之和等于1</strong>。 下面是方法。</p>
  <p><img>首先，我们取矢量的坐标并得到分量。</p>
  <p class="code">vx = (x2 - x1) = (7 - 1) = 6<br />
    vy = (y2 - y1) = (4 - 1) = 3</p>
  <p>然后我们用这些值来计算矢量的长度。</p>
  <p class="code">len = sqr(vx2 + vy2); // = sqr(36 + 9) = sqr(45) = 6.708203932499369</p>
  <p>现在，这给了我们矢量 &quot;a &quot;的确切长度，所以让我们用它来归一化两个矢量分量 <span class="inline">vx</span> 和 <span class="inline">vy</span> 。</p>
  <p class="code">vx = (vx/len); // = (6 / 6.708203932499369) = 0.8944271909999159<br />
    vy = (vy/len); // = (3 / 6.708203932499369) = 0.4472135954999579</p>
  <p>很好！我们现在已经将矢量的分量归一化了。我们现在已经将矢量的分量归一化了！但是在GameMaker中，这有什么实际用途呢？但在<span data-keyref="GameMaker Name">GameMaker</span>的背景下，这有什么实际用处呢？好吧，让我们给你一个实际的例子......</p>
  <p>假设你有一个游戏，玩家必须向敌人射击，你需要知道子弹<span class="notranslate">object</span> ，每一步要沿x和y轴移动多少才能击中它。</p>
  <p><img>为此，你将使用玩家和敌人的坐标来获得矢量分量和长度，然后你将把它们归一化，得到一个介于0和1之间的值，最后乘以你希望子弹每一步移动的速度。这最后的两个值，你将存储并添加到每一步的起始X和Y坐标中。听起来很复杂？其实不然，请看（为了简单起见，数值已被四舍五入到小数点后一位）。</p>
  <p class="code">px = 100;<br />
    py = 425;<br />
    ex = 356;<br />
    ey = 83;<br />
    bullet_speed = 5;<br />
    <br />
    vx = (ex - px); // = 256<br />
    vy = (ey - py); // = -342<br />
    <br />
    len = sqrt(vx2 + vy2); // = sqrt(65536 + 116964) = 427.2<br />
    <br />
    vx = vx / len; // = 0.6<br />
    vy = vy / len; // = 0.8<br />
    <br />
    speed_x = vx * bullet_speed; // = 3<br />
    speed_y = vy * bullet_speed; // = 4
  </p>
  <p>因此，为了击中目标，我们需要在子弹的X坐标上加3，在它的Y坐标上加4，每一步都是如此。</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">返回。<a href="Additional_Information.htm">其他信息</a></div>
        <div style="float:right">下一步。<a href="Guide_To_Using_Buffers.htm">缓冲器使用指南</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright<span class="notranslate">YoYo Games Ltd.</span> 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Vectors
Vector Maths
-->
  <!-- TAGS
vector_maths
-->
</body>
</html>